searchState.loadedDescShard("twitch_oauth2", 0, "github crates-io docs-rs\nAuthorization URL (<code>https://id.twitch.tv/oauth2/authorize</code>) …\nMatches true if all validators passed inside return true\nView analytics data for the Twitch Extensions owned by the …\nView analytics data for the games owned by the …\nMatches true if <strong>any</strong> validator passed inside returns true\nAn App Access Token from the OAuth client credentials flow\nView Bits information for a channel.\nAllows the client’s bot users access to a channel.\nRun commercials on a channel.\nManage ads schedule on a channel.\nManage a channel’s broadcast configuration, including …\nManage a channel’s Extension configuration, including …\nManage Guest Star for your channel.\nAdd or remove the moderator role from users in your …\nManage a channel’s polls.\nManage of channel’s Channel Points Predictions\nManage a channel raiding another channel.\nManage Channel Points custom rewards and their redemptions …\nManage a channel’s stream schedule.\nManage a channel’s videos, including deleting videos.\nAdd or remove the VIP role from users in your channel.\nPerform moderation actions in a channel. The user …\nRead the ads schedule and details on your channel.\nRead charity campaign details and user donations on your …\nView a list of users with the editor role for a channel.\nView Creator Goals for a channel.\nRead Guest Star details for your channel.\nView Hype Train information for a channel.\nView a channel’s polls.\nView a channel’s Channel Points Predictions.\nView Channel Points custom rewards and their redemptions …\nView an authorized user’s stream key.\nView a list of all subscribers to a channel and check if a …\nRead the list of VIPs in your channel.\nRead all subscribers to your channel.\nSend live stream chat and rooms messages.\nView live stream chat and rooms messages.\nManage Clips for a channel.\nDevice URL (<code>https://id.twitch.tv/oauth2/device</code>) for …\ndeserialization failed\nBuilder for OAuth device code flow\nBuilder for OAuth implicit code flow\nView a channel’s moderation data including Moderators, …\nSend announcements in channels where you have the …\nManage messages held for review by AutoMod in channels …\nManage a broadcaster’s AutoMod settings\nBan and unban users.\nManage a broadcaster’s list of blocked terms.\nDelete chat messages in channels where you have the …\nView a broadcaster’s chat room settings.\nManage Guest Star for channels where you are a Guest Star …\nManage a broadcaster’s Shield Mode status.\nManage a broadcaster’s shoutouts.\nManage a broadcaster’s unban requests.\nManage a broadcaster’s chat warnings.\nView a broadcaster’s AutoMod settings.\nRead the list of bans or unbans in channels where you have …\nView a broadcaster’s list of blocked terms.\nRead deleted chat messages in channels where you have the …\nView a broadcaster’s chat room settings.\nView the chatters in a broadcaster’s chat room.\nRead the followers of a broadcaster.\nRead Guest Star details for channels where you are a Guest …\nRead the list of moderators in channels where you have the …\nView a broadcaster’s Shield Mode status.\nView a broadcaster’s shoutouts.\nRead chat messages from suspicious users and see users …\nView a broadcaster’s unban requests.\nRead the list of VIPs in channels where you have the …\nView a broadcaster’s chat warnings.\nMatches true if all validators passed inside matches false\nreturned content is not <code>application/json</code>, found <code>{found}</code>\nOther scope that is not implemented.\ntwitch returned an unexpected status code: {0}\nRevokation URL (<code>https://id.twitch.tv/oauth2/revoke</code>) for …\nErrors from parsing responses\nScopes for twitch.\nA scope\nToken URL (<code>https://id.twitch.tv/oauth2/token</code>) for …\ntwitch returned an error\nTrait for twitch tokens to get fields and generalize over …\nAllows client’s bot to act as this user.\nManage a user object.\nEdit your channel’s broadcast configuration, including …\n[DEPRECATED] Was previously used for “Create User …\nManage the block list of a user.\nUpdate the color used for the user’s name in chat.Update …\nRead whispers that you send and receive, and send whispers …\nView the block list of a user.\nView a user’s broadcasting configuration, including …\nView live stream chat and room messages.\nView a user’s email address.\nView emotes available to a user\nView the list of channels a user follows.\nRead the list of channels you have moderator privileges in.\nView if an authorized user is subscribed to specific …\nReceive whispers sent to your user.\nAn User Token from the OAuth implicit code flow or OAuth …\nBuilder for OAuth authorization code flow\nSend messages in a chat room.\nValidation URL (<code>https://id.twitch.tv/oauth2/validate</code>) for …\nToken validation returned from …\nA validator is a way to check if an array of scopes …\nSend whisper messages.\nView your whisper messages.\nThe access token used to authenticate requests with\nThe access token used to authenticate requests with\nAdd a single scope to request\nAdd a single scope to request\nCreate a <code>UserTokenBuilder</code> to get a token with the OAuth …\nProvides different http clients\nClient ID associated with the token. Twitch requires this …\nClient ID associated with the token. Twitch requires this …\nCheck if the CSRF is valid\nCheck if the CSRF is valid\nGet current lifetime of token.\nLifetime of the token\nEnable or disable function to make the user able to switch …\nEnable or disable function to make the user able to switch …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAssemble token and validate it. Retrieves <code>client_id</code> and …\nCreate a UserToken from an existing active user token. …\nAssemble token without checks.\nAssemble token without checks.\nAssemble token from twitch responses.\nAssemble token from twitch responses.\nCreate a UserToken from an existing active user token. …\nGenerate the URL to request a code.\nGenerate the URL to request a token.\nGenerate an app access token via OAuth client credentials …\nGet the request for getting an app access token.\nGet the request for getting a <code>DeviceCodeResponse</code>\nGenerate the code with the help of the authorization code\nGenerate the code with the help of the hash.\nGet the request for getting a TwitchTokenResponse, to be …\nGet the request for getting a <code>TwitchTokenResponse</code>, to be …\nRepresentation of oauth2 flow in <code>id.twitch.tv</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether or not the token is expired.\nGet the username associated to this token\nUsername of user associated with this token\nUsername associated with the token\nGenerate a user token from mock-api\nToken will never expire\nCreate a <code>UserTokenBuilder</code>\nCreate a <code>ImplicitUserTokenBuilder</code>\nCreate a <code>DeviceUserTokenBuilder</code>\nCreate a new token\nParse the response from the device code request\nRefresh this token, changing the token to a newer one\nThe refresh token used to extend the life of this user …\nThe refresh token used to extend the life of this user …\nRevoke the token. See …\nModule for all possible scopes in twitch.\nRetrieve scopes attached to the token\nScopes attached to the token.\nAdd scopes to the request\nAdd scopes to the request\nSet the client secret, only necessary if you have one\nSet the client secret\nStart the device code flow\nGet the AccessToken for authenticating\nGet the type of token.\nTwitch token types\nFinish the device code flow, granting you a token if the …\nTypes used in OAUTH2 flow.\nGet the user id associated to this token\nUser ID of the user associated with this token\nUser ID associated with the token\nValidate this token. Should be checked on regularly, …\nA validator is a way to check if a slice of scopes matches …\nFinish the device code flow by waiting for the user to …\nFound <code>Content-Type</code> header\nA client that can do OAUTH2 requests\nError returned by the client\ncould not construct header name\ncould not construct header value\nsurf failed to do the request: {0}\nPossible errors from <code>Client::req()</code> when using the surf …\nThe User-Agent <code>product</code> of this crate.\nuri could not be translated into an url.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSend a request\nResponse from the device code flow\nTwitch’s representation of the oauth flow for errors\nTwitch’s representation of the oauth flow.\nGet the access token from this response\nAccess token\nThe identifier for a given user.\nDescription of the error message.\nGet the expires in from this response\nTime (in seconds) until token expires\nTime until the code is no longer valid\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a TwitchTokenResponse from a http::Response\nTime until another valid code can be requested\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMessage attached to error\nGet the refresh token from this response\nToken that can be used to refresh\nGet the scopes from this response\nScopes attached to token\nStatus code of error\nThe code that the user will use to authenticate\nThe address you will send users to, to authenticate\nView analytics data for the Twitch Extensions owned by the …\nView analytics data for the games owned by the …\nView Bits information for a channel.\nAllows the client’s bot users access to a channel.\nRun commercials on a channel.\nManage ads schedule on a channel.\nManage a channel’s broadcast configuration, including …\nManage a channel’s Extension configuration, including …\nManage Guest Star for your channel.\nAdd or remove the moderator role from users in your …\nManage a channel’s polls.\nManage of channel’s Channel Points Predictions\nManage a channel raiding another channel.\nManage Channel Points custom rewards and their redemptions …\nManage a channel’s stream schedule.\nManage a channel’s videos, including deleting videos.\nAdd or remove the VIP role from users in your channel.\nPerform moderation actions in a channel. The user …\nRead the ads schedule and details on your channel.\nRead charity campaign details and user donations on your …\nView a list of users with the editor role for a channel.\nView Creator Goals for a channel.\nRead Guest Star details for your channel.\nView Hype Train information for a channel.\nView a channel’s polls.\nView a channel’s Channel Points Predictions.\nView Channel Points custom rewards and their redemptions …\nView an authorized user’s stream key.\nView a list of all subscribers to a channel and check if a …\nRead the list of VIPs in your channel.\nRead all subscribers to your channel.\nSend live stream chat and rooms messages.\nView live stream chat and rooms messages.\nManage Clips for a channel.\nView a channel’s moderation data including Moderators, …\nSend announcements in channels where you have the …\nManage messages held for review by AutoMod in channels …\nManage a broadcaster’s AutoMod settings\nBan and unban users.\nManage a broadcaster’s list of blocked terms.\nDelete chat messages in channels where you have the …\nView a broadcaster’s chat room settings.\nManage Guest Star for channels where you are a Guest Star …\nManage a broadcaster’s Shield Mode status.\nManage a broadcaster’s shoutouts.\nManage a broadcaster’s unban requests.\nManage a broadcaster’s chat warnings.\nView a broadcaster’s AutoMod settings.\nRead the list of bans or unbans in channels where you have …\nView a broadcaster’s list of blocked terms.\nRead deleted chat messages in channels where you have the …\nView a broadcaster’s chat room settings.\nView the chatters in a broadcaster’s chat room.\nRead the followers of a broadcaster.\nRead Guest Star details for channels where you are a Guest …\nRead the list of moderators in channels where you have the …\nView a broadcaster’s Shield Mode status.\nView a broadcaster’s shoutouts.\nRead chat messages from suspicious users and see users …\nView a broadcaster’s unban requests.\nRead the list of VIPs in channels where you have the …\nView a broadcaster’s chat warnings.\nOther scope that is not implemented.\nScopes for twitch.\nAllows client’s bot to act as this user.\nManage a user object.\nEdit your channel’s broadcast configuration, including …\n[DEPRECATED] Was previously used for “Create User …\nManage the block list of a user.\nUpdate the color used for the user’s name in chat.Update …\nRead whispers that you send and receive, and send whispers …\nView the block list of a user.\nView a user’s broadcasting configuration, including …\nView live stream chat and room messages.\nView a user’s email address.\nView emotes available to a user\nView the list of channels a user follows.\nRead the list of channels you have moderator privileges in.\nView if an authorized user is subscribed to specific …\nReceive whispers sent to your user.\nSend messages in a chat room.\nSend whisper messages.\nView your whisper messages.\nGet a vec of all defined twitch Scopes.\nGet a slice of all defined twitch Scopes.\nGet the scope as a static string slice.\nGet the scope as a borrowed string.\nGet a description for the token\nMake a scope from a cow string\nGet the scope as a validator.\nValidator used for checking scopes in a token.\nMatches true if all validators passed inside return true\nMatches true if <strong>any</strong> validator passed inside returns true\nBorrowed data.\nMatches true if all validators passed inside matches false\nOwned data.\nA scope\nHack for making <code>T: Sized</code>\nA validator is a way to check if an array of scopes …\nA collection of validators\nCreate a Validator which matches if all validators passed …\nCreate a Validator which matches if <strong>any</strong> validator passed …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecks if the given scopes match the predicate.\nCreate a Validator which matches if all validators passed …\nCreate a Validator which matches if the scope is present.\nAn App Access Token from the OAuth client credentials flow\nToken for server-to-server requests.\nTypes of bearer tokens\nBuilder for OAuth device code flow\nBuilder for OAuth implicit code flow\nTrait for twitch tokens to get fields and generalize over …\nAn User Token from the OAuth implicit code flow or OAuth …\nToken for making requests in the context of an …\nBuilder for OAuth authorization code flow\nToken validation returned from …\nThe access token used to authenticate requests with\nThe access token used to authenticate requests with\nClient ID associated with the token. Twitch requires this …\nClient ID associated with the token. Twitch requires this …\nErrors\nGet current lifetime of token.\nLifetime of the token\nReturns the argument unchanged.\nAssemble a a validated token from a response.\nCalls <code>U::from(self)</code>.\nReturns whether or not the token is expired.\nGet the username associated to this token\nUsername of user associated with this token\nUsername associated with the token\nToken will never expire\nRefresh this token, changing the token to a newer one\nThe refresh token used to extend the life of this user …\nThe refresh token used to extend the life of this user …\nRevoke the token. See …\nRetrieve scopes attached to the token\nScopes attached to the token.\nGet the AccessToken for authenticating\nGet the type of token.\nGet the user id associated to this token\nUser ID of the user associated with this token\nUser ID associated with the token\nValidate this token. Should be checked on regularly, …\nGeneral errors for talking with twitch, used in …\ncould not parse response when getting exchange token\nrequest for exchange token failed\nErrors for <code>DeviceUserTokenBuilder</code>\nthe device code has expired\nErrors for ImplicitUserTokenBuilder::get_user_token\ngiven token is not of the correct token type: {0}\nno client secret found\nno device code found, exchange not started\nno expiration found on new token\nno refresh token found\ntoken is not authorized for use\nErrors for TwitchToken::refresh_token\nrequest for token failed\nfailed to request validation\nfailed to do revokation\nrequest when refreshing token failed\nrequest for user token failed\ncould not parse response when getting app access token\ncould not parse response when validating token\ncould not parse response when revoking token\ncould not parse response when refreshing token.\ncould not parse response when getting user token\nErrors for AccessToken::revoke_token\nstate CSRF does not match when exchanging user token\nstate CSRF does not match\ncould not parse response when getting user token\nrequest for user token failed\ntwitch returned an error: {error:?} - {description:?}\nErrors for <code>UserTokenBuilder::get_user_token</code> and …\nErrors for AccessToken::validate_token and …\ncould not get validation for user token\ncould not get validation for token\ncould not get validation for token\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this error from a infallible to another\nCheck if the error is due to the authorization request …\nDescription of error\nError type\nAn Access Token\nAn Access Token\nA Client Id\nA Client Id\nA Client Secret\nA Client Secret\nA Csrf Token\nA Csrf Token\nA Refresh Token\nA Refresh Token\nProvides access to the underlying value as a string slice.\nProvides access to the underlying value as a string slice.\nProvides access to the underlying value as a string slice.\nProvides access to the underlying value as a string slice.\nProvides access to the underlying value as a string slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a new ClientId from a static reference\nTransparently reinterprets the static string slice as a …\nConstructs a new ClientSecret from a static reference\nTransparently reinterprets the static string slice as a …\nConstructs a new AccessToken from a static reference\nTransparently reinterprets the static string slice as a …\nConstructs a new RefreshToken from a static reference\nTransparently reinterprets the static string slice as a …\nConstructs a new CsrfToken from a static reference\nTransparently reinterprets the static string slice as a …\nTransparently reinterprets the string slice as a …\nTransparently reinterprets the string slice as a …\nTransparently reinterprets the string slice as a …\nTransparently reinterprets the string slice as a …\nTransparently reinterprets the string slice as a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>ClientId</code> into a <code>Box&lt;ClientIdRef&gt;</code>\nConverts this <code>ClientSecret</code> into a <code>Box&lt;ClientSecretRef&gt;</code>\nConverts this <code>AccessToken</code> into a <code>Box&lt;AccessTokenRef&gt;</code>\nConverts this <code>RefreshToken</code> into a <code>Box&lt;RefreshTokenRef&gt;</code>\nConverts this <code>CsrfToken</code> into a <code>Box&lt;CsrfTokenRef&gt;</code>\nConverts a <code>Box&lt;ClientIdRef&gt;</code> into a <code>ClientId</code> without …\nConverts a <code>Box&lt;ClientSecretRef&gt;</code> into a <code>ClientSecret</code> …\nConverts a <code>Box&lt;AccessTokenRef&gt;</code> into a <code>AccessToken</code> without …\nConverts a <code>Box&lt;RefreshTokenRef&gt;</code> into a <code>RefreshToken</code> …\nConverts a <code>Box&lt;CsrfTokenRef&gt;</code> into a <code>CsrfToken</code> without …\nConstructs a new ClientId\nConstructs a new ClientSecret\nConstructs a new AccessToken\nConstructs a new RefreshToken\nConstructs a new CsrfToken\nMake a new random CSRF token.\nMake a new random CSRF token with given amount of bytes\nRefresh the token, call if it has expired.\nGet the request needed to refresh this token.\nRevoke the token.\nGet the request needed to revoke this token.\nGet the secret from this string.\nGet the secret from this string.\nGet the secret from this string.\nGet the secret from this string.\nUnwraps the underlying <code>String</code> value\nUnwraps the underlying <code>String</code> value\nUnwraps the underlying <code>String</code> value\nUnwraps the underlying <code>String</code> value\nUnwraps the underlying <code>String</code> value\nValidate this token.\nGet the request needed to validate this token.")