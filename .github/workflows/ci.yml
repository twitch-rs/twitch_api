name: CI
env:
  CI_TWITCH_API_FEATURES: "twitch_oauth2/all all unsupported deny_unknown_fields ureq"
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main, staging, trying]
jobs:
  ci:
    name: CI
    needs: [test, fmt, clippy, docs, release]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, fmt, clippy, docs]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # fetch tags for publish
          # ssh-key: "${{ secrets.COMMIT_KEY }}" # use deploy key to trigger workflow on tag
      - uses: Swatinem/rust-cache@v2
      - run: cargo xtask release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [1.64.0, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - name: Test twitch_api
        run: cargo xtask test
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Run fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo xtask check --locked -- --deny warnings
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check twitch_api docs
        run: cargo xtask doc
