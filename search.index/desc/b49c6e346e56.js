rd_("AaThing that failedBoThe x-coordinate where the extension is placed.0BoThe y-coordinate where the extension is placed.0BcThe response could not be collectedAgID of the subscription.0jConduit IDiShard ID.00AeThe id of the stream.0AiThe ID of the Redemption.AfThe reward identifier.00AjThe redemption identifier.0ChAn ID that identifies the donation. The ID is unique \xe2\x80\xa6BkAn ID that identifies the charity campaign.00BiAn ID that uniquely identifies this goal.00AbThe Hype Train ID.00oID of the poll.00AmChannel Points Prediction ID.000AlThe ID of the unban request.0222222BjAn ID that uniquely identifies this emote.CkAn ID that identifies this version of the badge. The ID \xe2\x80\xa60BhThe ID of the associated community gift.666666777777<mThe emote ID.=<<<<<<;;<;;:99999:95555555544443CmAn ID that uniquely identifies this WebSocket connection. \xe2\x80\xa6BbDelete this eventsub subscription.AoID of the subscription created.kConduit ID.ChThe subscription ID for the subscription you want to \xe2\x80\xa612011BdAn ID that identifies the extension.ChUser ID. Multiple user IDs can be specified. Limit: 100.lUser\xe2\x80\x99s ID.2221022ChID of the Content Classification Labels that must be \xe2\x80\xa60nID of the tag.BbAn ID that identifies this marker.0jStream ID.10120iEmote ID.AmID of the chat badge version.A`ID of the emote.00220AdGame or category ID.jChannel ID10BcRetreive a single event by event IDhEvent ID10AaUnban request ID.BnThe ID of the blocked term you want to delete.CaAn ID that uniquely identifies this blocked term.200126C`Game ID. At most 100 id values can be specified.707AkSet the id for the request.BjThe ID of the streaming segment to delete.CeThe ID of the stream segment to return. Maximum: 100.BcThe ID for the scheduled broadcast.AaGame/category ID.32BjThe ID of the streaming segment to update.A`ID of the rewardCjID of the Custom Reward to delete, must match a Custom \xe2\x80\xa6CjWhen used, this parameter filters the results and only \xe2\x80\xa62BkA list of IDs to filter the redemptions by.AiThe ID of the redemption.CjID of the Custom Reward to update, must match a Custom \xe2\x80\xa6CnID of the Custom Reward Redemption to update, must match a \xe2\x80\xa6654632AlThe ID of the custom reward.231AnUnique identifier for the CCL.0BmID of the emote tier. Possible tiers are: \xe2\x80\xa6CdAn ID that uniquely identifies the charity campaign.ChAn ID that identifies the donation. The ID is unique \xe2\x80\xa610BiID of the clip being queried. Limit: 100.AmID of the clip being queried.BhAn ID that uniquely identifies the clip.210BcRetreive a single event by event IDBiAn ID that uniquely identifies this goal.1011hEvent IDBbThe distinct ID of this Hype TrainoID of the poll.CiID of a poll. Filters results to one or more specific \xe2\x80\xa6111AbID for the choice.12CfID of a Prediction. Filters results to one or more \xe2\x80\xa6AeID of the Prediction.0AeID of the prediction.AcID for the outcome.32nID of the tag.000hTeam ID.BfGet team with this <code>TeamId</code>1CiID of the video being queried. Limit: 100. If this is \xe2\x80\xa6A`ID of the video.BkID of the video(s) to be deleted. Limit: 5.21jId of termA`ID of hype trainkID of emoteAjID of badge in this objectAfChat ID of the messageAgId or type of the badgeCaID of the redemption. Also returned in twitch IRCmID of reward.AoBASE64 representation of reward6jID of raid00CjRepresentation of oauth2 flow in <code>id.twitch.tv</code>mThe emote ID.0AbID for the choice.AcID for the outcome.oID of the user.AdGame or category ID.nID of the userAjA term was added to a listBbFilter by all. Effectively a no-opoAll video typesChMatches true if all validators passed inside return true02DiMatches true if <strong>any</strong> validator passed inside returns true0AbA user was banned.0cBanBiMetadata associated with the ban command.AlFilter by from this day only0kA hex colorAeReward redemption maxAfA moderator was added.0cModBiMetadata associated with the mod command.CjMatches true if all validators passed inside matches false0cRedAmA collection over deref itemsnA subscription0BaReturn Values for Get Stream Tags0BeReturn Values for Get All Stream Tags10A`A VIP was added.0AjReturn Values for Get VIPs00AaUser added as VIPBiMetadata associated with the vip command.2oVideo on DemandClA viewer has redeemed an automatic channel points reward \xe2\x80\xa6CkA custom channel points reward has been created for the \xe2\x80\xa6CkA viewer has redeemed a custom channel points reward on \xe2\x80\xa6Cga user is given moderator privileges on a specified \xe2\x80\xa6Ana VIP is added to the channel.BgGet a vec of all defined twitch Scopes.A`All named colorsBnA viewer is banned from the specified channel.kGet the dayAmEnd index of emote in messageBeA poll ends on the specified channel.C`A subscription to the specified channel expires.BkA hype train ends on the specified channel.BdA specified broadcaster ends a goal.Cia running Guest Star session is ended by the host, or \xe2\x80\xa6BkA Prediction ends on the specified channel.CkA channel leaves a shared chat session or the session ends.BaA channel deactivates Shield ModeBnThe index of where the Emote ends in the text.0BnGet multiple user by their <code>UserId</code>BgGet games with specific exact id match.BfGet rewards with these ids. Maximum 50AnGet redemptions with these idsAjIDs of the polls to query.AeIDs of a Predictions.B`IDs of the videos being queried.AnID of the videos to be deletedDaReturns the number of bytes contained in this <code>Bytes</code>.BeReturns the length of the collection.BfCreate a new <code>TwitchClient</code>BgCreates a new empty <code>Bytes</code>.BbCreate a new wrapped tower serviceBcCreate a shard with a transport setBmThe user ID of the person receiving whispers.CkThe user ID for the user you want update notifications for.CjYour application\xe2\x80\x99s client id. The provided client_id \xe2\x80\xa60BaCreate a new ChannelChatMessageV1CjGet chat notifications on broadcasters channel reading \xe2\x80\xa6ClGet chat clear on broadcasters channel reading chat as a \xe2\x80\xa6ChGet chat clear user messages on broadcasters channel \xe2\x80\xa6CjGet chat message delete events on broadcasters channel \xe2\x80\xa6CjGet user message hold events on a broadcasters channel \xe2\x80\xa6ClGet user message update events on a broadcasters channel \xe2\x80\xa6BiCreate a new ChannelFollowV2 subscriptionCjGet notifications for updates on chat settings in this \xe2\x80\xa6CmGet notifications for guest star sessions in this channel \xe2\x80\xa6000CnGet moderation notifications in the specified channel as a \xe2\x80\xa60CfGet notifications for added moderators in this channelChGet notifications for removed moderators in this channelChGet shield mode end events for this channel as moderatorCjGet shield mode begin events for this channel as moderatorCaCreate a new <code>ChannelShoutoutCreateV1</code>CbCreate a new <code>ChannelShoutoutReceiveV1</code>CkGet notifications for messages from suspicious users in \xe2\x80\xa6CjGet notifications for updates from suspicious users in \xe2\x80\xa6CmGet notifications when unban requests are created in this \xe2\x80\xa6CnGet notifications when unban requests are resolved in this \xe2\x80\xa6C`Get notifications for added VIPs in this channelCbGet notifications for removed VIPs in this channelCgGet notifications for acknowledged warnings in this \xe2\x80\xa6CmGet notifications for sendd warnings in this channel as a \xe2\x80\xa6ChGet automod hold notifications for this channel as a \xe2\x80\xa60CiGet automod update notifications for messages in this \xe2\x80\xa6CjGet automod update notifications for this channel as a \xe2\x80\xa6CmGet notifications for updates on Automod settings in this \xe2\x80\xa6CjGet automod update notifications for permitted/blocked \xe2\x80\xa6AgConstructs a new CursorDlCreate a new <code>HelixClient</code> with a default <code>HttpClient</code>AeConduit body settingsBbCreate a new eventsub subscriptionChCreate a new <code>CreateEventSubSubscriptionBody</code>AiDelete a specific conduitAoRequest the shards of a conduit44BoCreate the state for a response and its requestAfCreate a new response.CgGets the active extensions that the broadcaster has \xe2\x80\xa6CkGet a list of all extensions (both active and inactive) \xe2\x80\xa6BmReturns an empty <code>GetUsersRequest</code>AkCreate a new update requestCeCreate a new specificaton for the user\xe2\x80\x99s extensionsAmCreate an empty specificationCcCreate an active extension with an ID and a versionCgCreate an active positioned extension with an ID, a \xe2\x80\xa6AaAdd a channel VIPAjData to set on the stream.CdCreate a new <code>ContentClassificationLabel</code>AbRemove channel VIPC`Create a new <code>StartCommercialRequest</code>BoStart a commercial in this broadcasters channelBfCreate a new CreateStreamMarkerRequestBmCreate a new stream marker with a descriptionBdGet chatters in broadcasters channelAfGet global chat badgesAaGet global emotesBnCreate a new <code>SendAShoutoutRequest</code>BnSend announcement in channel as this moderatorBnCreate a new announcement with specified colorC`Create a new <code>SendChatMessageRequest</code>BmSend a message in the broadcaster\xe2\x80\x99s channelCmUpdate the chat settings for the specified broadcaster as \xe2\x80\xa6AkUpdate the users chat colorAiWhere to add blocked termBlCreate a new <code>AddBlockedTermBody</code>AhAdd moderator on channelAjBan a user on this channelBeCreate a new <code>BanUserBody</code>C`Create a new <code>CheckAutoModStatusBody</code>AfRemove chat message(s)CeGet AutoMod settings in a broadcasters channel as \xe2\x80\xa6CgGet shield mode status in a broadcasters channel as \xe2\x80\xa6CnGet Unban Requests in a broadcasters channel filtered by a \xe2\x80\xa6CjCreate a new <code>ManageHeldAutoModMessagesRequest</code>CgCreate a new <code>ManageHeldAutoModMessagesBody</code>AcRemove blocked termA`Remove moderatorAhResolve an unban requestCnRemove the ban or timeout that was placed on the specified \xe2\x80\xa6CkUpdate the AutoMod settings on the specified channel as \xe2\x80\xa6AkWarn a user on this channelBjCreate a new <code>WarnChatUserBody</code>ClGet blocked terms in a broadcasters channel as specified \xe2\x80\xa6CjSet the shield mode status on specified channel as the \xe2\x80\xa6CfCreate a single scheduled broadcast or a recurring \xe2\x80\xa6CfDelete a single scheduled broadcast or a recurring \xe2\x80\xa6CfUpdate a single scheduled broadcast or a recurring \xe2\x80\xa6BkCreate a new <code>StartARaidRequest</code>BlCreate a new <code>SendWhisperRequest</code>AdCreate a new messageAlReward to create with title.A`Reward to deleteCiUpdate a Custom Reward created on the broadcaster\xe2\x80\x99s \xe2\x80\xa6CmUpdate the status of Custom Reward Redemption object on a \xe2\x80\xa6DaReturns an new <code>GetContentClassificationLabelsRequest</code>CeReturns an new <code>GetBitsLeaderboardRequest</code>AiGet available Cheermotes.BkCreate a new <code>CreatePollRequest</code>mPoll settingsBgCreate a new <code>NewPollChoice</code>BfMake a new <code>EndPollRequest</code>BdEnd a poll that is currently active.CaCreate a new <code>CreatePredictionRequest</code>ClCreate a Channel Points Prediction for a specific Twitch \xe2\x80\xa6BnCreate a new <code>NewPredictionOutcome</code>BlMake a new <code>EndPredictionRequest</code>BnEnd given prediction that is currently active.BdConstructs a new PredictionOutcomeIdAlConstructs a new TagLanguageBfCreate a <code>UserTokenBuilder</code>BnCreate a <code>ImplicitUserTokenBuilder</code>BlCreate a <code>DeviceUserTokenBuilder</code>AbCreate a new tokenAiConstructs a new ClientIdAmConstructs a new ClientSecretAlConstructs a new AccessTokenAmConstructs a new RefreshTokenAjConstructs a new CsrfTokenAgConstructs a new UserIdAlConstructs a new DisplayNameAiConstructs a new NicknameAfConstructs a new MsgIdB`Constructs a new CommunityGiftIdBdConstructs a new SharedChatSessionIdAjConstructs a new WhisperIdAiConstructs a new HexColorAkConstructs a new BadgeSetIdAlConstructs a new ChatBadgeIdAhConstructs a new EmoteIdDhConstruct a new <code>EmoteUrlBuilder</code> from a <code>EmoteId</code>AkConstructs a new EmoteSetIdAkConstructs a new EventSubIdAjConstructs a new ConduitIdAoConstructs a new ConduitShardIdAlConstructs a new ExtensionIdAnConstructs a new CreatorGoalIdAnConstructs a new BlockedTermIdAoConstructs a new UnbanRequestIdAiConstructs a new RewardIdAmConstructs a new RedemptionIdAgConstructs a new PollIdAmConstructs a new PollChoiceIdAmConstructs a new PredictionIdBdConstructs a new PredictionOutcomeIdAiConstructs a new StreamIdAkConstructs a new CategoryIdAfConstructs a new TagIdAgConstructs a new TeamIdAhConstructs a new VideoIdAgConstructs a new ClipIdB`Constructs a new StreamSegmentIdAlConstructs a new HypeTrainIdBbConstructs a new CharityCampaignIdBbConstructs a new CharityDonationIdAgConstructs a new IgdbIdBcConstructs a new GuestStarSessionIdB`Constructs a new GuestStarSlotIdAoConstructs a new StreamMarkerIdAjConstructs a new StreamKeyDcConstructs a new Timestamp if it conforms to <code>Timestamp</code>CmCreate a Validator which matches if all validators passed \xe2\x80\xa6C`Create a timestamp corresponding to current timenSend a request0Agtypes for subscriptionsAcURI to the endpointoUri to endpoint101010101010101010CaA URL that opens the video in Twitch Highlighter.0BgCreate an emote builder for this emote.00BaURL where the clip can be viewed.0AaURL of the video.0CdCreate a <code>EmoteUrlBuilder</code> for this emoteChsends a notification whenever Bits are used on a channelChA user\xe2\x80\x99s VIP status on a specified channel is changed.Afinformation about VOD.dBits00nThe color blue0dBlueoBody parameters00000dChatAkReturn Values for Get Clips0dDarkA`Deny the message0oEasy difficultyBgA game or category as defined by TwitchAkReturn Values for Get GamesAoReturn Values for Get Top GamesoHard difficultyAdChannel host startedkHttp failedCfThe guest is now live in the host\xe2\x80\x99s broadcasting \xe2\x80\xa6oStream is live.lA live videoiNo gifterAjThe user isn\xe2\x80\x99t monitoreddNone0ClThe path to the endpoint relative to the helix root. eg. \xe2\x80\xa60AkReturn Values for Get polls0AdResponse from a pingBaInformation about the raid event.AjA channel is being raided.0AhA user raids the channelBcResponse from the raid::Raid topic.dRaidAcA raid notificationBjMetadata associated with the raid command.4AiChat is now in slow mode.0AfSlow-mode chat enabledBjMetadata associated with the slow command.AhSort order of the videosdSpamdSubsAkReturn Values for Get TeamsCaA text fragment, see <code>Fragment::text</code>.AfA regular text messageCoA text fragment, see <code>AutomodMessageFragment::text</code>.lSort by timeAbWas auto-generatedAmUreq failed to do the requestAkReturn Values for Get Users0BbA user according to many endpointsAaA user was warnedBjMetadata associated with the warn command.AcFilter by this week0AoArguments for moderation_actionAjBits are used in a channelAhThe number of Bits used.AkThe number of bits cheered.AkThe amount of bits cheered.BdThe amount of Bits the user cheered.3321AnHelix endpoints regarding bitsAkReward to conductor of bitsAlBody sent to DELETE responseAjBody sent to POST response0AiBody sent to PUT response2110CgHelix endpoints regarding content classification cabelskChat eventsAnHelix endpoints regarding chatntypes for chatClError codes used to represent a specific error condition \xe2\x80\xa6BeCode for why the message was dropped.0CdHow much the subscription counts against your limit.0A`The reward cost.000000000011AfThe cost of the reward000000BiThe cost of the reward in channel points.1oCost of reward.iDark modeC`Twitch\xe2\x80\x99s response field for <code>data</code>.0ChThe specification for the user\xe2\x80\x99s extensions (which \xe2\x80\xa60BcData corresponding to topic messageAjData associated with replyAeDeny an unban requestAoReturns the argument unchangedkA user gives one or more gifted subscriptions in a channel.CfA broadcaster has started, progressed or ended a goal.CfThe number of points required to reach the next level.000000BjParticipation points needed for this levelBiParticipation points needed in this level1otypes for goalsBjA message was caught by automod for reviewlGet the hourCnContains metadata related to the chat badges in the badges \xe2\x80\xa60AaTeam description.BaCalls <code>U::from(self)</codehReturns an iterator over the collection.AaThe affected listChA user responds to a prediction on the specified channelAoThe human readable emote token.AgThe extension\xe2\x80\x99s name.000CmName of the emote a viewer types into Twitch chat for the \xe2\x80\xa6000000jGame name.00CmGame name. The name must be an exact match. For instance, \xe2\x80\xa6101AcGame/category name.AjLocalized name of the CCL.0AgGet team with this namejTeam name.AiDisplay name of the user.6BgPath to where the erroring key/value isCgPoll on a specific channel has been begun, ended or \xe2\x80\xa6AiPubSub messages for raidsCfA a broadcaster raids another broadcaster\xe2\x80\x99s channel.AmLeaderboard rank of the user.Ala warning is sent to a user.BaThe order to sort redemptions by.00CjSort order of the videos. Valid values: \xe2\x80\x9ctime\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa60CjSends an event notification when a broadcaster stops a \xe2\x80\xa6BdReward to conductor of subscriptionsAnHelix endpoints regarding tagsCnA list of channel-defined tags to apply to the channel. To \xe2\x80\xa6B`The tags applied to the channel.101AoThe tags applied to the stream.0011C`Unwraps the underlying <code>String</code> value000000000000000000000000000000000000000000000000A`Team informationAkInformation about the team.B`The body of the whisper message.0BbMessage sent in the unban request.AaGet the text dataAoThe chat message in plain text.AhMessage text in fragment000BlThe text of the resubscription chat message.AmThe text of the chat message.5543AjMessage text in a fragment00CfThe word or phrase to block from being used in the \xe2\x80\xa6BmText of the request from the requesting user.AkThe blocked word or phrase.10201oTerm definitionAnThe full message that was sentBbText associated with this fragment00CnThe tier of the subscription. Valid values are 1000, 2000, \xe2\x80\xa6CmThe tier of the subscription that ended. Valid values are \xe2\x80\xa6CcThe tier of subscriptions in the subscription gift.BfThe tier of the user\xe2\x80\x99s subscription.B`The tier level of the cheermote.ChThe tier of the Bits badge the user just earned. For \xe2\x80\xa643242351ClIf the emote_type is \xe2\x80\x9csubscriptions\xe2\x80\x9d, this indicates \xe2\x80\xa60CjSubscription tier. 1000 is tier 1, 2000 is tier 2, and \xe2\x80\xa6CnType of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier \xe2\x80\xa6010AeTier of mystery giftsBaTime when pubsub message was sentBhTime when the new Bits badge was earned.11111ntypes for timeBbSubscription types regarding usersBnFilter for unban requests from a specific userAcThe ID of the user.AmUser information of conductorAnUser that triggered the rewardAmtypes for user related thingsgUnknownlGet the yeareAdminAaAllow the message0AaReward is a badgegA badgejChat badgeCiA cheaply cloneable and sliceable chunk of contiguous \xe2\x80\xa6AcBits send via CheergA cheereCheer0AkMetadata for cheer messagesAlChat cleared for all viewerseCoralAdAn empty collection.hA Emote.0AaReward is a emoteAaAn emote fragmentBdReturn Values for Get Channel EmotesBhDescribed where in a message an emote isAlError returned by the clientCaErrors that can happen when assembling the clientCjhelix returned error {status:?} - {error}: {message:?} \xe2\x80\xa60000000002ChA notification with an event payload. Enumerates all \xe2\x80\xa60AfWas not auto-generatedoThe color green0eGreenBjLinks to the same image of different sizesAhLevel of cheermote imageBaDescription of a hype-train leveleLightAdFilter by this month0lA message ID0AaAn error occurredBmCovers other contribution methods not listed.CnAn unknown evaluation, contains the raw string provided by \xe2\x80\xa6kOther error0eOther3BdOther scope that is not implemented.Bntwitch returned an unexpected status code: {0}1223kOwned data.AmA collection over owned itemsBbDisplays in a box under the video.0AbPrime subscriptionA`A resubscription0CmThe guest has signaled they are ready and can be assigned \xe2\x80\xa6AkMetadata for reply messagesBkA rerun, i.e a highlight or saved broadcastgA rerunBbScopes needed by this subscriptionAoScopes needed for this endpoint0AkScopes needed by this topicgA scopeAbScopes for twitch.10BaGeneral information about a ShardBeHack for making <code>T: Sized</code>eStaffhA tag IDjTier 1 submTier 1. $4.99jTier 2 submTier 1. $9.99jTier 3 subnTier 1. $24.99AoInformation about tier of emoteClAll live guests are tiled within the browser source with \xe2\x80\xa6CnA logical partition of messages that clients may subscribe \xe2\x80\xa6AdA user was unbanned.0eUnbanBkMetadata associated with the unban command.AhA moderator was removed.0eUnmodBkMetadata associated with the unmod command.AbA VIP was removed.0AcUser removed as VIPBkMetadata associated with the unvip command.AlReturn Values for Get Videos0mSort by viewsBgSet the cursor to get a page of resultsChThe cursor used to get the next page of results. The \xe2\x80\xa6AmCursor for forward pagination01ClCursor for forward pagination: tells the server where to \xe2\x80\xa60000020020000002222000000002020CnCursor used to get next page of results. Pagination object \xe2\x80\xa6033131111111331122221111BgA poll begins on the specified channel.BmA hype train begins on the specified channel.BfA specified broadcaster begins a goal.Cna user runs a midroll commercial break, either manually or \xe2\x80\xa6Bithe host begins a new Guest Star session.BlA Prediction begins on the specified channelCjA channel becomes active in an active shared chat session.AoA channel activates Shield ModeC`The index of where the Emote starts in the text.0BdMetadata if this message is a cheer.00BgA user cheers on the specified channel.BeClears the buffer, removing all data.CjA moderator or bot clears all messages from the chat room.AoHelix endpoints regarding clipsCnThe color of the user\xe2\x80\x99s name in the chat room. This is a \xe2\x80\xa600AjColor of the announcement.1CkThe Hex color code that the user uses in chat for their \xe2\x80\xa6CjThe color used to highlight the announcement. Possible \xe2\x80\xa6BoThe color to use for the user\xe2\x80\x99s name in chat.102CkHex code for the color associated with the bits of that \xe2\x80\xa6BoColor for the outcome. Valid values: BLUE, PINKA`types for colors1ClNumber of results to be returned. Maximum: 100. Default: \xe2\x80\xa600AgAmount of mystery giftsCjThe number of seconds you want your broadcast buffered \xe2\x80\xa6AgStream delay in seconds101CeThe user\xe2\x80\x99s email. Only included if you have the \xe2\x80\xa60ClUser\xe2\x80\x99s email address. Returned if the request includes \xe2\x80\xa60hA Emote.BaEmote associated with the reward.1A`types for emotesCdReturns an empty <code>GetUsersFollowsRequest</code>BiUpdate nothing (returns the current user)BmReturns an empty <code>GetGamesRequest</code>A`An empty requestBdError message related to status code000000000CnThe error message associated with the request, or an empty \xe2\x80\xa6AgError for the key/valueBaDescription of the error message.AjError validating the token0AjError refreshing the tokenjError typeAoEventSub events and their typesCdExtra types not defined in <code>twitch_types</code>CfMaximum number of objects to return. Maximum: 100. \xe2\x80\xa60BbGet first result of this response.1111BhSet amount of results returned per page.0022CiThe maximum number of items to return per page in the \xe2\x80\xa633011133333310011CiNumber of values to be returned per page. Limit: 100. \xe2\x80\xa6CnMaximum number of objects to return. Maximum: 100 Default: \xe2\x80\xa6103151533332121CjThe maximum number of items to return per page in response03324CmThe maximum number of blocked terms to return per page in \xe2\x80\xa635775CmMaximum number of stream segments to return. Maximum: 25. \xe2\x80\xa60CeNumber of results to be returned when getting the \xe2\x80\xa6076679979999CnMaximum number of objects to return. Maximum: 20. Default: \xe2\x80\xa60008::CjNumber of values to be returned when getting videos by \xe2\x80\xa60BfFound <code>Content-Type</code> headerAoHelix endpoints regarding gamesBgHelix endpoints regarding creator goalsClA user\xe2\x80\x99s authorization has been granted to your client \xe2\x80\xa6BeHelix endpoints or the New Twitch APIBfHelix endpoint. See <code>helix</code>CgSet of custom images of 1x, 2x and 4x sizes for the \xe2\x80\xa600000000CnSet of custom images of 1x, 2x and 4x sizes for the reward \xe2\x80\xa6000CmSet image of reward in rewards &amp; challenges screen on \xe2\x80\xa6BeThe starting level of the Hype Train.BbCurrent level of hype train event.0100001BoThe level of severity. Measured between 1 to 4.000AlThe level of severity (1-4).112mCurrent levelCiLevel of classification, eg. how strongly related the \xe2\x80\xa6jLight modeCkUser login name. Multiple login names can be specified. \xe2\x80\xa6AdUser\xe2\x80\x99s login name.10BgLogin name of the user, not capitalizedAdUsername of the userBiGet the username associated to this tokenBkUsername of user associated with this tokenBbUsername associated with the token210AbLogin of the user.5mGet the monthBiGet games with specific exact name match.ChThe nonce that was passed in the request, if one was \xe2\x80\xa6CeOrder of the emotes as shown in the bits card, in \xe2\x80\xa60CkFields which are not part of the data response, but are \xe2\x80\xa60AhSet the panel extensionsCjA dictionary that contains the data for a panel extension.000CoParse string slice as an <code>Event</code>. Consider using \xe2\x80\xa6BaParse string slice as a response.AnMake a scope from a cow stringBkParse a string into a <code>UserType</code>BgHelix endpoints regarding channel pollsBeDefines layout of the url parameters.0BkSearch categories with the following query.BiSearch channels with the following query.AhURI encoded search queryAhURL encoded search query10BgHelix endpoints regarding channel raidsBdMetadata if this message is a reply.00BeMessage reply from topic subscription000000000000000BiThe sizes that the emote is available in.000000CiCreate a Validator which matches if the scope is present.BnLeaderboard score (number of Bits) of the userBlSubscription types regarding conduit shards.BoReturns a slice of self for the provided range.AoStart index of emote in messageCkSends an event notification when a broadcaster starts a \xe2\x80\xa6AjStart the device code flowClThe current state of the user after the update has taken \xe2\x80\xa600BgHelix endpoints regarding subscriptionsAmTerms being added or removed.BoEvents for Automod terms (allowed/denied words)BkThe list of terms that had a status change.00BkAn array of Cheermotes with their metadata.0AaThe reward title.00B`Question displayed for the poll.00BhTitle for the Channel Points Prediction.000AmThe channel\xe2\x80\x99s stream title.022222200333333A`The reward name.22222222CgTitle of the stream. Value must not be an empty string.AcTitle of the stream101mStream title.00AbTitle of the badgemchannel title0CkTitle for the scheduled broadcast. Maximum: 140 characters.BbTitle for the scheduled broadcast.11AgThe title of the reward000000AoThe title of the custom reward.1AbTitle of the clip.0ChQuestion displayed for the poll. Maximum: 60 characters.CfText displayed for the choice. Maximum: 25 characters.??10AnText displayed for the choice.B`Question displayed for the poll.AiTitle for the Prediction.0CaTitle for the Prediction. Maximum: 45 characters.4AkText displayed for outcome.2AcTitle of the video.0AgTitle or Name of rewardlTitle of VOD73ClUser ID. The request returns information about users who \xe2\x80\xa6CbID of the user being followed by the from_id user.10ChCreate a timestamp corresponding to the start of the \xe2\x80\xa6AdToken for this emoteBfGet the AccessToken for authenticating0mTopic message000000000000000BkTotal points contributed to the hype train.00CeThe number of subscriptions in the subscription gift.BeNumber of subscriptions being gifted.11222AfThe total contributed.333CdResponse would return this many results if fully \xe2\x80\xa6CmTotal number of subscriptions for the client ID that made \xe2\x80\xa6000BiGet the total number of items in the data2BlTotal number of items returned in all pages.0CnTotal number of results (users) returned. This is count or \xe2\x80\xa6058CbCurrent amassed participation points in this levelAaTotal redemptionsCnEvent type. Consider using <code>E::EVENT_TYPE</code> instead.BaThe category of the subscription.CfThe stream type. Valid values are: live, playlist, \xe2\x80\xa60AfThe type of Bits used.AaThe type of goal.001AiThe type of Power Up used2CdType of contribution. Valid values include bits, \xe2\x80\xa6222222AcThe type of reward.CbThe category of the subscription that was created.CdFilter subscriptions by subscription type (e.g., \xe2\x80\xa610CfThe extension types that you can activate for this \xe2\x80\xa6CnUser\xe2\x80\x99s type: \xe2\x80\x9cstaff\xe2\x80\x9d, \xe2\x80\x9cadmin\xe2\x80\x9d, \xe2\x80\x9cglobal_mod\xe2\x80\x9d, \xe2\x80\xa610CeStream type: \xe2\x80\x9clive\xe2\x80\x9d or \xe2\x80\x9c\xe2\x80\x9d (in case of error).00D`Shows whether the emote is <code>global_first_party</code>,  \xe2\x80\xa60997ClType of video. Valid values: \xe2\x80\x9call\xe2\x80\x9d, \xe2\x80\x9cupload\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6CmType of video. Valid values: \xe2\x80\x9cupload\xe2\x80\x9d, \xe2\x80\x9carchive\xe2\x80\x9d, \xe2\x80\xa610AbType of moderationAcType of action doneCfUser types (if any) that apply to the suspicious user.00AjTypes used in OAUTH2 flow.C`A viewer is unbanned from the specified channel.AoHelix endpoints regarding usersBcCheck if supplied users are banned.BnNumber of unique users that chose the outcome.AbUsers in the team.1ChCurrent total amassed participation points in all levelsAlInteger value of reward. 1-5AdThe monetary amount.ClTotal number of votes received for the choice across all \xe2\x80\xa60AiID of current watch partyAfThe slot is configuredAnPoll is currently in progress.0CjThe Prediction is active and viewers can make predictions.10AmA client that can do requestsBdA client that can do OAUTH2 requestsiA clip IDAkConfiguration of hype trainCjA cursor is a pointer to the current \xe2\x80\x9cpage\xe2\x80\x9d in the \xe2\x80\xa6lCustom errorc{0}0100AfA message was deleted.0fDeleteBlMetadata associated with the delete command.AgThe request was denied.BjThe message was denied (not shown in chat)CfThe request has been denied by a moderator/broadcaster00AgMessage has been deniedBeReturn Values for Get Channel Editors0hA gifter0iA IGDB IDAaInsane difficultyB`The user is a lilkely ban evaderClThe Prediction has been locked and viewers can no longer \xe2\x80\xa60AeA manually added userAaMedium difficultyAbDisplays on mobile0ChThis room is in unique-chat mode and the message you \xe2\x80\xa60nSort by newestAcNo pagination found0nSort by oldestA`The color orange0iA poll IDoVideo is publicA`The color purple0AlRacist language or behavior.AmReason for blocking the user.B`A collection over &amp;str itemsAnA term was removed from a listClBasic information about the reward that was redeemed, at \xe2\x80\xa6BeInformation about the reward involvedhA rewardkReward datafStaticAkSubscription request statusAmReturn Values for Get Streams0iA Team IDAcAll possible topicsAdChannel host removedoa unraid event.AeA raid was cancelled.0fUnraidAeA unraid notificationBlMetadata associated with the unraid command.A`A uploaded video0jA user ID.AfThe action being taken00BbThe action being taken on the list1BgThe status change applied to the terms.00CnThe action to take for the message. Must be \xe2\x80\x9cALLOW\xe2\x80\x9d or \xe2\x80\xa60AgAction done to progressCmAn object that contains the amount of money that the user \xe2\x80\xa600000ChGet a borrowed <code>Cow&lt;&#39;_, CursorRef&gt;</code>BoGet a <code>Cow&lt;&#39;_, UserIdRef&gt;</code>CdGet a <code>Cow&lt;&#39;_, DisplayNameRef&gt;</code>CaGet a <code>Cow&lt;&#39;_, NicknameRef&gt;</code>BnGet a <code>Cow&lt;&#39;_, MsgIdRef&gt;</code>ChGet a <code>Cow&lt;&#39;_, CommunityGiftIdRef&gt;</code>ClGet a <code>Cow&lt;&#39;_, SharedChatSessionIdRef&gt;</code>CbGet a <code>Cow&lt;&#39;_, WhisperIdRef&gt;</code>CaGet a <code>Cow&lt;&#39;_, HexColorRef&gt;</code>CcGet a <code>Cow&lt;&#39;_, BadgeSetIdRef&gt;</code>CdGet a <code>Cow&lt;&#39;_, ChatBadgeIdRef&gt;</code>C`Get a <code>Cow&lt;&#39;_, EmoteIdRef&gt;</code>CcGet a <code>Cow&lt;&#39;_, EmoteSetIdRef&gt;</code>CcGet a <code>Cow&lt;&#39;_, EventSubIdRef&gt;</code>CbGet a <code>Cow&lt;&#39;_, ConduitIdRef&gt;</code>CgGet a <code>Cow&lt;&#39;_, ConduitShardIdRef&gt;</code>CdGet a <code>Cow&lt;&#39;_, ExtensionIdRef&gt;</code>CfGet a <code>Cow&lt;&#39;_, CreatorGoalIdRef&gt;</code>CfGet a <code>Cow&lt;&#39;_, BlockedTermIdRef&gt;</code>CgGet a <code>Cow&lt;&#39;_, UnbanRequestIdRef&gt;</code>CaGet a <code>Cow&lt;&#39;_, RewardIdRef&gt;</code>CeGet a <code>Cow&lt;&#39;_, RedemptionIdRef&gt;</code>BoGet a <code>Cow&lt;&#39;_, PollIdRef&gt;</code>CeGet a <code>Cow&lt;&#39;_, PollChoiceIdRef&gt;</code>CeGet a <code>Cow&lt;&#39;_, PredictionIdRef&gt;</code>ClGet a <code>Cow&lt;&#39;_, PredictionOutcomeIdRef&gt;</code>CaGet a <code>Cow&lt;&#39;_, StreamIdRef&gt;</code>CcGet a <code>Cow&lt;&#39;_, CategoryIdRef&gt;</code>BnGet a <code>Cow&lt;&#39;_, TagIdRef&gt;</code>BoGet a <code>Cow&lt;&#39;_, TeamIdRef&gt;</code>C`Get a <code>Cow&lt;&#39;_, VideoIdRef&gt;</code>BoGet a <code>Cow&lt;&#39;_, ClipIdRef&gt;</code>ChGet a <code>Cow&lt;&#39;_, StreamSegmentIdRef&gt;</code>CdGet a <code>Cow&lt;&#39;_, HypeTrainIdRef&gt;</code>CjGet a <code>Cow&lt;&#39;_, CharityCampaignIdRef&gt;</code>CjGet a <code>Cow&lt;&#39;_, CharityDonationIdRef&gt;</code>BoGet a <code>Cow&lt;&#39;_, IgdbIdRef&gt;</code>CkGet a <code>Cow&lt;&#39;_, GuestStarSessionIdRef&gt;</code>ChGet a <code>Cow&lt;&#39;_, GuestStarSlotIdRef&gt;</code>CgGet a <code>Cow&lt;&#39;_, StreamMarkerIdRef&gt;</code>CbGet a <code>Cow&lt;&#39;_, StreamKeyRef&gt;</code>CbGet a <code>Cow&lt;&#39;_, TimestampRef&gt;</code>AhReturn this color in hexCjProvides access to the underlying value as a string slice.0BcGet the scope as a borrowed string.1111111111111111111111111111111111111111111111AdList of chat badges.00000nSenders badgesAhURL for the Team banner.CmCursor for backward pagination: tells the server where to \xe2\x80\xa6000000000000000CnReturns chunks of items, similar to <code>slice::chunks</code>CiDifferent clients you can use with this crate to call \xe2\x80\xa6AjClient for Helix endpointsAoProvides different http clientsAiConfig of this hype-trainBiA specified broadcaster sends a Shoutout.B`a user creates an unban request.CiA cursor value, to be used in a subsequent request to \xe2\x80\xa60ClCursor for forward pagination: tells the server where to \xe2\x80\xa6000AfA cursor for somethingCcDomain of cheer reward. Name of active twitch eventCjSends an event notification when a user donates to the \xe2\x80\xa6CiAn array that includes the emote ID and start and end \xe2\x80\xa60AnEmotes in subscription messageAmList of unsuccessful updates.0C`Errors that can occur during request processing.fErrorsBfA specified channel receives a follow.ClThe formats that the emote is available in. For example, \xe2\x80\xa6BkThe formats that the emote is available in.000000B`Rewards to former bits conductorBiRewards to former subscriptions conductorjThe gifter00BcObject of image URLs for the emote.0000CmStructure containing both animated and static image sets, \xe2\x80\xa6CnDesired length of the commercial in seconds. Valid options \xe2\x80\xa6BbLength of the triggered commercial10AdLength of commercialCeRequest content classification labels for some localeCiLocale for the Content Classification Labels. You may \xe2\x80\xa60C`Get multiple user by their <code>UserName</code>CbMethod by which redemptions were set to new statusnGet the millisnGet the minutefMonths00CjDeveloper-generated identifier for mapping messages to \xe2\x80\xa6CkThe msg_id passed in the body of the POST message. Maps \xe2\x80\xa6ClID of the message to be allowed or denied. These message \xe2\x80\xa6210BoID of message associated with moderation actionCfOffset in the video at which the muted segment begins.BiThe specified broadcaster starts a streamE`Get loaderboard for this period. Valid values: <code>&quot;day&quot;</code>, \xe2\x80\xa6CnTime period over which data is aggregated (PST time zone). \xe2\x80\xa60ClPeriod during which the video was created. Valid values: \xe2\x80\xa60C`Helix endpoints regarding channel points/redeemsCjThe current number of subscriber points earned by this \xe2\x80\xa6A`types for pointsClThe name portion of the Cheermote string that you use in \xe2\x80\xa60AdPrefix for cheermote0AgThe reward description.000000000CiThe prompt for the viewer when they are redeeming the \xe2\x80\xa6000000BoThe prompt to the user, if any, for the reward.1DaPrompt shown when clicking reward on rewards &amp; challenges \xe2\x80\xa6AoHolds serializable pubsub stuffAjThe reason behind the ban.BaThe reason given for the warning.1AiReason given for the ban.BaThe reason given for the timeout.AmReason given for the warning.33BaThe reason why a message was held00000A`Reason for error000000000AnSet the reason for this block.CnReason for blocking the user. Valid values: \xe2\x80\x9cspam\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa60ClThe reason the user is being banned or put in a timeout. \xe2\x80\xa6CdThe reason for the ban if provided by the moderator.BdThe reason the user is being warned.BdThe reason provided for the warning.3102ClA custom channel points reward has been removed from the \xe2\x80\xa6Cja user has moderator privileges removed on a specified \xe2\x80\xa6Cia user has vip privileges removed on a specified channel.AnCreate the URL for this emote.CdA user has revoked authorization for your client id.BoAn object that contains the reward information.ClBasic information about the reward that was redeemed, at \xe2\x80\xa60110000CfBasic information about the Custom Reward that was \xe2\x80\xa600BgData about the reward that was redeemedBeRetrieve scopes attached to the tokenAmScopes attached to the token.BaGet the scopes from this responseAhScopes attached to token32BiModule for all possible scopes in twitch.B`Helix endpoints regarding searchnGet the secondBdSecret attached to the subscription.B`Get the secret from this string.000AjUser that sent the messageCfAn ID that identifies this set of chat badges. For \xe2\x80\xa60AjID for the chat badge set.00oID of emote setBoList of information about a conduit\xe2\x80\x99s shards.BaList of successful shard updates.AiList of shards to update.210A`Conductor sourceAjSource type of progressionAoStatus of EventSub subscriptionAkStatus of the subscription.CmThe shard status. The subscriber receives events only for \xe2\x80\xa6CiDefaults to unfulfilled. Possible values are unknown, \xe2\x80\xa6CfWill be fulfilled or canceled. Possible values are \xe2\x80\xa6AfThe message\xe2\x80\x99s statusAgThe status of the poll.CmThe status of the Channel Points Prediction. Valid values \xe2\x80\xa6CjDictates whether the unban request was approved or denied.223354541100BaThe status of the disabled shard.0AgThe message\xe2\x80\x99s status.00000CeThe connection\xe2\x80\x99s status, which is set to connected.BbFilter shards by a specific statusBiGet eventsub subscriptions by this status<AdStatus to filter by.CkInclude this parameter to filter subscriptions by their \xe2\x80\xa6>01BeStatus code of error, usually 400-499kStatus Code101010101010101010AcFilter by a status.AfStatus of the request.AbResolution status.2110AkStatus of rewards to returnAeThe new status to setCgWhen id is not provided, this param is required and \xe2\x80\xa6BiOne of UNFULFILLED, FULFILLED or CANCELEDCgThe new status to set redemptions to. Can be either \xe2\x80\xa62110AjThe poll status to be set.AnPoll status. Valid values are:010AiStatus of the Prediction.0BnThe Prediction status to be set. Valid values:1BbStatus of the message in the queueCireward redemption status, will be FULFILLED if a user \xe2\x80\xa6AmCurrent status of the messageAdStatus code of errorBdSubscription types regarding streamsAotypes for stream related thingsClID of a tag. Multiple IDs can be specified. If provided, \xe2\x80\xa60CiMake a timestamp with the time component set to 00:00:00.BcGet the event string of this event.DkConstruct into a <code>OffsetDateTime</code> time with a guaranteed UTC \xe2\x80\xa6AbTwitch token typesChThe different topics and their level for the automod \xe2\x80\xa6BeSpecified user updates their account.ClChannel has updated the category, title, mature flag, or \xe2\x80\xa6CkA custom channel points reward has been updated for the \xe2\x80\xa6CkA redemption of a channel points custom reward has been \xe2\x80\xa6Bla broadcaster\xe2\x80\x99s chat settings are updated.Cfthe host preferences for Guest Star have been updated.0CiThe active shared chat session the channel is in changed.Bca suspicious user has been updated.Cea message in the automod queue had its status changedCia notification is sent when a broadcaster\xe2\x80\x99s automod \xe2\x80\xa6Cka notification when a broadcaster\xe2\x80\x99s automod terms are \xe2\x80\xa6AmURL to image in size 28 \xc3\x97 28AhURL to png of size 28x28AmURL to image in size 56 \xc3\x97 56AhURL to png of size 56x56AmURL to image in size 84 \xc3\x97 84AoURL to image in size 112 \xc3\x97 112AjURL to png of size 112x112B`Helix endpoints regarding videosCnA list of videos that contain markers. The list contains a \xe2\x80\xa60AaID of current VODAhMessage has been allowedAaAn archived videogArchive1BkThe message was caught by automod\xe2\x80\x99s rulesAoSpecific AutoMod classificationAjReturn Values for Ban User0AiThe list of blocked termsBaReturn Values for Search Channels0gChatterAnReturn Values for Get ChattersCkInformation about the user that triggered this notification1AaConduit transportAjConduit transport responseBcGeneral information about a ConduitBaThe contents of a AutoMod messageoA chat Emote IDCmTwitch has verified your callback and is able to send you \xe2\x80\xa6AeThe shard is enabled.BeReturn Values for Update CustomRewardCiThe message is too old, it can\xe2\x80\x99t be acted upon anymore.A`Hype train endedAkthe device code has expiredB`Automod message expired in queuehHot PinkBfConvert a type into a <code>Cow</code>AgThe message was invalidBkSomething went wrong determining the state.00BoThe guest has transitioned to the invite queue.CbHow many support events needed to start Hype TrainjA Mention.AgA user mention fragmentBoMessage received containing all applicable dataCnSubscription message/payload. Received on events and other \xe2\x80\xa6iA messageBbMessage that was caught by AutoModEareturned content is not <code>application/json</code>, found <code>{found}</code>oStream not liveBbSet the <code>overall_level</code>0CgDisplays on top of the whole video as a transparent \xe2\x80\xa60gPartnerAnPayload for given subscriptionAeNotification receivedCbThe request has been created, but not yet resolved00BnMessage has been caught and pending moderationAfBits send via Power-UpBeThe primary color for the broadcaster0A`Video is privateAcUnique chat enabledBmThe guest was removed from the call or queue.BmThe request type we\xe2\x80\x99re expecting with body.CfA request is a Twitch endpoint, see New Twitch API \xe2\x80\xa60Ahrequest for token failedAlfailed to request validationBjScheduled broadcast for a stream schedule.c1.0c2.0c3.0AnChat is no longer in slow mode0AgSlow-mode chat disabledBeInformation about the gift sub event.AaSubscription giftAnA gifted subscription happenedB`A subscription gift notification1Ae204 - Conduit deletedAj204 - Subscription deleted01B`204 - User blocked successfully.Bb204 - User unblocked successfully.10AkSuccessfully added the VIP.Bi204 - Channel/Stream updated successfullyAmSuccessfully removed the VIP.201Bg204 - Stream Tags replaced successfully0AcShoutout successfulBcSuccessfully sent the announcement.BmSuccessfully updated the user\xe2\x80\x99s chat color.10264BaSuccessfully added the moderator.BlSuccessfully removed the specified messages.BkSuccessfully approved or denied the messageB`204 - Term removed successfully.BcSuccessfully removed the moderator.AdUnban was successful051<:432Ch204 - User successfully deleted from list of channel \xe2\x80\xa6BnStream schedule settings updated successfully.10Ca204 - The pending raid was successfully canceled.0ClSuccessfully sent the whisper message or the message was \xe2\x80\xa60nReward deletedh200 - OK1nReward updated1AhPoll ended successfully.AnPrediction ended successfully.AaVideo(s) deleted.AeA user was timed out.0gTimeoutBmMetadata associated with the timeout command.ClAn unknown Power-Up, contains the raw string provided by \xe2\x80\xa6AlAn unknown type was redeemedAeUnknown reward statusCiAn unknown state, contains the raw string provided by \xe2\x80\xa6CmAn unknown group layout, contains the raw string provided \xe2\x80\xa6ClAn unknown term action, contains the raw string provided \xe2\x80\xa6CmAn unknown term list, contains the raw string provided by \xe2\x80\xa6ChAn unknown low trust status, contains the raw string \xe2\x80\xa6CmAn unknown user type, contains the raw string provided by \xe2\x80\xa6BcThe ban evasion status is not knownCjAn unknown status, contains the raw string provided by \xe2\x80\xa6CkAn unknown category identified by Automod, contains the \xe2\x80\xa6CnAn unknown Automod message status, contains the raw string \xe2\x80\xa677ChAn unknown type, contains the raw string provided by \xe2\x80\xa60AeAn unknown drop-code.0BjAllows client\xe2\x80\x99s bot to act as this user.0AiSubscription type versionjA video IDAaWebhook transportAjWebhook transport responsegWebhookCiDefines the first message that the EventSub WebSocket \xe2\x80\xa6BfObject containing whisper information.0AhApprove an unban requestAfAutomod related eventsBfAutoMod classification of the fragmentDfCreate a builder for building <code>StreamOfflineV1</code>. On the \xe2\x80\xa6DeCreate a builder for building <code>StreamOnlineV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>UserWhisperMessageV1</code>. On the \xe2\x80\xa6DcCreate a builder for building <code>UserUpdateV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>UserAuthorizationGrantV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>UserAuthorizationRevokeV1</code>. \xe2\x80\xa6DgCreate a builder for building <code>ChannelPollEndV1</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelPollProgressV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelPollBeginV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>ChannelChatMessageV1</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>ChannelChatNotificationV1</code>. \xe2\x80\xa6DiCreate a builder for building <code>ChannelChatClearV1</code>. On the \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa6DjCreate a builder for building <code>ChannelChatMessageDeleteV1</code>. \xe2\x80\xa6DhCreate a builder for building <code>ChannelChatUserMessageHoldV1</code>.2DkCreate a builder for building <code>ChannelSubscriptionEndV1</code>. On \xe2\x80\xa6DhCreate a builder for building <code>ChannelSubscriptionMessageV1</code>.DiCreate a builder for building <code>ChannelSubscriptionGiftV1</code>. \xe2\x80\xa6DgCreate a builder for building <code>ChannelBitsUseV1</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelHypeTrainEndV1</code>. On \xe2\x80\xa6DjCreate a builder for building <code>ChannelHypeTrainProgressV1</code>. \xe2\x80\xa6DjCreate a builder for building <code>ChannelHypeTrainBeginV1</code>. On \xe2\x80\xa6DgCreate a builder for building <code>ChannelGoalEndV1</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelGoalProgressV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelGoalBeginV1</code>. On the \xe2\x80\xa6DdCreate a builder for building <code>ChannelRaidV1</code>. On the \xe2\x80\xa6DeCreate a builder for building <code>ChannelCheerV1</code>. On the \xe2\x80\xa6DfCreate a builder for building <code>ChannelFollowV1</code>. On the \xe2\x80\xa6DfCreate a builder for building <code>ChannelFollowV2</code>. On the \xe2\x80\xa6DfCreate a builder for building <code>ChannelUpdateV2</code>. On the \xe2\x80\xa6DfCreate a builder for building <code>ChannelUpdateV1</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelAdBreakBeginV1</code>. On \xe2\x80\xa6DcCreate a builder for building <code>ChannelBanV1</code>. On the \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa600000DkCreate a builder for building <code>ChannelCharityCampaignStartV1</code>\xe2\x80\xa611DhCreate a builder for building <code>ChannelCharityCampaignStopV1</code>.DkCreate a builder for building <code>ChannelChatSettingsUpdateV1</code>. \xe2\x80\xa63333DhCreate a builder for building <code>ChannelModerateV1</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelModerateV2</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>ChannelModeratorAddV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>ChannelModeratorRemoveV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelPredictionEndV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>ChannelPredictionProgressV1</code>. \xe2\x80\xa6DkCreate a builder for building <code>ChannelPredictionBeginV1</code>. On \xe2\x80\xa6DjCreate a builder for building <code>ChannelPredictionLockV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelSharedChatEndV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelSharedChatUpdateV1</code>. \xe2\x80\xa6DkCreate a builder for building <code>ChannelSharedChatBeginV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelShieldModeEndV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>ChannelShieldModeBeginV1</code>. On \xe2\x80\xa6DjCreate a builder for building <code>ChannelShoutoutCreateV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>ChannelShoutoutReceiveV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ChannelSubscribeV1</code>. On the \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa6DkCreate a builder for building <code>ChannelSuspiciousUserUpdateV1</code>\xe2\x80\xa6DeCreate a builder for building <code>ChannelUnbanV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>ChannelUnbanRequestCreateV1</code>. \xe2\x80\xa6DhCreate a builder for building <code>ChannelUnbanRequestResolveV1</code>.DfCreate a builder for building <code>ChannelVipAddV1</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>ChannelVipRemoveV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>ChannelWarningAcknowledgeV1</code>. \xe2\x80\xa6DkCreate a builder for building <code>ChannelWarningSendV1</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>ConduitShardDisabledV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>AutomodMessageHoldV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>AutomodMessageHoldV2</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>AutomodMessageUpdateV1</code>. On \xe2\x80\xa6DiCreate a builder for building <code>AutomodMessageUpdateV2</code>. On \xe2\x80\xa6DjCreate a builder for building <code>AutomodSettingsUpdateV1</code>. On \xe2\x80\xa6DkCreate a builder for building <code>AutomodTermsUpdateV1</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>CreateConduitRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>CreateConduitBody</code>. On the \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa60DkCreate a builder for building <code>DeleteConduitRequest</code>. On the \xe2\x80\xa61DjCreate a builder for building <code>GetConduitShardsRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetConduitsRequest</code>. On the \xe2\x80\xa63DkCreate a builder for building <code>UpdateConduitRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>UpdateConduitBody</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>UpdateConduitShardsRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>UpdateConduitShardsBody</code>. On \xe2\x80\xa6DgCreate a builder for building <code>BlockUserRequest</code>. On the \xe2\x80\xa68DjCreate a builder for building <code>GetUserBlockListRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetUserExtensionsRequest</code>. On \xe2\x80\xa6DfCreate a builder for building <code>GetUsersRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>GetUsersFollowsRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>UnblockUserRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>UpdateUserRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>UpdateUserExtensionsRequest</code>. \xe2\x80\xa6DkCreate a builder for building <code>UpdateUserExtensionsBody</code>. On \xe2\x80\xa6DiCreate a builder for building <code>ExtensionSpecification</code>. On \xe2\x80\xa6DfCreate a builder for building <code>ActiveExtension</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>ActivePositionedExtension</code>. \xe2\x80\xa6DkCreate a builder for building <code>AddChannelVipRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>GetAdScheduleRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>GetChannelEditorsRequest</code>. On \xe2\x80\xa6DjCreate a builder for building <code>GetChannelFollowersRequest</code>. \xe2\x80\xa6DhCreate a builder for building <code>GetChannelInformationRequest</code>.DjCreate a builder for building <code>GetFollowedChannels</code>. On the \xe2\x80\xa6DeCreate a builder for building <code>GetVipsRequest</code>. On the \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa6DhCreate a builder for building <code>ModifyChannelInformationBody</code>.DjCreate a builder for building <code>RemoveChannelVipRequest</code>. On \xe2\x80\xa6DjCreate a builder for building <code>SnoozeNextAdRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>StartCommercialBody</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>CreateStreamMarkerRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>CreateStreamMarkerBody</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetFollowedStreamsRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>GetStreamKeyRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>GetStreamMarkersRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetStreamTagsRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>GetStreamsRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>ReplaceStreamTagsRequest</code>. On \xe2\x80\xa6DhCreate a builder for building <code>ReplaceStreamTagsBody</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetChannelChatBadgesRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>GetChannelEmotesRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetChatSettingsRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetChattersRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>GetEmoteSetsRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>GetGlobalChatBadgesRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>GetGlobalEmotesRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetSharedChatSessionRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>GetUserChatColorRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetUserEmotesRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>SendAShoutoutRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>SendChatAnnouncementRequest</code>. \xe2\x80\xa6DkCreate a builder for building <code>SendChatAnnouncementBody</code>. On \xe2\x80\xa6DjCreate a builder for building <code>SendChatMessageBody</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>UpdateChatSettingsRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>UpdateChatSettingsBody</code>. On \xe2\x80\xa6DjCreate a builder for building <code>UpdateUserChatColorRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>SearchCategoriesRequest</code>. On \xe2\x80\xa6DhCreate a builder for building <code>SearchChannelsRequest</code>. On \xe2\x80\xa6DhCreate a builder for building <code>CheckUserSubscriptionRequest</code>.BaCreate a builder for building \xe2\x80\xa60DhCreate a builder for building <code>AddBlockedTermRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>AddBlockedTermBody</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>AddChannelModeratorRequest</code>. \xe2\x80\xa6DeCreate a builder for building <code>BanUserRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>BanUserBody</code>. On the builder, \xe2\x80\xa6DiCreate a builder for building <code>CheckAutoModStatusRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>CheckAutoModStatusBody</code>. On \xe2\x80\xa6DiCreate a builder for building <code>DeleteChatMessagesRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>GetAutoModSettingsRequest</code>. \xe2\x80\xa6DhCreate a builder for building <code>GetBannedUsersRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>GetModeratedChannelsRequest</code>. \xe2\x80\xa6DkCreate a builder for building <code>GetModeratorsRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>GetShieldModeStatusRequest</code>. \xe2\x80\xa6DjCreate a builder for building <code>GetUnbanRequestsRequest</code>. On \xe2\x80\xa6>DkCreate a builder for building <code>ManageHeldAutoModMessagesBody</code>\xe2\x80\xa6DkCreate a builder for building <code>RemoveBlockedTermRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>RemoveChannelModeratorRequest</code>\xe2\x80\xa6DjCreate a builder for building <code>ResolveUnbanRequest</code>. On the \xe2\x80\xa6DgCreate a builder for building <code>UnbanUserRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>UpdateAutoModSettingsRequest</code>.BaCreate a builder for building \xe2\x80\xa6DjCreate a builder for building <code>WarnChatUserRequest</code>. On the \xe2\x80\xa6DgCreate a builder for building <code>WarnChatUserBody</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>GetBlockedTermsRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>UpdateShieldModeStatusRequest</code>\xe2\x80\xa6DjCreate a builder for building <code>UpdateShieldModeStatusBody</code>. \xe2\x80\xa6DfCreate a builder for building <code>GetGamesRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>GetTopGamesRequest</code>. On the \xe2\x80\xa67777777DiCreate a builder for building <code>CancelARaidRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>StartARaidRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>SendWhisperRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>CreateCustomRewardRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>CreateCustomRewardBody</code>. On \xe2\x80\xa6DiCreate a builder for building <code>DeleteCustomRewardRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>GetCustomRewardRequest</code>. On \xe2\x80\xa6>DiCreate a builder for building <code>UpdateCustomRewardRequest</code>. \xe2\x80\xa6DiCreate a builder for building <code>UpdateCustomRewardBody</code>. On \xe2\x80\xa6DkCreate a builder for building <code>UpdateRedemptionStatusRequest</code>\xe2\x80\xa6DjCreate a builder for building <code>UpdateRedemptionStatusBody</code>. \xe2\x80\xa6BaCreate a builder for building \xe2\x80\xa6DiCreate a builder for building <code>GetBitsLeaderboardRequest</code>. \xe2\x80\xa6DkCreate a builder for building <code>GetCheermotesRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>GetCharityCampaignRequest</code>. \xe2\x80\xa63DfCreate a builder for building <code>GetClipsRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>CreateClipRequest</code>. On the \xe2\x80\xa6DiCreate a builder for building <code>GetCreatorGoalsRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetHypeTrainEventsRequest</code>. \xe2\x80\xa6DhCreate a builder for building <code>CreatePollRequest</code>. On the \xe2\x80\xa6DeCreate a builder for building <code>CreatePollBody</code>. On the \xe2\x80\xa6DdCreate a builder for building <code>NewPollChoice</code>. On the \xe2\x80\xa6DeCreate a builder for building <code>EndPollRequest</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>EndPollBody</code>. On the builder, \xe2\x80\xa6DfCreate a builder for building <code>GetPollsRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>GetPredictionsRequest</code>. On \xe2\x80\xa6DjCreate a builder for building <code>CreatePredictionRequest</code>. On \xe2\x80\xa6DkCreate a builder for building <code>CreatePredictionBody</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>NewPredictionOutcome</code>. On the \xe2\x80\xa6DkCreate a builder for building <code>EndPredictionRequest</code>. On the \xe2\x80\xa6DhCreate a builder for building <code>EndPredictionBody</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>GetAllStreamTagsRequest</code>. On \xe2\x80\xa6DiCreate a builder for building <code>GetChannelTeamsRequest</code>. On \xe2\x80\xa6DfCreate a builder for building <code>GetTeamsRequest</code>. On the \xe2\x80\xa6DgCreate a builder for building <code>GetVideosRequest</code>. On the \xe2\x80\xa6DjCreate a builder for building <code>DeleteVideosRequest</code>. On the \xe2\x80\xa6DhCreate a <code>UserTokenBuilder</code> to get a token with the OAuth \xe2\x80\xa6BeSubscription types regarding channelsBcHelix endpoints regarding charitiesBnThe user ID of the user that sent the message.00BaAn array of choices for the poll.CgAn array of choices for the poll. Includes vote counts.0100001CmArray of the poll choices. Minimum: 2 choices. Maximum: 5 \xe2\x80\xa6AjArray of the poll choices.010BfSubscription types regarding conduits.CaConvenience method for making a conduit transportAjThe content of the messageDgContext of <code>bits_event</code>, seems to only be <code>cheer</code>AiRewards to bits conductorBbRewards to subscriptions conductorDnCreates a new <code>HelixClient</code> with a default <code>HttpClient</code>.BmReturns an empty <code>GetUsersRequest</code>CfIndex in the message for the end of the problem (0 \xe2\x80\xa6CkWill be null if permanent ban. If it is a timeout, this \xe2\x80\xa6AkThe time the poll will end.000001BlCheck if user follows a specific broadcasterClUser ID. The request returns information about users who \xe2\x80\xa6BhID of the user following the to_id user.10ClCurrent game ID being played on the channel. Use \xe2\x80\x9c0\xe2\x80\x9d \xe2\x80\xa6BkCurrent game ID being played on the channel101CmReturns streams broadcasting a specified game ID. You can \xe2\x80\xa6BjID of the game being played on the stream.010BiID of the game being played on the stream0BbGame for which clips are returned.CnID of the game for which clips are returned. The number of \xe2\x80\xa6CkID of the game assigned to the stream when the clip was \xe2\x80\xa610AoID of the game the video is of.00CeReturns full URI for the request, including query \xe2\x80\xa60C`The timestamp of when automod saved the message.00000000000BlThe ID that IGDB uses to identify this game.00000Cltrue if the tag is auto-generated; otherwise, false . An \xe2\x80\xa600000BcWhether the subscription is a gift.BdWhether the subscription was a gift.C`Whether or not the resub was a result of a gift.112BhIndicates if the subscription is a gift.CfDetermines if the subscription is a gift subscription.010AhResubscription is a gift0BbCheck if the stream is live or notkLive status0BnIf the message passed all checks and was sent.0ClSupport events that must occur within a duration of time \xe2\x80\xa6ClThe list of markers in this video. The list in ascending \xe2\x80\xa60BoChecks if the given scopes match the predicate.jA Mention.AbEvent information.CaThe error that occurred while updating the shard.CfAn object that contains the user message and emote \xe2\x80\xa60AlThe structured chat message.AkThe structured chat messageAhThe body of the message.0B`The message sent with the cheer.CjAn object that contains the resubscription message and \xe2\x80\xa6443224322005515544BfEvents for Automod actions on messages333333333333AiError message from Twitch000000000CiProvides contextual information on why the request failed0CnThe announcement to make in the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa6AdThe message to send.BhMessage for why the message was dropped.210CkThe whisper message to send. The message must not be empty.0AiThe message that was sentAgMessage in subscriptionAiA user receives a whisperCaAny user sends a message to a specific chat room.ClA user sends a resubscription chat message in a specific \xe2\x80\xa6Cda chat message has been sent from a suspicious user.AiMessage attached to errorCiReturns a validator only containing the unmatched scopes.BiThe specified broadcaster stops a stream.BbSet the <code>overall_level</code>AjSet the overlay extensionsCkA dictionary that contains the data for a video-overlay \xe2\x80\xa6000BlA specified broadcaster receives a Shoutout.CcRequest on a valid <code>RequestGet</code> endpointCcRequest on a valid <code>RequestPut</code> endpointBoThe request that was sent, used for pagination.0AlRequests for driving the APIBcan unban request has been resolved.gRewardsAlDescription of level rewardsBbTime at which the message was sentAcSession informationlSession dataoSet size to 1.0oSet size to 2.0oSet size to 3.0CgThe ID of the slot assignment the guest is assigned to.00kStatic PNGsBaHelix endpoints regarding streamsBhIDs of tags to be applied to the stream.BgShows tag IDs that apply to the stream.1001CjShows tag IDs that apply to the stream (live only).See \xe2\x80\xa60BdFilter the results for specific tag.BaThe id of the blocked term found.BdDisplay name corresponding to to_id.0CnThe user id for the user who has granted authorization for \xe2\x80\xa6CnThe user id for the user who has revoked authorization for \xe2\x80\xa6CkThe user ID for the user you want update notifications for.AeThe user\xe2\x80\x99s user id.BmThe user ID of the person receiving whispers.00214343ClThe user ID for the user who was banned on the specified \xe2\x80\xa6BbThe User ID of the redeeming user.AmThe ID of the redeeming user.BmUser ID of the user that redeemed the reward.0CfAn ID that identifies the user that donated to the \xe2\x80\xa6AlThe user ID to read chat as.00000BbThe User ID of the message sender.101CiThe user ID for the user who cheered on the specified \xe2\x80\xa6ChThe user ID for the user now following the specified \xe2\x80\xa60BaThe user ID of the new moderator.BeThe user ID of the removed moderator.ClThe user ID for the user who subscribed to the specified \xe2\x80\xa6CbThe user ID for the user whose subscription ended.CkThe user ID of the user who sent the subscription gift. \xe2\x80\xa6CjThe user ID of the user who sent a resubscription chat \xe2\x80\xa6BnThe user ID of the user that sent the message.CjThe ID of the suspicious user whose treatment was updated.CnThe user id for the user who was unbanned on the specified \xe2\x80\xa6CbUser ID of user that is requesting to be unbanned.BnUser ID of user that requested to be unbanned.AkThe user ID of the new vip.AoThe user ID of the removed vip.CgThe ID of the user that has acknowledged their warning.B`The ID of the user being warned.AlThe user ID to read chat as.00000BbThe User ID of the message sender.10BbThe user ID of the mentioned user.22CdThe user ID of the broadcaster raiding this channel.3333232?>=?=>BbThe User ID of the redeeming user.0AcThe ID of the user.CiThe user ID for the user who cheered on the specified \xe2\x80\xa6ChThe user ID for the user now following the specified \xe2\x80\xa60ClThe user ID for the user who was banned on the specified \xe2\x80\xa6AmThe ID of the redeeming user.0BmUser ID of the user that redeemed the reward.000CfAn ID that identifies the user that donated to the \xe2\x80\xa60;;BfThe ID of the user gaining VIP status.BeThe ID of the user losing VIP status.BfThe ID of the user gaining mod status.BeThe ID of the user losing mod status.B`The ID of the user being banned.BbThe ID of the user being unbanned.BcThe ID of the user being timed out.BeThe ID of the user being untimed out.B`The ID of the user being raided.BjThe ID of the user no longer being raided.CbThe ID of the user whose message is being deleted.AjThe ID of the banned user.B`The ID of the user being warned.BaThe user ID of the new moderator.BeThe user ID of the removed moderator.10ClThe user ID for the user who subscribed to the specified \xe2\x80\xa6BnThe user ID of the user that sent the message.CjThe ID of the suspicious user whose treatment was updated.10CnThe user id for the user who was unbanned on the specified \xe2\x80\xa6CbUser ID of user that is requesting to be unbanned.BnUser ID of user that requested to be unbanned.10AkThe user ID of the new vip.AoThe user ID of the removed vip.10CgThe ID of the user that has acknowledged their warning.;0;AoThe message sender\xe2\x80\x99s user ID.00000000000B`Filter subscriptions by user ID.0CnGets the active extensions that the user has installed for \xe2\x80\xa6CnThe ID of the broadcaster whose active extensions you want \xe2\x80\xa6AlUser ID of the blocked user.10CbCheck if this user id is following the broadcasterBeGet specified users followed channelsCmThe ID of the user to add as a VIP in the broadcaster\xe2\x80\x99s \xe2\x80\xa6AfUser ID of the editor.CmA user\xe2\x80\x99s ID. Use this parameter to see whether the user \xe2\x80\xa6CnAn ID that uniquely identifies the user that\xe2\x80\x99s following \xe2\x80\xa61ClFilters the list for specific VIPs. To specify more than \xe2\x80\xa6BlAn ID that uniquely identifies the VIP user.CbThe ID of the user to remove as a VIP from the \xe2\x80\xa646054321C`Create a new stream marker without a descriptionAmGet a users followed streams.CkReturn stream markers from the most recent video of the \xe2\x80\xa6CnThe ID of the broadcaster that\xe2\x80\x99s streaming content. This \xe2\x80\xa6CkReturns streams broadcast by one or more specified user \xe2\x80\xa6ChA user ID. The request returns the markers from this \xe2\x80\xa6BkThe ID of the user that created the marker.2B`ID of the user who is streaming.4032130CeGet emotes available to the user across all channels.CnThe ID of a user that\xe2\x80\x99s connected to the broadcaster\xe2\x80\x99s \xe2\x80\xa6BoThe ID of the user whose color you want to get.AcThe ID of the user.CmThe ID of the user. This ID must match the user ID in the \xe2\x80\xa6CgThe ID of the user whose chat color you want to update.41032CkUnique identifier of account to get subscription status \xe2\x80\xa60AjID of the subscribed user.ClFilters the results and only returns a status object for \xe2\x80\xa621201CaGet Moderated Channels for an authenticated user.CmThe ID of the user to add as a VIP in the broadcaster\xe2\x80\x99s \xe2\x80\xa6ClFilters the list for specific VIPs. To specify more than \xe2\x80\xa6BlAn ID that uniquely identifies the VIP user.CbThe ID of the user to remove as a VIP from the \xe2\x80\xa6BnThe ID of the user to ban or put in a timeout.CaThe user that was banned or was put in a timeout.AfUser ID of the sender.8BfUser ID of a user who has been banned.CnA user\xe2\x80\x99s ID. Returns the list of channels that this user \xe2\x80\xa6:BfUser ID of a moderator in the channel.CgThe ID used to filter what unban requests are returned.CdUser ID of the requestor who is asking for an unban.ChThe moderator who is approving or rejecting the held \xe2\x80\xa6CeThe ID of the user to remove the ban or timeout from.AkThe ID of the user to warn.AiThe user that was warned.547;:210?<>=9ClFilters the results and only returns a status object for \xe2\x80\xa690745BkThe ID of the user that redeemed the reward00ClGet leaderboard where this user is included (if they are \xe2\x80\xa6ChID of the user whose results are returned; i.e., the \xe2\x80\xa60CaID of the user (viewer) in the leaderboard entry.CjAn ID that identifies a user that donated money to the \xe2\x80\xa60BbID of the user who owns the video.0000CnThe user_id to listen as. Can be fetched with the Get Users\xe2\x80\xa6nId of the userAlID of the user that followednID of the userAcUser ID of the userAlID of user that sent messageBhID of user who earned the new Bits badge5BlUser ID of user that purchased mystery giftsAjID of user that subscribed0BmID of user that purchased gifted subscription00BhGet the user id associated to this tokenBnUser ID of the user associated with this tokenBaUser ID associated with the token210CnEvent version. Consider using <code>E::VERSION</code> instead.B`The version of the subscription.gVersionCfThe version of the subscription type that was created.0AjThe extension\xe2\x80\x99s version.00000BdReturns the version of the endpoint.00AdVersion of the badgeCdVersion of <code>channel-bits-events-v2</code> replyBbThe number of viewers in the raid.0oCurrent viewersBhNotifications for warnings in a channel.CaConvenience method for making a webhook transportBmNotifications for whispers (private messages)BfObject containing whisper information.00AkType of current watch partyDjAuthorization URL (<code>https://id.twitch.tv/oauth2/authorize</code>) \xe2\x80\xa6CmThe guest has accepted the invite and is currently in the \xe2\x80\xa6CmAll possible actions in <code>ChannelModerateV1Payload</code>0hAnimatedAiThe request was approved.BhThe message was approved (shown in chat)ChThe request has been approved by a moderator/broadcaster00BiPoll is no longer visible on the channel.00oA set of badgesBdView Bits information for a channel.0AfThe type of Bits used.nBorrowed data.B`A collection over borrowed itemsAgBullying or harassment.CkCancelled reward - the reward has been cancelled before \xe2\x80\xa6AiThe request was canceled.AnThe user cancelled the request002CkThe Prediction has been canceled and the Channel Points \xe2\x80\xa60BgA game or category as defined by TwitchBcReturn Values for Search CategoriesBgThe category for a scheduled broadcast.BiSend live stream chat and rooms messages.0BiView live stream chat and rooms messages.0kA Client IdBgReturn Values for Get Channel Followers0BbThe goal is to increase followers.AgA chat message fragmentBbA fragment of a AutoModded messagehGamblingnA color in hexAjThe slot is not configuredc30sc60sc90sBbMisogynistic language or behavior.lA message ID0AlA nickname, not capitalized.A`A playlist videoBaThe user is a possible ban evaderB`A premiere, i.e a uploaded videojA premiereBn`update-redemption-statuses-finished``progressgRaid go0ClA winning outcome has been chosen and the Channel Points \xe2\x80\xa60BmThe response type we\xe2\x80\x99re expecting with bodyCkResponse type. twitch\xe2\x80\x99s response will  deserialize to \xe2\x80\xa60CiResponse retrieved from endpoint. Data is the type in \xe2\x80\xa6BkResponse from a subscription/unsubscription1CjResponse from twitchs PubSub server. Either a response \xe2\x80\xa6lA reward ID.iSea GreenBhInappropriate or suggestive sexual termskA Stream IDnStream startedBaUse of swear words or expletives.hA tag IDA`Sort by trendingBhuri could not be translated into an url.Bbcould not assemble URI for request0AeManage a user object.0CfA username, also specified as login. Should not be \xe2\x80\xa6CnUser types: \xe2\x80\x9cstaff\xe2\x80\x9d, \xe2\x80\x9cadmin\xe2\x80\x9d, \xe2\x80\x9cglobal_mod\xe2\x80\x9d, or \xe2\x80\xa6AlInformation on Vacation ModeiVIP AddedAaUser added as VIPgWhisperAmAd break on channel has begunmAnimated GIFskID of badgejBan a userClBans a user from participating in a broadcaster\xe2\x80\x99s chat \xe2\x80\xa6ChThe bounds of the text that caused the message to be \xe2\x80\xa6CmThe Automod level for hostility involving name calling or \xe2\x80\xa60000000hCallback0AlThe category of the message.000BcThe category of the caught message.11ClThe category for the scheduled broadcast. Set to null if \xe2\x80\xa6AkCategory for classificationBbHelix endpoints regarding channelsAjIDs of clips being queriedCkThe ISO-4217 three-letter currency code that identifies \xe2\x80\xa6BfA conduit shard is disabled by twitch.CiThe length in seconds of the scheduled upcoming ad break.0BnDuration of the (optional) timeout in seconds.0CkDuration of the scheduled broadcast in minutes from the \xe2\x80\xa600CfDuration of the Clip in seconds (up to 0.1 precision).0CjTotal duration for the poll (in seconds). Minimum: 15. \xe2\x80\xa6BiTotal duration for the poll (in seconds).010AdLength of the video.0AnDuration of the muted segment.BlPeriod in nanoseconds that events must occurCfA URL that you can use to edit the clip\xe2\x80\x99s title, \xe2\x80\xa60BdEnd a poll that is currently active.CnThe UTC date and time (in RFC3339 format) that the timeout \xe2\x80\xa60CmScheduled end time for the scheduled broadcast in RFC3339 \xe2\x80\xa6CbEnd time for vacation specified in RFC3339 format.CnThe UTC timestamp in RFC 3339 format, which indicates when \xe2\x80\xa6ChRFC3339 timestamp indicating the time the session ended.BlThe timestamp at which the hype train ended.AhThe time the poll ended.BmThe time the Channel Points Prediction ended.CeThe UTC timestamp (in RFC3339 format) of when the \xe2\x80\xa6223355441100BlEnd of the date range for the returned data.BgEnding date/time for the returned clipsCkEnding date/time for returned clips, in RFC3339 format. \xe2\x80\xa60CkUTC timestamp for the poll\xe2\x80\x99s end time. Set to null if \xe2\x80\xa600CnUTC timestamp for when the Prediction ended. If the status \xe2\x80\xa600CgServer time epoch in milliseconds when hype train endedBaHolds serializable EventSub stuffBbHelix endpoints regarding EventSubBatypes for eventsub related thingsCdTransparently reinterprets the string slice as a \xe2\x80\xa600000000000000000000000000000000000000000000000AmReturn streams with these IdsBcGet the next page in the responses.CjGets a list of the channel\xe2\x80\x99s VIPs. <code>get-vips</code>0AaGroup ID of emoteAaGroup ID of badgeBnTime until another valid code can be requestedBgMake the cow with proper ownership, muuBfConverts the collection into a vector.CiReturns true if the <code>Bytes</code> has a length of 0.CeReturns <code>true</code> if the collection is empty.CmIndicates if the subscription was obtained through Amazon \xe2\x80\xa6CiIndicates if the resub was obtained through Amazon Prime.BcThe channel\xe2\x80\x99s broadcast language.000CeStream language. You can specify up to 100 languages.A`Stream language.010CgLanguage of the stream from which the clip was created.0BnLanguage of the video being queried. Limit: 1.AfLanguage of the video.10BaLocation where this was triggered0000000Aalocation of errorCmThe time the Channel Points Prediction will automatically \xe2\x80\xa600000AjGet metadata for the eventCmMinimum number of bits needed to be used to hit the given \xe2\x80\xa6CcThe Automod level for discrimination against women.0000000Cfa moderator performs a moderation action in a channel.mMessage text.0CgAn array of outcomes for the Channel Points Prediction.CkAn array of outcomes for the Channel Points Prediction. \xe2\x80\xa60010000010BnArray of possible outcomes for the Prediction.0ClArray of outcome objects with titles for the Prediction. \xe2\x80\xa61BmThe ID of the broadcaster who owns the emote.BnUser ID of the broadcaster who owns the emote.00AdData about Power-up.00CmThe number of points contributed to the hype train at the \xe2\x80\xa600000AfProgress of hype train00BmData about the reward that had status updated0CbA user responds to a poll on the specified channelCeA hype train makes progress on the specified channel.CjProgress is made towards the specified broadcaster\xe2\x80\x99s \xe2\x80\xa6CmSends an event notification when progress is made towards \xe2\x80\xa6ChA user responds to a prediction on the specified channelClAmount of actions done. i.e 500 (five-hundred) bits or 1 \xe2\x80\xa6CdRequest on a valid <code>RequestPost</code> endpointmResponse text000000000CbResponses contains the return values of a request.BjHelix endpoints regarding stream schedulesBnScheduled broadcasts for this stream schedule.000AkEvents for Automod settingsB`The shard ID within the conduit.0BmSubscription for when a Shoutout has happenedBmSplits the bytes into two at the given index.AaSubscription plan0000CmThe type of subscription plan being used. Possible values \xe2\x80\xa60000B`The Automod level for profanity.0000000CjThe timezone of the application creating the scheduled \xe2\x80\xa6CiThe timezone for when the vacation is being scheduled \xe2\x80\xa6101CeLogin of the user being followed by the from_id user.0DcCreates a owned NamedUserColor&lt;\xe2\x80\x99static&gt; from a borrowed \xe2\x80\xa6DeShortens the buffer, keeping the first <code>len</code> bytes and \xe2\x80\xa6AmURL to image in size 42 \xc3\x97 42AnFilter response with these IDsBeReturn streams for specified user idsBbGet chat colors of specified usersBfFilter the results for specific users.00AnName of the user that followedClIf Vacation Mode is enabled, this includes start and end \xe2\x80\xa6000BhContains chat badge objects for the set.00BkReturn stream markers for a specific video.CmA video on demand (VOD)/video ID. The request returns the \xe2\x80\xa6BaAn ID that identifies this video.10C`ID of the video from which the clip was created.0CkIndicates whether the video is publicly viewable. Valid \xe2\x80\xa60AcAvailability of VODBbHelix endpoints regarding whispersiAffiliateAdChatter is anonymousAcAn anonymous gifterCmThe guest has been assigned a slot in the session, but is \xe2\x80\xa6AeA detected ban evaderjBits eventAlReturn Values for Block User0Blcouldn\xe2\x80\x99t create body from service responseBjAn error occurrec when assembling the bodyBkErrors that can happen when creating a bodyjCadet BluelA chat BadgeAeA cheer bomb happenedlA Cheermote.0B`Return Values for Get CheermotesAdA cheermote fragment1iChocolateiA clip IDAkManage Clips for a channel.0BcPoll has reached its ended_at time.0AhHype train was completed1ChDisplays as part of the video, taking up part of the \xe2\x80\xa60AbAn ID of a ConduitlA Csrf TokenCjA cursor is a pointer to the current \xe2\x80\x9cpage\xe2\x80\x9d in the \xe2\x80\xa6CbPeriod over which the returned data is aggregated.AnChat is now in emote only mode0AgEmote-only chat enablednAn empty body.kEvent Types0BcUser extends sub through the month.AkUser extends a (gifted) subBeReturn Values for Get User Extensions0iFirebrickBcChat is now in followers only mode.0AkFollowers-only chat enabledBoMetadata associated with the followers command.AjA user follows the channelBmResponse from the following::Following topic.1CmFulfilled reward - the user has claimed it and the reward \xe2\x80\xa60CfRedemption was fullfilled, e.g it skipped reward queueA`Global ModeratorjGolden RodkA highlight0Alhttp crate returned an error0iA IGDB IDAkcould not serialize as jsonCjDefines the message that the EventSub WebSocket server \xe2\x80\xa6d120sd150sd180sC`Poll is no longer visible to any user on Twitch.00B`Return Values for Get Moderators0DhYou are permanently banned from talking in <code>&lt;channel&gt;</code>.0BkOptional scopes needed by this subscriptionBgOptional scopes needed by this endpoint0jOrange RedB`A request that can be paginated.Cacould not deserialize, error on [{path}]. {error}AkThe list of permitted termsiA poll IDAaProfane language.oReply from Raid?BcRequest for the client to reconnectBkGifted resubscription with optional message0BlContent relating to or expressing sexuality.AcSponsored cheermoteBbA Stream Key (hidden Debug output)AcUser has subscribedAeSuper Hard difficultyDbToken URL (<code>https://id.twitch.tv/oauth2/token</code>) for \xe2\x80\xa6iA Team IDCeCould not parse the timestamp using <code>time</code>AaRFC3339 timestampBdMessage response from twitch PubSub.BnChannel hit by TOS strike, meaning it will endBhTransport setting for event notificationBbA stream tag as defined by Twitch.AgA user was untimed out.0iUntimeoutBoMetadata associated with the untimeout command.DgPossible errors from <code>Client::req()</code> when using the ureq \xe2\x80\xa6BfReturn Values for Get Users Block List0BaReturn Values for Get User Emotes0jA user ID.AkA first message from a userClAn User Token from the OAuth implicit code flow or OAuth \xe2\x80\xa6CbToken for making requests in the context of an \xe2\x80\xa61Cjcould not parse <code>http::Request::body()</code> as UTF8Dbcould not parse response as utf8 when calling <code>GET {2}</code>Dbcould not parse response as utf8 when calling <code>PUT {2}</code>Dccould not parse response as utf8 when calling <code>POST {2}</code>0Decould not parse response as utf8 when calling <code>DELETE {2}</code>32110CgA validator is a way to check if an array of scopes \xe2\x80\xa60mType of videoAmCurrent viewcount on playbackAcWebsocket transportAlWebsocket transport responsehEventsublA Whisper IDAmAdd a single scope to request0BiGet a slice of all defined twitch Scopes.CnThe UTC date and time (in RFC3339 format) of when the user \xe2\x80\xa60lBits by poll00BbThe number of bits that were sent.ClIndicates whether or not emote information is accessible \xe2\x80\xa6AaChallenge string.lA Cheermote.0CjYour application\xe2\x80\x99s client id. The provided client_id \xe2\x80\xa6CjThe client_id of the application that was granted user \xe2\x80\xa61CjThe client_id of the application with revoked user access.21202120222CmClient ID associated with the token. Twitch requires this \xe2\x80\xa6000AlSet the component extensionsCmA dictionary that contains the data for a video-component \xe2\x80\xa6000DaCreates the <code>condition</code> for this EventSub subscriptionBaSubscription-specific parameters.CdJSON object specifying custom parameters for the \xe2\x80\xa600AfSet theme to dark modeAfURL to embed the clip.0Adtypes for extensionsBgGet the followers of <code>to_id</code>CkGet the broadcasters that <code>from_id</code> is followingAkPubSub messages for followsBgOrdered list of chat message fragments.0BbThe message split up in fragments.BfDisplay name corresponding to from_id.0BlName of the game being played on the channel0AnName of the game being played.00BlName of the game being played on the stream.0CcGets clip information by clip ID (one or more), \xe2\x80\xa6D`Gets game information by game ID or name. <code>get-games</code>DdGet a field from the response that is not part of <code>data</code>.CkGet information about all polls or specific polls for a \xe2\x80\xa6DcGets information for a specific Twitch Team. <code>get-teams</code>CnGets information about one or more specified Twitch users. \xe2\x80\xa6AkUser ID of the broadcaster.0AjID of the subscribed user.AlSets the has_delay parameterClA Boolean value that determines whether the API captures \xe2\x80\xa60BnA hype train has started, progressed or ended.BeHelix endpoints regarding hype trainsAoPubSub messages for hype-trainsAeURL to image of badgeCjA Boolean value that determines whether Shield Mode is \xe2\x80\xa60AiSet status of shield mode1CnA Boolean value that determines whether to activate Shield \xe2\x80\xa6CmCompare another time and return <code>self &lt; other</code>.CoReturns <code>true</code> if the gifter is <code>Gifter</code>.CkA boolean identifying whether the channel is flagged as \xe2\x80\xa60ClIndicates if the broadcaster has specified their channel \xe2\x80\xa600ClIs the reward currently paused. If true, viewers can\xe2\x80\x99t \xe2\x80\xa600000000CkIs the reward currently paused, if true viewers can\xe2\x80\x99t \xe2\x80\xa600000A`Reward is pausedCnReturns true if this is the only reference to the data and \xe2\x80\xa6AeGet live streams onlyCdFilter results for live streams only. Default: false0CmThe time the Channel Points Prediction will automatically \xe2\x80\xa600ClUTC timestamp for when the Prediction was locked. If the \xe2\x80\xa600CnA user\xe2\x80\x99s moderator privileges on a specified channel are \xe2\x80\xa6BfNormalize the timestamp into UTC time.AiName of the subscription.00BcTotal amount of redemptions changedCeRequest on a valid <code>RequestPatch</code> endpointCaOptional. Specify a reward id to only receive \xe2\x80\xa600000CkSpecify a reward id to only receive notifications for a \xe2\x80\xa6101110101AhSpecific reward to queryCmWhen ID is not provided, this parameter returns paginated \xe2\x80\xa6CmID of the Custom Reward the redemptions to be updated are \xe2\x80\xa610CnThe ID of the user sending the message. This ID must match \xe2\x80\xa60CkReturns a slice of self that is equivalent to the given \xe2\x80\xa6CkA Boolean value that determines whether the broadcaster \xe2\x80\xa6000000AlID of broadcaster doing raid00BmSplits the bytes into two at the given index.ChIndex in the message for the start of the problem (0 \xe2\x80\xa6CjID of the stream that the video originated from if the \xe2\x80\xa60ClA specified channel receives a subscriber. This does not \xe2\x80\xa6AoID of targeted broadcaster/user00jTeam name.B`Time the pubsub message was sent0000A`Transport methodClNotification delivery specific information. Includes the \xe2\x80\xa6CjThe transport details that you want Twitch to use when \xe2\x80\xa60BnThe transport details about the disable shard.0BnThe notification delivery specific informationCmJSON object indicating the notification delivery specific \xe2\x80\xa610BoThe code that the user will use to authenticateCfThe user display name for the user who has granted \xe2\x80\xa6ClThe user name for the user who has revoked authorization \xe2\x80\xa6AoThe user\xe2\x80\x99s user display name.02121BgThe requested broadcaster display name.BgThe display name of the redeeming user.0CbDisplay name of the user that redeemed the reward.0AjThe user\xe2\x80\x99s display name.BdThe message sender\xe2\x80\x99s display name.0CiThe user display name for the user who cheered on the \xe2\x80\xa6ChThe user display name for the user now following the \xe2\x80\xa60BfThe display name of the new moderator.BjThe display name of the removed moderator.ClThe user display name for the user who subscribed to the \xe2\x80\xa6CiThe user display name for the user whose subscription \xe2\x80\xa6ClThe user display name of the user who sent the gift. Set \xe2\x80\xa6CjThe user display name of the user who a resubscription \xe2\x80\xa6CaThe user login of the user that sent the message.ChThe login of the suspicious user whose treatment was \xe2\x80\xa6CnThe user display name for the user who was unbanned on the \xe2\x80\xa6<<B`The display name of the new vip.BdThe display name of the removed vip.CiThe user name of the user that has acknowledged their \xe2\x80\xa6B`The user name of the user being.??BdThe user name of the mentioned user.CfThe user name of the broadcaster raiding this channel.BdThe message sender\xe2\x80\x99s display name.0<;:<:;BgThe display name of the redeeming user.0AmThe display name of the user.CiThe user display name for the user who cheered on the \xe2\x80\xa6ChThe user display name for the user now following the \xe2\x80\xa60BgThe requested broadcaster display name.44CbDisplay name of the user that redeemed the reward.000AjThe user\xe2\x80\x99s display name.0BmThe user name of the user gaining VIP status.BlThe user name of the user losing VIP status.BmThe user name of the user gaining mod status.BlThe user name of the user losing mod status.BgThe user name of the user being banned.BiThe user name of the user being unbanned.BjThe user name of the user being timed out.BfThe user name of the user untimed out.BaThe user name of the user raided.BkThe user name of the no longer user raided.AjThe user name of the user.0BgThe user name of the user being warned.BfThe display name of the new moderator.BjThe display name of the removed moderator.10ClThe user display name for the user who subscribed to the \xe2\x80\xa6CaThe user login of the user that sent the message.ChThe login of the suspicious user whose treatment was \xe2\x80\xa610CnThe user display name for the user who was unbanned on the \xe2\x80\xa6AjThe user\xe2\x80\x99s display name.000B`The display name of the new vip.BdThe display name of the removed vip.10CiThe user name of the user that has acknowledged their \xe2\x80\xa6B`The user name of the user being.10BdThe message sender\xe2\x80\x99s display name.00000000000AkDisplay name of the editor.660666BfDisplay name corresponding to user_id.0707777BdDisplay name of the subscribed user.008BkDisplay name of a user who has been banned.BkDisplay name of a moderator in the channel.:::10:CfThe display name of the user that redeemed the reward.004;;44AnName of user that sent messageBkLogin of user who earned the new Bits badgeBnUser name of user that purchased mystery giftsB`Username of user that subscribed0CcUsername of user that purchased gifted subscription00CnA validator is a way to check if a slice of scopes matches \xe2\x80\xa6BnValidator used for checking scopes in a token.CcConvenience method for making a websocket transportAlTypes for Eventsub websocketClCreate a new response without pagination, total or other \xe2\x80\xa6BaThe specific action that was usedBaReturn Values for Get Ad Schedule0BmA term was added to the list of blocked terms0B`Aggressive behavior or language.BfUnauthenticated: Missing/invalid Token0nA Badge set IDBbReturn Values for Get Banned Users0AoBits voting settings for a pollkBlue VioletAeA game or category IDDh<code>channel.ban</code>: a viewer is banned from the specified channel.0CdAllows the client\xe2\x80\x99s bot users access to a channel.0BiGeneric collection of an abstracted item.AbCommercial startedgUnknownDdDevice URL (<code>https://id.twitch.tv/oauth2/device</code>) for \xe2\x80\xa6AeDeserialization errorAgA deserialization errorCfDiscrimination or negative references to disabilities.kDodger BlueAgSubscription type name.oA chat Emote IDAnScales available for an emote.oAn Emote Set IDAkAn EventSub Subscription IDCcThe current state of a user in a guest star sessionjHarassmentBaRequest failed from reqwests side0BjSet the individual levels for each setting0Bbcould not assemble URI for requestnuri is invalidEdErrors that can happen when creating <code>http::Uri</code> for <code>Request</code>20AaMature-rated gamekPoll choice0A`Status of a poll00BaReturn Values for Get predictions0AdUnique chat disabledDhRevokation URL (<code>https://id.twitch.tv/oauth2/revoke</code>) for \xe2\x80\xa6CkA redemption users can \xe2\x80\x9cbuy\xe2\x80\x9d with channel points to \xe2\x80\xa6AoHelix endpoint GETs information0AoHelix endpoint PUTs information0AfThe user is restrictedAiA subscription revocationCjDefines the message that the EventSub WebSocket server \xe2\x80\xa6BmA structured error that occurred with a shardCaSource type, same as helix hype-train events typelStream endedBeGotten from <code>Stream.type_</code>AnMessage sent with subscriptionCkPoll has been manually terminated before its ended_at time.00ClErrors that can occur when using a <code>TowerService</code>AnChat is now in uniquechat mode0Ce<code>user.update</code>: user updates their account.0AjA collection of validatorsjA video IDmA watch partyCeThe Automod level for hostility involving aggression.0000000DkReturns <code>Some(&amp;ConduitTransport)</code> if this transport is a \xe2\x80\xa6DoReturns <code>Some(&amp;ConduitTransport)</code> if this transport response \xe2\x80\xa6DkReturns <code>Some(&amp;WebhookTransport)</code> if this transport is a \xe2\x80\xa6DoReturns <code>Some(&amp;WebhookTransport)</code> if this transport response \xe2\x80\xa6CjValue of Bits badge tier that was earned (1000, 10000, \xe2\x80\xa6dBits00BbNumber of votes received via Bits.0lBlock a userClBlocks the specified user on behalf of the authenticated \xe2\x80\xa61ChThe bounds of the text that caused the message to be \xe2\x80\xa6ClThe channel_id to listen to. Can be fetched with the Get \xe2\x80\xa6BgID of channel where moderator was added0BnID of channel where channel terms were changedBaId of channel where VIP was addedCnThe channel_id to watch. Can be fetched with the Get Users \xe2\x80\xa60BlID of channel where hype-train was initiated00mID of channel222BdID of channel where message was sent3CbID of channel where user earned the new Bits badge44C`ID of channel where the redemption was triggered0AbID of channel user6BlChannel where mystery gifts were distributed7CgID of the channel that has been subscribed or subgifted0000888AkThe channel_login to watch.AaColor of the userCkAn ID that identifies the conduit to send notifications to.nThe conduit IDCfOptional. The conduit ID to receive events for. If \xe2\x80\xa6oThe conduit ID.ClThe conduit ID to receive events for. If omitted, events \xe2\x80\xa621kConduit ID.000BfThe time the notification was created.CjRFC3339 timestamp indicating when the subscription was \xe2\x80\xa6CkThe UTC timestamp (in RFC3339 format) of when the unban \xe2\x80\xa60011AoDate when the user was created.0CfDate and time the editor was given editor permissions.0CnThe UTC date and time (in RFC3339 format) of when the user \xe2\x80\xa6000CjThe UTC date and time (in RFC3339 format) for when the \xe2\x80\xa60CnThe UTC date and time (in RFC3999 format) when the ban was \xe2\x80\xa6C`Timestamp of when the unban request was created.CnThe UTC date and time (in RFC3339 format) of when the term \xe2\x80\xa612001AoDate when the clip was created.0CnThe UTC timestamp in RFC 3339 format, which indicates when \xe2\x80\xa60C`UTC timestamp for the Prediction\xe2\x80\x99s start time.00BcDate and time the Team was created.B`Date when the video was created.0AoUser that did moderation actionBeUsername of user that added moderator0BnUser who made target VIP (usually broadcaster)BdID of the user who created the clip.0AjID of user would be raided00CbPeriod over which the returned data is aggregated.0AhDifficulty of hype trainChThe Automod level for discrimination against disability.0000000CnA Boolean value that determines whether chat messages must \xe2\x80\xa6000000AbThe type of emote.0000EmReturns <code>broadcaster_id</code>, <code>broadcaster_name</code>, <code>user_id</code>, \xe2\x80\xa600jEvent typeEc<code>subscriptions.subscribe</code>, <code>subscriptions.unsubscribe</code> or \xe2\x80\xa60CcDisplays hypetrain.{event_name}, currently only \xe2\x80\xa6ClThe time at which the hype train expires. The expiration \xe2\x80\xa600000BcThe time at which the timeout ends.CnRFC3339 formatted timestamp for timeouts; empty string for \xe2\x80\xa6CiThe UTC date and time (in RFC3339 format) of when the \xe2\x80\xa60103CmIf the term added is temporary or not and if not, when it \xe2\x80\xa6CfServer time epoch in milliseconds when hype train endsAnGet current lifetime of token.AeLifetime of the tokenBeGet the expires in from this responseBeTime (in seconds) until token expiresBfTime until the code is no longer valid43BkLogin of the user following the to_id user.0CkCreate Bytes with a buffer whose lifetime is controlled \xe2\x80\xa6CjCreate a UserToken from an existing active user token. \xe2\x80\xa6DcRetrieve a reference of the <code>HttpClient</code> inside this \xe2\x80\xa60CmGets video information by video ID (one or more), user ID \xe2\x80\xa6BoConvert this error from a infallible to another0EnConverts a <code>Box&lt;CursorRef&gt;</code> into a <code>Cursor</code> without copying or \xe2\x80\xa6EmConverts a <code>Box&lt;TagLanguageRef&gt;</code> into a <code>TagLanguage</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;ClientIdRef&gt;</code> into a <code>ClientId</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;ClientSecretRef&gt;</code> into a <code>ClientSecret</code> \xe2\x80\xa6EmConverts a <code>Box&lt;AccessTokenRef&gt;</code> into a <code>AccessToken</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;RefreshTokenRef&gt;</code> into a <code>RefreshToken</code> \xe2\x80\xa6EiConverts a <code>Box&lt;CsrfTokenRef&gt;</code> into a <code>CsrfToken</code> without \xe2\x80\xa6EnConverts a <code>Box&lt;UserIdRef&gt;</code> into a <code>UserId</code> without copying or \xe2\x80\xa6EmConverts a <code>Box&lt;DisplayNameRef&gt;</code> into a <code>DisplayName</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;NicknameRef&gt;</code> into a <code>Nickname</code> without \xe2\x80\xa6ElConverts a <code>Box&lt;MsgIdRef&gt;</code> into a <code>MsgId</code> without copying or \xe2\x80\xa6EmConverts a <code>Box&lt;CommunityGiftIdRef&gt;</code> into a <code>CommunityGiftId</code> \xe2\x80\xa6DdConverts a <code>Box&lt;SharedChatSessionIdRef&gt;</code> into a \xe2\x80\xa6EiConverts a <code>Box&lt;WhisperIdRef&gt;</code> into a <code>WhisperId</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;HexColorRef&gt;</code> into a <code>HexColor</code> without \xe2\x80\xa6EkConverts a <code>Box&lt;BadgeSetIdRef&gt;</code> into a <code>BadgeSetId</code> without \xe2\x80\xa6EmConverts a <code>Box&lt;ChatBadgeIdRef&gt;</code> into a <code>ChatBadgeId</code> without \xe2\x80\xa6EmConverts a <code>Box&lt;EmoteIdRef&gt;</code> into a <code>EmoteId</code> without copying \xe2\x80\xa6EkConverts a <code>Box&lt;EmoteSetIdRef&gt;</code> into a <code>EmoteSetId</code> without \xe2\x80\xa6EkConverts a <code>Box&lt;EventSubIdRef&gt;</code> into a <code>EventSubId</code> without \xe2\x80\xa6EiConverts a <code>Box&lt;ConduitIdRef&gt;</code> into a <code>ConduitId</code> without \xe2\x80\xa6EkConverts a <code>Box&lt;ConduitShardIdRef&gt;</code> into a <code>ConduitShardId</code> \xe2\x80\xa6EmConverts a <code>Box&lt;ExtensionIdRef&gt;</code> into a <code>ExtensionId</code> without \xe2\x80\xa6EiConverts a <code>Box&lt;CreatorGoalIdRef&gt;</code> into a <code>CreatorGoalId</code> \xe2\x80\xa6EiConverts a <code>Box&lt;BlockedTermIdRef&gt;</code> into a <code>BlockedTermId</code> \xe2\x80\xa6EkConverts a <code>Box&lt;UnbanRequestIdRef&gt;</code> into a <code>UnbanRequestId</code> \xe2\x80\xa6EgConverts a <code>Box&lt;RewardIdRef&gt;</code> into a <code>RewardId</code> without \xe2\x80\xa6EgConverts a <code>Box&lt;RedemptionIdRef&gt;</code> into a <code>RedemptionId</code> \xe2\x80\xa6EnConverts a <code>Box&lt;PollIdRef&gt;</code> into a <code>PollId</code> without copying or \xe2\x80\xa6EgConverts a <code>Box&lt;PollChoiceIdRef&gt;</code> into a <code>PollChoiceId</code> \xe2\x80\xa6EgConverts a <code>Box&lt;PredictionIdRef&gt;</code> into a <code>PredictionId</code> \xe2\x80\xa6DdConverts a <code>Box&lt;PredictionOutcomeIdRef&gt;</code> into a \xe2\x80\xa6EgConverts a <code>Box&lt;StreamIdRef&gt;</code> into a <code>StreamId</code> without \xe2\x80\xa6EkConverts a <code>Box&lt;CategoryIdRef&gt;</code> into a <code>CategoryId</code> without \xe2\x80\xa6ElConverts a <code>Box&lt;TagIdRef&gt;</code> into a <code>TagId</code> without copying or \xe2\x80\xa6EnConverts a <code>Box&lt;TeamIdRef&gt;</code> into a <code>TeamId</code> without copying or \xe2\x80\xa6EmConverts a <code>Box&lt;VideoIdRef&gt;</code> into a <code>VideoId</code> without copying \xe2\x80\xa6EnConverts a <code>Box&lt;ClipIdRef&gt;</code> into a <code>ClipId</code> without copying or \xe2\x80\xa6EmConverts a <code>Box&lt;StreamSegmentIdRef&gt;</code> into a <code>StreamSegmentId</code> \xe2\x80\xa6EmConverts a <code>Box&lt;HypeTrainIdRef&gt;</code> into a <code>HypeTrainId</code> without \xe2\x80\xa6DbConverts a <code>Box&lt;CharityCampaignIdRef&gt;</code> into a \xe2\x80\xa6DbConverts a <code>Box&lt;CharityDonationIdRef&gt;</code> into a \xe2\x80\xa6EnConverts a <code>Box&lt;IgdbIdRef&gt;</code> into a <code>IgdbId</code> without copying or \xe2\x80\xa6DcConverts a <code>Box&lt;GuestStarSessionIdRef&gt;</code> into a \xe2\x80\xa6EmConverts a <code>Box&lt;GuestStarSlotIdRef&gt;</code> into a <code>GuestStarSlotId</code> \xe2\x80\xa6EkConverts a <code>Box&lt;StreamMarkerIdRef&gt;</code> into a <code>StreamMarkerId</code> \xe2\x80\xa6EiConverts a <code>Box&lt;StreamKeyRef&gt;</code> into a <code>StreamKey</code> without \xe2\x80\xa6EiConverts a <code>Box&lt;TimestampRef&gt;</code> into a <code>Timestamp</code> without \xe2\x80\xa6BgConvert this into a <code>Topics</code>DaReturns <code>true</code> if the chatter is <code>Chatter</code>.DcReturns <code>true</code> if the transport is <code>Conduit</code>.DlReturns <code>true</code> if the transport response is <code>Conduit</code>.BlReturns whether or not the token is expired.0CiIs the reward currently enabled. If false, the reward \xe2\x80\xa600BiIndicates if Bits can be used for voting.CcIndicates if Channel Points can be used for voting.222222CgBoolean flag indicating whether the label should be \xe2\x80\xa60ChIs the reward currently enabled, if false the reward \xe2\x80\xa60000000BoWhether or not Hype Train is enabled in channelAiReward is enabled or not.A`Cooldown enabledAiMax per stream is enabledBbMax per user per stream is enabledCjCheck if the error is due to the authorization request \xe2\x80\xa6DcReturns <code>true</code> if the transport is <code>Webhook</code>.DlReturns <code>true</code> if the transport response is <code>Webhook</code>.CnThe UTC timestamp of the broadcaster\xe2\x80\x99s last ad-break, in \xe2\x80\xa60AgSet theme to light modeBcA UUID that identifies the message.CdA UUID that identifies the message that was removed.1CbThe ID of the message that was flagged by automod.02120022100BdThe ID of the message being deleted.111111111111nGet message id0ClAn ID that uniquely identifies the message. Twitch sends \xe2\x80\xa60000BmThe message id for the message that was sent.0AlA specific message to removeB`The ID of the message to remove.0DbMessage ID of message associated with this <code>bits_event</code>AiIdentifier of the messageChMinimum participation points needed to kickoff hypetrainBcGenerate a user token from mock-apiBdHelix endpoints regarding moderationBePubSub messages for moderator actionsAdtypes for moderationAmMake a new random CSRF token.AiNew status of redemptionsCkThe UTC timestamp of the broadcaster\xe2\x80\x99s next scheduled \xe2\x80\xa6000BaTypes used for paginated requestsCkParse http post request as a Payload with a specific event.BmParse a http payload as an <code>Event</code>DiParse a string as <code>T</code>, logging ignored fields and giving a \xe2\x80\xa6BeDelay as set in broadcaster settings.CkPrediction on the specified channel begins, progresses, \xe2\x80\xa6CjData about the redemption, includes unique id and user \xe2\x80\xa6BmData about the reward that had status updatedCfRequest on a valid <code>RequestDelete</code> endpointCmAn ID that identifies the WebSocket to send notifications \xe2\x80\xa6CnAn ID that identifies the WebSocket that notifications are \xe2\x80\xa6CdID representing the unique session that was started.00CbThe unique identifier for the shared chat session.0011111100000000AiAdd scopes to the request0CeSet the client secret, only necessary if you have oneAeSet the client secretClNumber of slots the Guest Star call interface will allow \xe2\x80\xa600BcSet the start_time for the request.CgStart time for the scheduled broadcast specified in \xe2\x80\xa6CkA timestamp in RFC3339 format to start returning stream \xe2\x80\xa6CgScheduled start time for the scheduled broadcast in \xe2\x80\xa6CdStart time for vacation specified in RFC3339 format.323CaThe timestamp at which the stream went online at.0ClThe UTC timestamp of when the ad break began, in RFC3339 \xe2\x80\xa6CeThe UTC timestamp (in RFC3339 format) of when the \xe2\x80\xa6CnThe UTC timestamp in RFC 3339 format, which indicates when \xe2\x80\xa600ChRFC3339 timestamp indicating the time the session began.0BnThe timestamp at which the hype train started.00AjThe time the poll started.00BoThe time the Channel Points Prediction started.0005551111112222224444446655333300000000555555nUTC timestamp.00AjUTC timestamp. (live only)0BjGet leaderboard starting at this timestampClTimestamp for the period over which the returned data is \xe2\x80\xa60BnStart of the date range for the returned data.BgEnding date/time for the returned clipsCmStarting date/time for returned clips, in RFC3339 format. \xe2\x80\xa609BjUTC timestamp for the poll\xe2\x80\x99s start time.00CiServer time epoch in milliseconds when hype train started>>>AkThe channel\xe2\x80\x99s stream key.0Cfcheck for specific users in broadcasters subscriptionsCeThe background themes that the emote is available in.000000BiThe ID of the user receiving the message.00BjThe ID of the user to receive the whisper.0AfGet the type of token.0CnTotal cost of all the subscriptions for the client ID that \xe2\x80\xa6000ClFinish the device code flow, granting you a token if the \xe2\x80\xa6B`github\xe2\x80\x82crates-io\xe2\x80\x82docs-rs-biglUnban a userCeRemoves the ban or timeout that was placed on the \xe2\x80\xa6CjThe UTC date and time (in RFC3339 format) for when the \xe2\x80\xa60CnThe UTC date and time (in RFC3339 format) of when the term \xe2\x80\xa600BhDate and time the Team was last updated.BmDefined if the term was updated, None if new.CiServer time epoch in milliseconds when hype train was \xe2\x80\xa6ClGives the User-Agent header value for a client annotated \xe2\x80\xa6CiA string that the user entered if the reward requires \xe2\x80\xa6CfThe user input provided. Empty string if not provided.0110000000CkA string that the user entered if the reward requires inputCmThe user login for the user who has granted authorization \xe2\x80\xa6CmThe user login for the user who has revoked authorization \xe2\x80\xa6AhThe user\xe2\x80\x99s user login.02121CeThe user login for the user who was banned on the \xe2\x80\xa6BeThe login name of the redeeming user.B`The login of the redeeming user.BkLogin of the user that redeemed the reward.0AhThe user\xe2\x80\x99s login name.AmThe message sender\xe2\x80\x99s login.0ClThe user login for the user who cheered on the specified \xe2\x80\xa6CkThe user login for the user now following the specified \xe2\x80\xa60BdThe user login of the new moderator.BhThe user login of the removed moderator.CeThe user login for the user who subscribed to the \xe2\x80\xa6CeThe user login for the user whose subscription ended.CmThe user login of the user who sent the gift. Set to null \xe2\x80\xa6CmThe user login of the user who sent a resubscription chat \xe2\x80\xa6C`The user name of the user that sent the message.CkThe display name of the suspicious user whose treatment \xe2\x80\xa6CgThe user login for the user who was unbanned on the \xe2\x80\xa6<<AnThe user login of the new vip.BbThe user login of the removed vip.CjThe login of the user that has acknowledged their warning.BcThe login of the user being warned.??BeThe user login of the mentioned user.CgThe login name of the broadcaster raiding this channel.AmThe message sender\xe2\x80\x99s login.0<;:<:;BeThe login name of the redeeming user.0AfThe login of the user.ClThe user login for the user who cheered on the specified \xe2\x80\xa6CkThe user login for the user now following the specified \xe2\x80\xa60CeThe user login for the user who was banned on the \xe2\x80\xa6B`The login of the redeeming user.0BkLogin of the user that redeemed the reward.000AhThe user\xe2\x80\x99s login name.0BiThe login of the user gaining VIP status.BhThe login of the user losing VIP status.BiThe login of the user gaining mod status.BhThe login of the user losing mod status.BcThe login of the user being banned.BeThe login of the user being unbanned.BfThe login of the user being timed out.BhThe login of the user being untimed out.BcThe login of the user being raided.BmThe login of the user no longer being raided.AfThe login of the user.0BcThe login of the user being warned.BdThe user login of the new moderator.BhThe user login of the removed moderator.10CeThe user login for the user who subscribed to the \xe2\x80\xa6C`The user name of the user that sent the message.CkThe display name of the suspicious user whose treatment \xe2\x80\xa610CgThe user login for the user who was unbanned on the \xe2\x80\xa6AhThe user\xe2\x80\x99s login name.000AnThe user login of the new vip.BbThe user login of the removed vip.10CjThe login of the user that has acknowledged their warning.:0:BbThe message sender\xe2\x80\x99s login name.00000000000AjLogin of the blocked user.055555CkReturns streams broadcast by one or more specified user \xe2\x80\xa6BcLogin of the user who is streaming.07107777AmLogin of the subscribed user.08BdLogin of a user who has been banned.BdLogin of a moderator in the channel.:::10:BnThe login of the user who redeemed the reward.00A`User login name.<<BeLogin of the user who owns the video.0BgLogin name of the user, not capitalized0BcSet the utc_offset for the request.CmA timezone offset for the requester specified in minutes. \xe2\x80\xa60BnTotal number of views of the user\xe2\x80\x99s channel.0BiNumber of times the clip has been viewed.0BjNumber of times the video has been viewed.0ChThe zero-based offset, in seconds, to where the clip \xe2\x80\xa60oThe whisper ID.00oAn Access TokenBmRedemption was updated. Rejected or completedAlBody Parameters for Ban User0BeContext that triggered pubsub messageAcData about Power-upgRewardsCkThe message was caught because of one or more blocked termsAiA blocked term in automodCnA boxed future, mimics <code>futures::future::BoxFuture</code>AkCelebration Effect Power-UpAeOn-screen celebrationDj<code>channel.raid</code>: a broadcaster raids another broadcaster\xe2\x80\x99s \xe2\x80\xa60AgA channel chat badge IDAaHttp client error0kA Client IdCjA compability shim for ensuring an error can represent \xe2\x80\xa6AlReturn Value for Create Clip0BcReturn Values for Get Creator Goals0CjReturn Values for Delete Videos <code>delete-videos</code>AdA users display namelDisplay onlyAlBody Parameters for End Poll0oAn Extension IDlA chat emoteCaHow guests are laid out in a group browser sourceBfClient for Helix or the New Twitch API00nA color in hexoA Hype Train IDAcThe type a message.AkA user according to AutomodCjHey! Your message is being checked by mods and has not \xe2\x80\xa60CnThis room is in slow mode and you are sending messages too \xe2\x80\xa60CnThis room is in subscribers only mode. To talk, purchase a \xe2\x80\xa60CoYou are timed out for <code>&lt;number&gt;</code> more seconds.0AlA nickname, not capitalized.BdA collection over owned string itemsBfA participant in a shared chat sessionkProgressionB`Helix endpoint POSTs information0BiExtension trait for <code>Response</code>lA reward ID.ClAll live guests are tiled within the browser source with \xe2\x80\xa6BiSession information sent with the welcomeAaThe shard status.lSpring GreenkA Stream IDgRewardsBdChat is now in subscribers only mode0AlSubscriber-only chat enabledChLanguage code, formatted as 2 letter language by ISO \xe2\x80\xa6BbTrigger for cheer event/cheer bombAhtwitch returned an errorCetwitch returned an error: {error:?} - {description:?}CmTrait for twitch tokens to get fields and generalize over \xe2\x80\xa60AnReturn Values for Unblock User0CjUnfulfilled reward - the user has claimed it but it is \xe2\x80\xa60CeRedemption is not fullfilled, e.g is in reward queue.AeUser has unsubscribedBjA text fragment that mentions another userDfA reference to a borrowed <code>UserName</code>, also specified as \xe2\x80\xa6CmTwitch revoked your subscription because the users in the \xe2\x80\xa6BiPeriod during which the video was created0lYellow GreenBda warning is acknowledged by a user.BfThe Bits voting settings for the poll.00000000BfTemplate URL for the game\xe2\x80\x99s box art.00000BkAn ID that identifies the charity campaign.00CgAn ID that identifies the charity campaign that the \xe2\x80\xa60AlThe channel\xe2\x80\x99s category ID.000BmGame/Category ID for the scheduled broadcast.00DdCreate Clip using Broadcaster ID (one only) <code>create-clip</code>DeCreate a poll for a specific Twitch channel. <code>create-poll</code>AiThe user\xe2\x80\x99s description.0ClA description of the goal, if specified. The description \xe2\x80\xa600000000BjUpdate the description of the current userAmUser\xe2\x80\x99s channel description.ClThe string to update the channel\xe2\x80\x99s description to. The \xe2\x80\xa610AiDescription of the stream0CfA short description of the marker to help the user \xe2\x80\xa6ClA description that the user gave the marker to help them \xe2\x80\xa6CnThe description that the user gave the marker to help them \xe2\x80\xa6210AgDescrition of the badgeBaLocalized description of the CCL.099AiDescription of the video.0AoGet a description for the tokenAdDescription of errorB`The identifier for a given user.BkThe reason the message was dropped, if any.0BnRFC3339 timestamp of when the follow occurred.000CjDate and time when the from_id user followed the to_id \xe2\x80\xa60CiThe UTC timestamp when the user started following the \xe2\x80\xa6000CeCreates a new <code>Bytes</code> from a static slice.BoConstructs a new Cursor from a static referenceCkTransparently reinterprets the static string slice as a \xe2\x80\xa6CjConstructs a newPredictionOutcomeIdfrom a static referenceCdConstructs a new TagLanguage from a static reference2CaConstructs a new ClientId from a static reference3CeConstructs a new ClientSecret from a static reference4CdConstructs a new AccessToken from a static reference5CeConstructs a new RefreshToken from a static reference6CbConstructs a new CsrfToken from a static reference7BmConstructs a newUserIdfrom a static reference8CbConstructs a newDisplayNamefrom a static reference9BoConstructs a newNicknamefrom a static reference:BlConstructs a newMsgIdfrom a static reference;CfConstructs a newCommunityGiftIdfrom a static reference<CjConstructs a newSharedChatSessionIdfrom a static reference=C`Constructs a newWhisperIdfrom a static reference>BoConstructs a newHexColorfrom a static reference?CaConstructs a newBadgeSetIdfrom a static referenceCkTransparently reinterprets the static string slice as a \xe2\x80\xa6CbConstructs a newChatBadgeIdfrom a static reference1BnConstructs a newEmoteIdfrom a static reference2CaConstructs a newEmoteSetIdfrom a static reference3CaConstructs a newEventSubIdfrom a static reference4C`Constructs a newConduitIdfrom a static reference5CeConstructs a newConduitShardIdfrom a static reference6CbConstructs a newExtensionIdfrom a static reference7CdConstructs a newCreatorGoalIdfrom a static reference8CdConstructs a newBlockedTermIdfrom a static reference9CeConstructs a newUnbanRequestIdfrom a static reference:BoConstructs a newRewardIdfrom a static reference;CcConstructs a newRedemptionIdfrom a static reference<BmConstructs a newPollIdfrom a static reference=CcConstructs a newPollChoiceIdfrom a static reference>CcConstructs a newPredictionIdfrom a static reference?CjConstructs a newPredictionOutcomeIdfrom a static referenceCkTransparently reinterprets the static string slice as a \xe2\x80\xa6BoConstructs a newStreamIdfrom a static reference1CaConstructs a newCategoryIdfrom a static reference2BlConstructs a newTagIdfrom a static reference3BmConstructs a newTeamIdfrom a static reference4BnConstructs a newVideoIdfrom a static reference5BmConstructs a newClipIdfrom a static reference6CfConstructs a newStreamSegmentIdfrom a static reference7CbConstructs a newHypeTrainIdfrom a static reference8ChConstructs a newCharityCampaignIdfrom a static reference9ChConstructs a newCharityDonationIdfrom a static reference:BmConstructs a newIgdbIdfrom a static reference;CiConstructs a newGuestStarSessionIdfrom a static reference<CfConstructs a newGuestStarSlotIdfrom a static reference=CeConstructs a newStreamMarkerIdfrom a static reference>C`Constructs a newStreamKeyfrom a static reference?ClConstructs a new Timestamp from a static reference if it \xe2\x80\xa6CkTransparently reinterprets the static string slice as a \xe2\x80\xa6CoGets information about active streams. <code>get-streams</code>C`Display name of the gifter (if is_gift is true).AkDisplay name of the gifter.010CjValue between 0-100 that represents the slot\xe2\x80\x99s audio \xe2\x80\xa600CfIndicates whether the broadcaster achieved their goal.00ChWhether or not the unban request was approved or denied.CaIndicated if the scheduled broadcast is canceled.ClDetermines whether the response includes featured clips. \xe2\x80\xa6BiIndicates if the clip is featured or not.10CgIs the reward currently in stock. If false, viewers \xe2\x80\xa600000000CnIs the reward currently in stock, if false viewers can\xe2\x80\x99t \xe2\x80\xa6000AbReward is in stockAbReward is sub onlykLeaderboard0BjMake a paginate-able request into a streamBmHelix endpoints regarding channel predictionsoCode for reasonCiThe UTC date and time (in RFC3339 format) of when the \xe2\x80\xa6CbRFC3339 timestamp of when the reward was redeemed.0110000000BhTimestamp in which a reward was redeemedCnTimestamp of when moderator/broadcaster approved or denied \xe2\x80\xa600C`User ID of who resolved the message in the queueCkSeconds until the next commercial can be served on this \xe2\x80\xa60gUnknownBiEpoch Server time when commercial startedAaEpoch Server time000BmNumber of shards associated with this conduitC`The number of shards to create for this conduit.BjThe new number of shards for this conduit.10AmEvents related to shared chatCdShield mode on the specified channel begins or ends.BcMessage sent with this subscription000kTemplate IDBoThe list of blocked terms found in the message.0AfTheme color of channeloCreate the bodyBkUpdates the specified user\xe2\x80\x99s information.BnReturn streams for specified users by nicknameDoCreate a new <code>TwitchClient</code> with an existing <code>HttpClient</code>BkCreate a new client with an existing clientCkThe request has been approved and the user acknowledged \xe2\x80\xa600BoA term was added to the list of permitted terms0BiInformation about the announcement event.AkA announcement notificationCmAutoMod flags a message as potentially inappropriate, and \xe2\x80\xa6CdResponse from the automod_queue::AutoModQueue topic.AjA user follows the channelCcMetadata associated with the automod terms changes.AdChannel Ban V1 EventDh<code>channel.ban</code>: a viewer is banned from the specified channel.10Dc<code>channel.cheer</code>: a user cheers on the specified channel.0lA chat emoteDg<code>channel.unban</code>: a viewer is unbanned from the specified \xe2\x80\xa60mChat settingsoA Client SecretAbAn ID of a ConduitAlA contribution to hype trainAnA contribution to a hype trainlA Csrf TokenBcReturn Values for Get Custom Reward0BdChat is no longer in emote only mode0AhEmote-only chat disabledAgReason hype-train endedBhChat is no longer in followers only mode0AlFollowers-only chat disabledA`Hype train ended0Cagiven token is not of the correct token type: {0}nMax per streamCdBad Request: Query/Body Parameter missing or invalid0ClYour message was not sent because it is identical to the \xe2\x80\xa60CfThis room is in emote-only mode. You can find your \xe2\x80\xa60CnYour message was not sent because you are sending messages \xe2\x80\xa60CcYou don\xe2\x80\x99t have permission to perform that action.0Aimuted segment in a video.Bjno device code found, exchange not startedB`no expiration found on new tokenBgA notification holding some event data.CnDefines a message that the EventSub WebSocket server sends \xe2\x80\xa6BeUser shared a subscription in channelBaAll possible notifications in \xe2\x80\xa6BkInformation about the pay it forward event.AmA pay it forward notificationA`A poll choice IDoA prediction IDmRaid canceled0kRaid update0AgA reward redemption ID.oA Refresh TokenBaRequest failed from reqwests side0Agfailed to do revokationBdrequest when refreshing token failedAmrequest for user token failedBaHelix endpoint PATCHs information0Aireqwest returned an erroroservice erroredmSexual ThemesBbA Stream Key (hidden Debug output)AcA marker on a video0Df<code>stream.online</code>: the specified broadcaster starts a stream.0B`Information about the sub event.BlChannel Subscriptions. Either gifted or not.0lSubscriptionAkA subscription notificationCnThe goal is to increase subscriptions. This type shows the \xe2\x80\xa6ChFragment that is not classified under a AutoMod categoryAaRFC3339 timestampAgA wrapped tower serviceAgClient for Twitch APIs.BdReturn Values for Get Unban Requests0BjMetadata associated with an unban request.1mUnban requestBhView live stream chat and room messages.0AdUser Update V1 EventCe<code>user.update</code>: user updates their account.10BcReturn Values for Get Users Follows0DjValidation URL (<code>https://id.twitch.tv/oauth2/validate</code>) for \xe2\x80\xa6ClIndicates the group layout will contain all participants \xe2\x80\xa6mType of videoB`Return Values for Warn Chat User0lA Whisper IDAfSend whisper messages.0AkView your whisper messages.0CcThe access token used to authenticate requests with0BgGet the access token from this responselAccess token22BcAccess token passed to the function0CmCreate a Validator which matches if all validators passed \xe2\x80\xa6DmCreate a Validator which matches if <strong>any</strong> validator passed \xe2\x80\xa6DmReturns <code>Some(&amp;WebsocketTransport)</code> if this transport is a \xe2\x80\xa6DhReturns <code>Some(&amp;WebsocketTransport)</code> if this transport \xe2\x80\xa6ClA Boolean value that determines whether the extension is \xe2\x80\xa60AhPubSub messages for bitsBjUsername of channel where message was sentCeLogin of channel where user earned the new Bits badgeCiName of the channel that has been subscribed or subgifted0000ClA URL to an image of the charity\xe2\x80\x99s logo. The image\xe2\x80\x99s \xe2\x80\xa60000000000000AeThe charity\xe2\x80\x99s name.000AdName of the charity.1111111111BmThe full message that was sent with the bits.BbCustom message included with shareEdRetrieve a clone of the <code>HttpClient</code> inside this <code>HelixClient</code>CkThe UTC date and time that the WebSocket connection was \xe2\x80\xa6CfThe UTC date and time that the connection was created.BiDisplay name corresponding to creator_id.0BaDisplay name of the blocked user.AfUser\xe2\x80\x99s display name.10BeDisplay name corresponding to user_id0BbDisplay name of user that followedAdDisplay name of userAhDisplay name of the user1CaDisplay name of user that purchased mystery giftsBdDisplay name of user that subscribed0CgDisplay name of user that purchased gifted subscription004CnAn ID that identifies the emote set that the emote belongs \xe2\x80\xa60CnThe broadcaster whose emotes are being requested. Minimum: \xe2\x80\xa6BiID of the emote set the emote belongs to.00100CnEnable or disable function to make the user able to switch \xe2\x80\xa60CjWhether the terms were added due to an Automod message \xe2\x80\xa6CkIndicates whether this term was added due to an Automod \xe2\x80\xa600BkModeration action is triggered from automodCjIf the term was permitted/denied because of a previous \xe2\x80\xa6BgThe ID of the user sending the message.00CjThe ID of the user sending the whisper. This user must \xe2\x80\xa60BcGenerate the URL to request a code.BdGenerate the URL to request a token.CiReturns bare URI for the request, NOT including query \xe2\x80\xa60B`Get chatters in a stream ChatterCnGets the list of users that are connected to the specified \xe2\x80\xa6CiGet all Conduits for the Twitch Developer Application \xe2\x80\xa6CkGet the conduits for your Client. <code>get-conduits</code>BiLogin of the gifter (if is_gift is true).AdLogin of the gifter.01CkThis setting determines how the guests within a session \xe2\x80\xa600AlUser ID of the host channel.00000AhURL to png of size 28x28AhURL to png of size 56x56AjURL to png of size 112x112BlWhether the user cheered anonymously or not.BlWhether the subscription gift was anonymous.DcReturns <code>true</code> if the chatter is <code>Anonymous</code>.DbReturns <code>true</code> if the gifter is <code>Anonymous</code>.223B`Whether the cheer was anonymous.CkIndicates if the ad was automatically scheduled via Ads \xe2\x80\xa600CnIndicates whether the ban is permanent (true) or a timeout \xe2\x80\xa60CeIndicates if this message meets AutoMod requirements.0CiIndicates if the scheduled broadcast is recurring weekly.00DeReturns <code>true</code> if the transport is <code>Websocket</code>.DnReturns <code>true</code> if the transport response is <code>Websocket</code>.BnThe data when this Cheermote was last updated.0BnThe message body of the message being deleted.AdThe type of message.00ChThe ID of a user that has permission to moderate the \xe2\x80\xa6DhRequired only to access the <code>non_moderator_chat_delay</code> or \xe2\x80\xa6ChThe ID of the moderator or the specified broadcaster \xe2\x80\xa6CjThe ID of the broadcaster or a user that is one of the \xe2\x80\xa6CgThe ID of a user who has permission to moderate the \xe2\x80\xa64CmThe ID of the moderator specified in the request for chat \xe2\x80\xa63412055CcThe ID of the user to add as a moderator in the \xe2\x80\xa66CiThe moderator that banned or put the user in the timeout.7CnThe ID of the broadcaster or a user that has permission to \xe2\x80\xa6AeThe moderator\xe2\x80\x99s ID.BoUser ID of the moderator who initiated the ban.7CkAn ID that identifies the moderator that last activated \xe2\x80\xa63CeUser ID of moderator who approved/denied the request.<ChThe ID of the user to remove as a moderator from the \xe2\x80\xa65=5=BcThe moderator that warned the user.ClThe moderator that blocked the word or phrase from being \xe2\x80\xa673?8??1920??7650?<4?3767<BeThe currently authenticated moderatorA`The notification00CiAn event that appears in chat occurs, such as someone \xe2\x80\xa6BhThe list of participants in the session.0000000mParticipatorsBbDate when the video was published.0CbUsername of user that received gifted subscriptionAlUser ID that caused the termAiRevoke the token. See \xe2\x80\xa60AaRevoke the token.AmLevel that this emote is fromAmLevel that this badge is fromnSend a whisperDhSends a whisper message to the specified user. <code>send-whisper</code>CdThe number of snoozes available for the broadcaster.000lStart a raidCgRaid another channel by sending the broadcaster\xe2\x80\x99s \xe2\x80\xa6AiSubscription information.BoSubscription on a specified channel has changedD`Make a <code>EventSubSubscription</code> from this notification.BaSubscription that will be created0BeUsername of targeted broadcaster/user00BkThe name of the user receiving the message.00AmGet the scope as a validator.AbType of cheerbomb.BoTry to convert self into <code>BytesMut</code>.lTwitch typesnUnblock a userCnUnblocks the specified user on behalf of the authenticated \xe2\x80\xa6AlCreate a new unblock requestnUser mentionedCnThe number of users that were watching the broadcaster\xe2\x80\x99s \xe2\x80\xa6BnThe number of users that were watching the \xe2\x80\xa6CgThe number of viewers raiding this channel from the \xe2\x80\xa6AaThe viewer count.3232ClNumber of viewers watching the stream at the time of the \xe2\x80\xa600BeAmount of viewers that will join raid0BfAmount of viewers that would join raidAmTag is auto-generated or not.AmAction to take for a message.0AgMessage held by automodCcStatus of a message that is or was in AutoMod queuenA Badge set IDBlInformation about the bits badge tier event.BfA bits badge tier upgrade notificationAcData for bits eventAaA blocked term IDAaType of broadcastAeA game or category IDiA commandAhCustom channel cheermoteDc<code>channel.follow</code>: a specified channel receives a follow.0AeChannel Raid V1 EventCl<code>channel.raid</code>: a a broadcaster raids another \xe2\x80\xa610Dk<code>channel.update</code>: subscription type sends notifications when \xe2\x80\xa60Cl<code>channel.vip.add</code>: a VIP is added to the channel.0AcTypes of cheermotesClA specific client default for setting some sane defaults \xe2\x80\xa6BdReturn Values for Get Conduit Shards0DoErrors for <code>UserToken::new</code>, <code>UserToken::from_token</code>, \xe2\x80\xa6AaA Creator Goal IDoAn Emote Set IDBeReturn Values for Update CustomRewardAkAn EventSub Subscription IDBgA slot for an extension to be active inAnWhere an extension can appear.0ClIndicates the group layout will contain all participants \xe2\x80\xa6B`Timestamp has an invalid format.Aeinvalid length of {0}AgMessage Effect Power-UpBcAdd a special effect to the messageAjChoice settings for a poll0Aotoken is not authorized for useBoA term was removed to the list of blocked terms0BbHelix endpoint DELETEs information0B`A shard when described by TwitchAnA ban in a shared chat session0CiInformation about the <code>shared_chat_ban</code> event.CmInformation about the sub event that happened in a shared \xe2\x80\xa6BeSource context for blocking the user.Cdstate CSRF does not match when exchanging user tokenAistate CSRF does not matchDf<code>stream.offline</code>: the specified broadcaster stops a stream.0BdChat is no longer in uniquechat mode0BnAn emote that was unlocked as part of a rewardAgURI could not be parsed0AnReturn Values for Get Chatters0AnView a user\xe2\x80\x99s email address.0AmSend messages in a chat room.0ClIndicates the group layout will contain all participants \xe2\x80\xa6AgStatistics about streamCfResponse from the video_playback::VideoPlayback topic.1oVOD Watchparty.BgGet the scope as a static string slice.CnAuthorization from a user has been granted or revoked to a \xe2\x80\xa6CgPubSub messages for when AutoMod flags a message as \xe2\x80\xa6mCancel a raidCaCancel a pending raid. <code>cancel-a-raid</code>AbThe category name.000B`PubSub messages for cheer eventsAkThe channel_login to watch.BkA broadcaster\xe2\x80\x99s chat settings are updatedBfUnban response created by user with idmCreator colorAjCheck if the CSRF is valid0ChSet of default images of 1x, 2x and 4x sizes for the \xe2\x80\xa6000000000000DaDefault image of reward in rewards &amp; challenges screen on \xe2\x80\xa6CkDeletes one or more videos. Videos are past broadcasts, \xe2\x80\xa6AhGet emotes in these setsAkReason why hype train endedBgGet eventsub subscriptions by this typeCkA Boolean value that determines whether the broadcaster \xe2\x80\xa6000000DhAssemble token and validate it. Retrieves <code>client_id</code> and \xe2\x80\xa6CjCreate a UserToken from an existing active user token. \xe2\x80\xa6BeAssemble token from twitch responses.0CbCreate a TwitchTokenResponse from a http::ResponseBmAssemble a a validated token from a response.CjConstructs an <code>Individual</code> from AutoModSettingsCdConstructs an update on individual settings from \xe2\x80\xa6CmGets games sorted by number of current viewers on Twitch, \xe2\x80\xa6CkThe user ID of the guest who transitioned states in the \xe2\x80\xa600BdUrl increment picture. Unknown usageCjIndicates whether or not this emote provides a charity \xe2\x80\xa60DdReturns <code>true</code> if the message is <code>Revocation</code>.F`Returns <code>true</code> if the message in the <code>Payload</code> is <code>Revocation</code>.BiWhether response indicates success or notBmConstructs a new Timestamp without validationBlNumber of events needed to kickoff hypetrainCmThe default AutoMod level for the broadcaster. This field \xe2\x80\xa600000BnThe default AutoMod level for the broadcaster.0CnThe URL to reconnect to if you get a Reconnect message. Is \xe2\x80\xa6CeRefresh this token, changing the token to a newer oneCjThe refresh token used to extend the life of this user \xe2\x80\xa60BhGet the refresh token from this responseBaToken that can be used to refresh322BdRefresh token passed to the function00BjRefresh the token, call if it has expired.CkOnly present when in a shared chat session. The list of \xe2\x80\xa600000CiThe number of consecutive months the user\xe2\x80\x99s current \xe2\x80\xa6CiThe number of consecutive months the user has subscribed.11CaMonths the user has been subscribed for in a row.CfMonths the recipient has been subscribed for in a row.AiName of subscription plan0000BgHelix endpoints regarding subscriptionsAoArray containing subscriptions.0CcAn object that contains the campaign\xe2\x80\x99s target \xe2\x80\xa600CnThe goal\xe2\x80\x99s target value. For example, if the broadcaster \xe2\x80\xa6AjThe goal\xe2\x80\x99s target value.1101011222222ChAn object that contains the amount of money that the \xe2\x80\xa6022CmThumbnail URL of the stream. All image URLs have variable \xe2\x80\xa60000AjURL of the clip thumbnail.0AlImage URL for the Team logo.BlTemplate URL for the thumbnail of the video.0BlThe login of the user receiving the message.00Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsCcAn unban request in a specified channel is changed.CjFinish the device code flow by waiting for the user to \xe2\x80\xa6oAn Access TokenAhA blocked term was added0AjAutomod blocked term addedCjAn App Access Token from the OAuth client credentials flowBdToken for server-to-server requests.1B`A message sent in automod eventsAmQuery Parameters for Ban User0BgA collection over borrowed string itemsDi<code>channel.bits.use</code>: sends a notification whenever Bits are \xe2\x80\xa60AfChannel Cheer V1 EventDc<code>channel.cheer</code>: a user cheers on the specified channel.10Dd<code>channel.goal.end</code>: a goal ends on the specified channel.0Dd<code>channel.poll.end</code>: a poll ends on the specified channel.0CbRead the ads schedule and details on your channel.0AfChannel Unban V1 EventDg<code>channel.unban</code>: a viewer is unbanned from the specified \xe2\x80\xa610AgA channel chat badge IDBkURLs to the same image, animated or static.CjError type to combine a http client error with a other \xe2\x80\xa60ChIterator over the elements of a <code>Collection</code>.AhThe conduit was deleted.AhAn ID of a Conduit ShardAoBody Parameters for Create Poll0AdA users display nameBbRepresents a donation \xe2\x80\x9camount\xe2\x80\x9dBiBackground themes available for an emote.AmQuery Parameters for End Poll0oAn Extension IDAdReply from FollowingAmQuery Parameters for Get VIPs000BaInformation about global cooldownBgReturn Values for Get Hype Train EventsoA Hype Train IDAmHype train started in channel0AoInformation about a shield mode0AkA user\xe2\x80\x99s low trust statusBoevent could not be parsed, some context missingClView a channel\xe2\x80\x99s moderation data including Moderators, \xe2\x80\xa60oModeration typeCcA moderator was added. <code>moderator_added</code>0AfColors a user can haveAfno refresh token foundBkData to keep track of the pagination state.0ChData used to keep track of the pagination for a request.AlParticipations in hype trainBm<code>points</code> not found in the responseBbInformation about the resub event.AlA resubcription notificationAeA reward was redeemedAlserialization of body failedB`Errors from the query serializer10CnInformation about the raid event that happened in a shared \xe2\x80\xa6AbA stream marker IDAeStreamOnline V1 EventDe<code>stream.online</code>: the specified broadcaster starts a stream10BkChat is now longer in subscribers only mode0AmSubscriber-only chat disabledChLanguage code, formatted as 2 letter language by ISO \xe2\x80\xa6AaTier 1 gifted subAaTier 2 gifted subAaTier 3 gifted subBgA game or category as defined by TwitchAkResponse from twitch PubSubAcAn unban request IDAoView emotes available to a user0BbToken validation returned from \xe2\x80\xa60CnTwitch revoked your subscription because the subscribed to \xe2\x80\xa6AnViolent and Graphic DepictionsA`Watch party typeCiDefines the first message that the EventSub WebSocket \xe2\x80\xa6AaBits by extension00AaType of broadcastCnAn ID that identifies the broadcaster that\xe2\x80\x99s running the \xe2\x80\xa600CfAn ID that identifies the broadcaster that ran the \xe2\x80\xa611101110BcGet a specified user\xe2\x80\x99s block listAjUser ID for a Twitch user.0CbGet specified broadcasters ad schedule informationBjGet specified broadcasters channel editors0BoCheck if the user is following this broadcasterAkGet channel VIPs in channelBeModify specified broadcasters channel0CmThe ID of the broadcaster that\xe2\x80\x99s granting VIP status to \xe2\x80\xa6CdBroadcaster\xe2\x80\x99s user ID associated with the channel.00AaID of the channelBdTwitch User ID of this channel ownerCgFollowedBroadcaster\xe2\x80\x99s user ID associated with the \xe2\x80\xa6ClAn ID that uniquely identifies the broadcaster that this \xe2\x80\xa6ClThe ID of the broadcaster whose list of VIPs you want to \xe2\x80\xa64CjThe ID of the broadcaster that\xe2\x80\x99s removing VIP status \xe2\x80\xa65BiID of the channel requesting a commercial4381777652660CjID of the broadcaster whose stream key should be retrievedCcID of the stream whose tags are going to be fetchedCcID of the stream for which tags are to be replaced.CkThe ID of the broadcaster that owns the channel. The ID \xe2\x80\xa621021BnGet chat badges for the specified broadcaster.BnGet emotes in a specific broadcasters channel.BjGet chat settings for broadcasters channelCeRetrieve the active shared chat session for a channelCjThe broadcaster whose chat badges are being requested. \xe2\x80\xa6CaThe broadcaster whose emotes are being requested.CmThe ID of the broadcaster whose chat settings you want to \xe2\x80\xa6CmThe ID of the broadcaster whose list of chatters you want \xe2\x80\xa6BgThe User ID of the channel broadcaster.BgThe User ID of the participant channel.CiThe User ID of a broadcaster you wish to get follower \xe2\x80\xa6CmThe ID of the broadcaster that owns the chat room to send \xe2\x80\xa6CnThe ID of the broadcaster whose chat room the message will \xe2\x80\xa66CcThe ID of the broadcaster specified in the request.63721549807CaChecks subscribed users to this specific channel.AnGet a broadcasters subscribersAoGet events for this broadcasterCmUser ID of the broadcaster. Must match the User ID in the \xe2\x80\xa6AkUser ID of the broadcaster.10BkMust match the User ID in the Bearer token.212101CbCheck automod status in this broadcasters channel.BkGet banned users in a broadcasters channel.BiGet moderators in a broadcasters channel.CmThe ID of the broadcaster that\xe2\x80\x99s granting VIP status to \xe2\x80\xa6ClThe ID of the broadcaster whose list of VIPs you want to \xe2\x80\xa6CjThe ID of the broadcaster that\xe2\x80\x99s removing VIP status \xe2\x80\xa6CkThe ID of the broadcaster that owns the list of blocked \xe2\x80\xa6CbThe ID of the broadcaster that owns the chat room.CiThe ID of the broadcaster whose chat room the user is \xe2\x80\xa6ClThe broadcaster whose chat room the user was banned from \xe2\x80\xa6:ChThe ID of the broadcaster that owns the chat room to \xe2\x80\xa6CmThe ID of the broadcaster whose AutoMod settings you want \xe2\x80\xa6AgThe broadcaster\xe2\x80\x99s ID.=ClAn ID that uniquely identifies the channel this user can \xe2\x80\xa6>CjThe ID of the broadcaster whose Shield Mode activation \xe2\x80\xa6CnThe ID of the broadcaster whose channel is receiving unban \xe2\x80\xa6CiUser ID of broadcaster whose channel is receiving the \xe2\x80\xa6:9CkThe ID of the broadcaster whose channel is approving or \xe2\x80\xa6969CgThe broadcaster whose chat room the user was warned in.CdThe broadcaster that owns the list of blocked terms.436;:;;1<<CmThe ID of the broadcaster that\xe2\x80\x99s granting VIP status to \xe2\x80\xa6?ClThe ID of the broadcaster whose list of VIPs you want to \xe2\x80\xa62?BkMust match the User ID in the Bearer token.<;:03CjThe ID of the broadcaster whose blocked terms you\xe2\x80\x99re \xe2\x80\xa619CkThe ID of the broadcaster that owns the list of blocked \xe2\x80\xa687<=CkThe ID of the broadcaster whose Shield Mode you want to \xe2\x80\xa6CfCreate a single scheduled broadcast or a recurring \xe2\x80\xa6AkGet a broadcasters scheduleCfUpdate the settings for a channel\xe2\x80\x99s stream schedule.CmUser ID of the broadcaster who owns the channel streaming \xe2\x80\xa6000AkUser ID of the broadcaster.01101101CbCancel a pending raid on this broadcasters channelCfThe ID of the broadcaster that sent the raiding party.0AkChannel to create reward onBdRewards on this broadcasters channeloReward to fetchBcID of the channel the reward is forCnProvided broadcaster_id must match the user_id in the auth \xe2\x80\xa60010CeThe id of the broadcaster that the reward belongs to.112111210101CbGet Cheermotes in a specific broadcasters channel.CdID for the broadcaster who might own specialized \xe2\x80\xa60CfGets information about the charity campaign that a \xe2\x80\xa60CiThe ID of the broadcaster that\xe2\x80\x99s actively running a \xe2\x80\xa6CkAn ID that uniquely identifies the broadcaster that\xe2\x80\x99s \xe2\x80\xa6CjThe ID of the broadcaster that\xe2\x80\x99s currently running a \xe2\x80\xa6210BhBroadcaster for whom clips are returned.CnCreate a new <code>CreateClipRequest</code> with the given \xe2\x80\xa6CjID of the broadcaster for whom clips are returned. The \xe2\x80\xa6CfUser ID of the stream from which the clip was created.CmThe ID of the broadcaster whose stream you want to create \xe2\x80\xa6210BnGets the broadcaster\xe2\x80\x99s list of active goals.BkMust match the User ID in the Bearer token.BoAn ID that uniquely identifies the broadcaster.10AcGet hypetrain evens22AmThe requested broadcaster ID.AnThe broadcaster running polls.CjThe broadcaster running polls. Provided broadcaster_id \xe2\x80\xa600AfID of the broadcaster.01110CkGet information about predictions for this broadcasters \xe2\x80\xa6CaThe broadcaster running Predictions. Provided \xe2\x80\xa6220CaThe broadcaster running predictions. Provided \xe2\x80\xa613CcID of the stream whose tags are going to be fetched0BiGet the team of this specific broadcasterhTeam ID.AkUser ID of the broadcaster.CkUsed with recurring scheduled broadcasts. Specifies the \xe2\x80\xa6BnNumber of Channel Points used for the outcome.BbPubSub messages for channel points1CiCreate a Conduit for the Twitch Developer Application \xe2\x80\xa6DbCreates a new conduit for your Client. <code>create-conduit</code>EaCreate a <code>http::Request</code> from this <code>Request</code> in your client000000000CkAn object that contains the current amount of donations \xe2\x80\xa600AbThe current value.00000000111111CiThe current amount of donations that the campaign has \xe2\x80\xa6011CjThe number of decimal places used by the currency. For \xe2\x80\xa6DhConstruct <code>Self</code> with sane defaults for API calls and oauth2.AmGenerates url for this emote.AlDeletes a specified conduit.ChDeletes a specified conduit. <code>delete-conduit</code>BjEnd a prediction that is currently active.BiThe name of the user sending the message.00ChRetrieves the list of available Cheermotes, animated \xe2\x80\xa6AhGet emotes in emote setsCkGets all Twitch emotes for one or more specific emote sets.CjConvenience method for getting the event type from the \xe2\x80\xa6D`Returns all moderators in a channel. <code>get-moderators</code>B`Gets the channel\xe2\x80\x99s stream key.ClGets the channel\xe2\x80\x99s stream key. <code>get-stream-key</code>CiGenerate the code with the help of the authorization codeBlGenerate the code with the help of the hash.CjThe user ID of the subscription gifter. Null if anonymous.oThe host login.00000DjConverts this <code>Cursor</code> into a <code>Box&lt;CursorRef&gt;</code>CiConverts this <code>PredictionOutcomeId</code> into a \xe2\x80\xa6EdConverts this <code>TagLanguage</code> into a <code>Box&lt;TagLanguageRef&gt;</code>DnConverts this <code>ClientId</code> into a <code>Box&lt;ClientIdRef&gt;</code>EfConverts this <code>ClientSecret</code> into a <code>Box&lt;ClientSecretRef&gt;</code>EdConverts this <code>AccessToken</code> into a <code>Box&lt;AccessTokenRef&gt;</code>EfConverts this <code>RefreshToken</code> into a <code>Box&lt;RefreshTokenRef&gt;</code>E`Converts this <code>CsrfToken</code> into a <code>Box&lt;CsrfTokenRef&gt;</code>DjConverts this <code>UserId</code> into a <code>Box&lt;UserIdRef&gt;</code>EdConverts this <code>DisplayName</code> into a <code>Box&lt;DisplayNameRef&gt;</code>DnConverts this <code>Nickname</code> into a <code>Box&lt;NicknameRef&gt;</code>DhConverts this <code>MsgId</code> into a <code>Box&lt;MsgIdRef&gt;</code>CeConverts this <code>CommunityGiftId</code> into a \xe2\x80\xa6CiConverts this <code>SharedChatSessionId</code> into a \xe2\x80\xa6E`Converts this <code>WhisperId</code> into a <code>Box&lt;WhisperIdRef&gt;</code>DnConverts this <code>HexColor</code> into a <code>Box&lt;HexColorRef&gt;</code>EbConverts this <code>BadgeSetId</code> into a <code>Box&lt;BadgeSetIdRef&gt;</code>EdConverts this <code>ChatBadgeId</code> into a <code>Box&lt;ChatBadgeIdRef&gt;</code>DlConverts this <code>EmoteId</code> into a <code>Box&lt;EmoteIdRef&gt;</code>EbConverts this <code>EmoteSetId</code> into a <code>Box&lt;EmoteSetIdRef&gt;</code>EbConverts this <code>EventSubId</code> into a <code>Box&lt;EventSubIdRef&gt;</code>E`Converts this <code>ConduitId</code> into a <code>Box&lt;ConduitIdRef&gt;</code>EjConverts this <code>ConduitShardId</code> into a <code>Box&lt;ConduitShardIdRef&gt;</code>EdConverts this <code>ExtensionId</code> into a <code>Box&lt;ExtensionIdRef&gt;</code>EhConverts this <code>CreatorGoalId</code> into a <code>Box&lt;CreatorGoalIdRef&gt;</code>EhConverts this <code>BlockedTermId</code> into a <code>Box&lt;BlockedTermIdRef&gt;</code>EjConverts this <code>UnbanRequestId</code> into a <code>Box&lt;UnbanRequestIdRef&gt;</code>DnConverts this <code>RewardId</code> into a <code>Box&lt;RewardIdRef&gt;</code>EfConverts this <code>RedemptionId</code> into a <code>Box&lt;RedemptionIdRef&gt;</code>DjConverts this <code>PollId</code> into a <code>Box&lt;PollIdRef&gt;</code>EfConverts this <code>PollChoiceId</code> into a <code>Box&lt;PollChoiceIdRef&gt;</code>EfConverts this <code>PredictionId</code> into a <code>Box&lt;PredictionIdRef&gt;</code>CiConverts this <code>PredictionOutcomeId</code> into a \xe2\x80\xa6DnConverts this <code>StreamId</code> into a <code>Box&lt;StreamIdRef&gt;</code>EbConverts this <code>CategoryId</code> into a <code>Box&lt;CategoryIdRef&gt;</code>DhConverts this <code>TagId</code> into a <code>Box&lt;TagIdRef&gt;</code>DjConverts this <code>TeamId</code> into a <code>Box&lt;TeamIdRef&gt;</code>DlConverts this <code>VideoId</code> into a <code>Box&lt;VideoIdRef&gt;</code>DjConverts this <code>ClipId</code> into a <code>Box&lt;ClipIdRef&gt;</code>CeConverts this <code>StreamSegmentId</code> into a \xe2\x80\xa6EdConverts this <code>HypeTrainId</code> into a <code>Box&lt;HypeTrainIdRef&gt;</code>CgConverts this <code>CharityCampaignId</code> into a \xe2\x80\xa6CgConverts this <code>CharityDonationId</code> into a \xe2\x80\xa6DjConverts this <code>IgdbId</code> into a <code>Box&lt;IgdbIdRef&gt;</code>ChConverts this <code>GuestStarSessionId</code> into a \xe2\x80\xa6CeConverts this <code>GuestStarSlotId</code> into a \xe2\x80\xa6EjConverts this <code>StreamMarkerId</code> into a <code>Box&lt;StreamMarkerIdRef&gt;</code>E`Converts this <code>StreamKey</code> into a <code>Box&lt;StreamKeyRef&gt;</code>E`Converts this <code>Timestamp</code> into a <code>Box&lt;TimestampRef&gt;</code>CjDetermines if a message delivered during a shared chat \xe2\x80\xa600BeDuration in nanoseconds of each levelAhCreate a listen command.ChWhether a maximum per stream is enabled and what the \xe2\x80\xa600000000BhThe maximum number per stream if enabled000AnMaximum redemptions per streamBdMax amount of redemptions per streamCaThe maximum total cost allowed for all of the \xe2\x80\xa6000BgA moderator removes a specific message.CdDisplay name of the moderator who initiated the ban.AoThe moderator\xe2\x80\x99s display name.00100AlMuted segments in the video.0AgToken will never expire0CgMake a new random CSRF token with given amount of bytesBlUser ID of the sender of the parent message.oParse response.000000000AlParticipations in hype train0DiRequest on a valid <code>RequestGet</code> endpoint, with the ability \xe2\x80\xa6DiRequest on a valid <code>RequestPut</code> endpoint, with the ability \xe2\x80\xa6CaUsername of who resolved the message in the queueClSelected count for cheer. e.g How many that will receive \xe2\x80\xa6BmShould returns the current pagination cursor.CkIf available, pushes back the timestamp of the upcoming \xe2\x80\xa6BfSet the source_context for this block.CnSource context for blocking the user. Valid values: \xe2\x80\x9cchat\xe2\x80\xa60CjThe message Twitch shows in the chat room for this notice.00CgThe ID of the user that was banned or put in a timeout.BmThe ID of the user whose message was deleted.1010AgUser ID of the follower000AkTarget of moderation actionAeID of added moderator0AkUser ID of who was made VIPCjTarget user ID of unban request, e.g the user that was \xe2\x80\xa6CgUser ID of the sender of the thread\xe2\x80\x99s parent message.CiServer time epoch in milliseconds when hype train expiresCmArray of users who were the top predictors. null if none. \xe2\x80\xa60gUnknownAhEmote that was unlocked.BcUpdates a conduit\xe2\x80\x99s shard count..CnUpdates a conduit\xe2\x80\x99s shard count. <code>update-conduit</code>BfData about the reward that was updatedChValidate this token. Should be checked on regularly, \xe2\x80\xa60AdValidate this token.DcVerify that this event is authentic using <code>HMAC-SHA256</code>.CfPubSub messages for (live) stream playback informationkWarn a userCkWarns a user in a broadcaster\xe2\x80\x99s chat room, preventing \xe2\x80\xa6AhAn active extension slot0BfReturn Values for Get AutoMod Settings00CiBasic information about the automatic reward that was \xe2\x80\xa6BoA category identified by automod for a message.CnFragment that is classified under a AutoMod category which \xe2\x80\xa6AhAutomod message rejectedAiA list with Automod termsAfTypes of bearer tokensCnThe subscription to the beta subscription type was removed \xe2\x80\xa6BfReturn Values for Get Bits Leaderboard0AjThe type of Power Up used.BcReturn Values for Get Channel TeamsClBroadcaster types: \xe2\x80\x9cpartner\xe2\x80\x9d, \xe2\x80\x9caffiliate\xe2\x80\x9d, or \xe2\x80\x9c\xe2\x80\xa6AgChannel Follow V1 EventDf<code>channel.follow</code> v1: a specified channel receives a follow.10AgChannel Follow V2 EventDf<code>channel.follow</code> v2: a specified channel receives a follow.10Dk<code>channel.moderate</code>: a moderator performs a moderation action \xe2\x80\xa60CePerform moderation actions in a channel. The user \xe2\x80\xa60BfRead the list of VIPs in your channel.0AgChannel Update V1 EventDdversion 1 of <code>channel.update</code> subscription type sends \xe2\x80\xa610AgChannel Update V2 EventDj<code>channel.update</code> subscription type sends notifications when \xe2\x80\xa610AhChannel VIP Add V1 EventCl<code>channel.vip.add</code>: a VIP is added to the channel.010BfReturn Values for Get Charity Campaign0BmInformation about the charity donation event.AoA charity donation notificationAkImages for different themesoA Client SecretAcA community gift IDAdType of creator goalCnA client that will never work, used to trick documentation \xe2\x80\xa6CiAn emote index as defined by eventsub, similar to IRC \xe2\x80\xa6AgBuilder for emote URLs.AnQuery Parameters for Get Clips0AnQuery Parameters for Get Games0AnQuery Parameters for Get polls0AnQuery Parameters for Get TeamsAnQuery Parameters for Get Users0ChInformation about the community gift paid upgrade event.CjA gift notification for a paid upgrade of a previously \xe2\x80\xa6AdA Guest Star Slot IDBkinvalid or unexpected response from twitch.000000000BeInformation about user in leaderboardCjThe goal is to increase subscriptions. This type shows \xe2\x80\xa6B`The state of a paginated request0A`A poll choice IDoA prediction IDAgA reward redemption ID.oA Refresh TokenCcA term was removed from the list of permitted terms0B`Body Parameters for Send Whisper0ChInformation about the resub event that happened in a \xe2\x80\xa6BaAn unban in a shared chat session0CkInformation about the <code>shared_chat_unban</code> event.BbReturn Values for Start Commercial0AfStreamOffline V1 EventDf<code>stream.offline</code>: the specified broadcaster stops a stream.10AdA Stream Segment ID.D`Information about a team. Get team <code>members</code> with \xe2\x80\xa6CfCould not format the timestamp using <code>time</code>C`could not parse response when getting user tokenA`Transport methodCg[DEPRECATED] Was previously used for \xe2\x80\x9cCreate User \xe2\x80\xa60BiView the list of channels a user follows.0Ahcould not validate tokenBgcould not get validation for user tokenBbcould not get validation for token0BfErrors for AccessToken::validate_tokennType of video.AbA watchparty rerunCiDefines the first message that the EventSub WebSocket \xe2\x80\xa6AaAdd a channel vipC`Adds a VIP to the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa60BoNumber of Bits required to vote once with Bits.CgNumber of Channel Points required to vote once with \xe2\x80\xa6CbGet channel information for specific broadcasters.BaA URL to the charity\xe2\x80\x99s website.00000000000AdA URL to the charity0BnThe user ID of the user that sent the message.000BfLevel of hype-train that was initiatedCnCreates <code>Bytes</code> instance from slice, by copying it.CfThe currently authenticated user for whose automod \xe2\x80\xa6CkThe UTC date and time that the WebSocket connection was \xe2\x80\xa6BgThe month duration of the subscription.BmThe number of months the subscription is for.0011BgRFC3339 formatted timestamp for events.00CdSend the chat message only to the source channel \xe2\x80\xa6CmDetermines if the chat message is sent only to the source \xe2\x80\xa60BjThe login of the user sending the message.00CkGets ad schedule related information, including snooze, \xe2\x80\xa6A`Get games by ID.CeGet information about all predictions or specific \xe2\x80\xa6CkGets the list of tags for a specified stream (channel). \xe2\x80\xa60CcGet all emotes accessible to the user in all chats.CkRetrieves emotes available to the user across all channels.CmWhether a cooldown is enabled and what the cooldown is in \xe2\x80\xa600000000BaInformation about global cooldownA`The guest login.00AfThe host display name.00000DfReturns <code>true</code> if the message is <code>Notification</code>.FbReturns <code>true</code> if the message in the <code>Payload</code> is <code>Notification</code>.BmLogin of the moderator who initiated the ban.AmThe moderator\xe2\x80\x99s login name.00100AiData used when paginating0D`Parse a websocket frame as an <code>EventsubWebsocketData</code>DjRequest on a valid <code>RequestPost</code> endpoint, with the ability \xe2\x80\xa6AnUser name that caused the termChResolution text supplied by the mod/broadcaster upon \xe2\x80\xa600BeSet the resolution text for a requestChText input by the resolver (moderator) of the unban. \xe2\x80\xa6CgMessage supplied by the unban request resolver. The \xe2\x80\xa6110BoSearch Channels via channel name or descriptionCnReturns a list of channels (users who have streamed within \xe2\x80\xa6CbSends a Shoutout to the specified broadcaster. \xe2\x80\xa6BeThe Automod level for sexual content.0000000jTier 1 sub00jTier 2 sub00jTier 3 sub00CkA Boolean value that determines whether only users that \xe2\x80\xa6000000CnA user\xe2\x80\x99s moderator privileges on a specified channel are \xe2\x80\xa6CbConstruct into a <code>OffsetDateTime</code> time.ClThe total number of bits that were ever sent by the user \xe2\x80\xa6AfUse theme color or notAnThe user is actively monitoredAjA permitted term was added0AlAutomod permitted term addedDg<code>ChannelBitsEventsV2Reply::BitsEvent</code> event unlocked new \xe2\x80\xa6AoQuery Parameters for Block User0AaA blocked term IDAhChannel Bit Use V1 EventDi<code>channel.bits.use</code>: sends a notification whenever Bits are \xe2\x80\xa6010Dk<code>channel.chat.clear</code>: a moderator or bot clears all messages \xe2\x80\xa60Dh<code>channel.goal.begin</code>: a goal begins on the specified channel.0AiChannel Goal End V1 EventDc<code>channel.goal.end</code>: a specified broadcaster ends a goal.010BaManage ads schedule on a channel.0Dh<code>channel.poll.begin</code>: a poll begins on the specified channel.0AiChannel Poll End V1 EventDd<code>channel.poll.end</code>: a poll ends on the specified channel.010BaView Creator Goals for a channel.0AiView a channel\xe2\x80\x99s polls.0Db<code>channel.subscribe</code>: a specified channel receives a \xe2\x80\xa60Dc<code>channel.vip.remove</code>: a VIP is removed from the channel.0BcLength of the commercial in secondsBoInformation about the community gift sub event.CjA gift notification for multiple gifted subscriptions. \xe2\x80\xa6AjReward given to conductorsAaConduit transportAdType of contributionBdType of contribution to a hype trainAaA Creator Goal IDAkAn unban request was denied0AdUnban request deniedAdUnban Request DeniedDlcould not parse <code>http::Request::body()</code> as a <code>Payload</code>Ckdeserialization failed when processing request response \xe2\x80\xa60000000Afdeserialization failedAoQuery Parameters for Get Videos0BbGigantify an Emote Effect Power-UpAjSend a giant emote in chatA`Global cheermoteAlGlobal third party cheermoteCcCreate a body. Used for specializing request bodiesClIndicates the group layout will contain all participants \xe2\x80\xa6AeHype train leveled up0AbHype train rewards0BhReturn Values for Get Moderated Channels0CcA moderation action. <code>moderation_action</code>0ChThe moderator that authorized the subscription is no \xe2\x80\xa6CgA moderator was removed. <code>moderator_removed</code>0CkYour message was not sent because it contained too many \xe2\x80\xa60DmThis room is in <code>&lt;duration&gt;</code> followers-only mode. Follow \xe2\x80\xa60CiThis room requires a verified account to chat. Please \xe2\x80\xa60Clpair serializer only supports strings, integers, floats, \xe2\x80\xa60AhStatus of the Prediction0CdInformation about the Prime gift paid upgrade event.CjA notification for a paid upgrade of a previous Twitch \xe2\x80\xa6CjDefines the message that the EventSub WebSocket server \xe2\x80\xa6CmCustom reward redemption statuses: UNFULFILLED, FULFILLED \xe2\x80\xa6AeStatus for redemptionBdErrors for AccessToken::revoke_tokenCdA user banned in another channel that shares ban \xe2\x80\xa6BkA message deletion in a shared chat session0ClInformation about the <code>shared_chat_delete</code> event.BhReturn Values for Get Shield Mode Status00AbSubscription tiersAhLocation of Twitch HelixAoQuery Parameters for Unban User0Bcunknown event type encountered: {0}BcReceive whispers sent to your user.0BiReturn Values for Check User Subscription0BiBuilder for OAuth authorization code flow0BbBody Parameters for Warn Chat User0AaWebhook transportChAdds a word or phrase to the broadcaster\xe2\x80\x99s list of \xe2\x80\xa6AlSet animation mode to staticCnCustom background color for the reward. Format: Hex with # \xe2\x80\xa60000000000000000CmColor of background in rewards &amp; challenges screen on \xe2\x80\xa6CnAn ID that identifies the broadcaster that\xe2\x80\x99s running the \xe2\x80\xa60BaThe broadcaster\xe2\x80\x99s display name.011000110BnTwitch user display name of this channel owner110B`Display name of the broadcaster.0000AmThe channels\xe2\x80\x99 display name.33031111BmDisplay name of the channel the reward is for0CgThe display name of the broadcaster that the reward \xe2\x80\xa6110055BmDisplay name corresponding to broadcaster_id.066AhName of the broadcaster.000005CnUser\xe2\x80\x99s broadcaster type: \xe2\x80\x9cpartner\xe2\x80\x9d, \xe2\x80\x9caffiliate\xe2\x80\x9d, \xe2\x80\xa60BbHype train public callout emote IDCgPoll on a specific channel has been begun, ended or \xe2\x80\xa6BeThe chat rules cited for the warning.BaChat rules cited for the warning.11BePubSub messages for community points.CjThe timestamp at which the hype train cooldown ends so \xe2\x80\xa6CeThe UTC timestamp (in RFC3339 format) of when the \xe2\x80\xa61100BiUnban response created by user with loginCjThe number of subscriptions gifted by this user in the \xe2\x80\xa6CmThe amount of gifts the gifter has given in this channel. \xe2\x80\xa6011CdLength in seconds of the mid-roll ad break requested00ChReturns all banned and timed-out users in a channel. \xe2\x80\xa6AeGet User from user idCeThe user name of the subscription gifter. Null if \xe2\x80\xa6BnEvents regarding guests of guest star sessionsAgThe guest display name.00C`Information about the last activated shield mode00BgThe status set for the suspicious user.00000BnUser name of the sender of the parent message.DkParse a json Value as <code>T</code>, logging ignored fields and giving \xe2\x80\xa6DbParse string slice as a <code>Payload</code> with a message of \xe2\x80\xa6CkThe relative offset (in seconds) of the marker from the \xe2\x80\xa6000DkRequest on a valid <code>RequestPatch</code> endpoint, with the ability \xe2\x80\xa6BoStarts a commercial on a specified channel. \xe2\x80\xa6CiThe user name of the user that was banned or put in a \xe2\x80\xa6CdThe user name of the user whose message was deleted.1010CiUser name of the sender of the thread\xe2\x80\x99s parent message.DfReturns <code>Some(ConduitTransport)</code> if this transport is a \xe2\x80\xa6DkReturns <code>Ok(ConduitTransport)</code> if this transport response is \xe2\x80\xa6DfReturns <code>Some(WebhookTransport)</code> if this transport is a \xe2\x80\xa6DkReturns <code>Ok(WebhookTransport)</code> if this transport response is \xe2\x80\xa6BgThe ID of the Unban Request to resolve.0CkA Boolean value that determines whether the broadcaster \xe2\x80\xa6000000AjCreate a unlisten command.CcThe address you will send users to, to authenticateAnValid colors for announcements0AgReply from AutoModQueueBaThe reason why a message was heldAlAn action on an Automod term00CfAdd or remove the VIP role from users in your channel.0AiChannel Moderate V1 EventDk<code>channel.moderate</code>: a moderator performs a moderation action \xe2\x80\xa610AiChannel Moderate V2 Event101AbA user gifts subs.CjResponse from the channel_sub_gifts::ChannelSubGiftsV1 \xe2\x80\xa61AeA Charity Campaign IDAeA Charity Donation IDAhAn ID of a Conduit ShardB`Query Parameters for Create Clip0BbBody Parameters for Create Conduit0B`Query Parameters for Create Poll0AlAutomod blocked term removedBmDrugs, Intoxication, or Excessive Tobacco UseBbBody Parameters for End PredictionAiAn EventSub subscription.Cffield serializer only supports strings, sequences, \xe2\x80\xa60B`Query Parameters for Get Streams0BnA user redeems an reward using channel points.CeResponse from the hypetrain::HypeTrainEventsV1 topic.1AfProgress of hype trainAocould not construct header nameCjDefines the message that the EventSub WebSocket server \xe2\x80\xa6AjA users badges in the chatChRead the list of VIPs in channels where you have the \xe2\x80\xa60ClYour message was not sent because your account is not in \xe2\x80\xa60BkErrors that can happen when parsing payloadAjOutcome for the Prediction05ChThe user message and emote information from a reward \xe2\x80\xa6Agcould not refresh tokenBeErrors for TwitchToken::refresh_tokenAjA blocked term was removed0BfReturn Values for Remove Blocked Terms0BeReturn Values for Replace Stream Tags0Cfcould not parse response when getting app access tokenBncould not parse response when validating tokenBlcould not parse response when revoking tokenBocould not parse response when refreshing token.C`could not parse response when getting user tokenAmErrors from parsing responsesBiReturn Values for Get Shared Chat Session0CkInformation about the gift sub event that happened in a \xe2\x80\xa6BbA timeout in a shared chat session0CmInformation about the <code>shared_chat_timeout</code> event.B`Return Values for Snooze Next Ad0BaQuery Parameters for Start A Raid0BdReturn Values for Get Stream Markers0AbA stream marker IDAdA video with markers0CnThe goal is to increase subscriptions. This type shows the \xe2\x80\xa6AiLocation to twitch PubSubAmrequest for user token failedBhTransport response on event notificationAcAn unban request IDAlReturn Values for Unban User0BbBody Parameters for Update Conduit0B`Query Parameters for Update User0ClEdit your channel\xe2\x80\x99s broadcast configuration, including \xe2\x80\xa60CiView a user\xe2\x80\x99s broadcasting configuration, including \xe2\x80\xa60Bnvalue serializer only supports primitive types0AgStatistics about streamCjResponse from the video_playback::VideoPlaybackById topic.1AmSet animation mode to defaultBmIf set, describes new unlocked badge for usergUnknown0000BkAn ID that identifies the charity campaign.0AoThe broadcaster\xe2\x80\x99s login name.011000110BgTwitch User login of this channel owner110AiLogin of the broadcaster.00000AkThe channel\xe2\x80\x99s login name.33031111BfLogin of the channel the reward is for0B`Broadcaster\xe2\x80\x99s user login name.110055B`The broadcaster\xe2\x80\x99s user handle.04444444AmPubSub messages for sub giftsC`The user name of the user that sent the message.000ChThe ID of the associated community gift. Null if not \xe2\x80\xa6AfRewards for conductorsBoCooldown duration in nanoseconds for hype trainCnRFC3339 formatted timestamp of when another hype train can \xe2\x80\xa6ClCreate a Channel Points Prediction for a specific Twitch \xe2\x80\xa6CnThe total number of months the user has been subscribed to \xe2\x80\xa6CcThe total number of months the user has subscribed.11BoCumulative months that user has been subscribed000CiGets the broadcaster\xe2\x80\x99s list of non-private, blocked \xe2\x80\xa6DcGets information for a specific Twitch Team. <code>get-teams</code>BcGet a broadcaster\xe2\x80\x99s chat settingsDfGets the broadcaster\xe2\x80\x99s chat settings. <code>get-chat-settings</code>CnGets the broadcaster\xe2\x80\x99s list of active goals. Use this to \xe2\x80\xa6CjReturns a list of Custom Reward objects for the Custom \xe2\x80\xa6CmConvenience method for getting the event version from the \xe2\x80\xa6AeGet all global emotesCmGets all global emotes. Global emotes are Twitch-specific \xe2\x80\xa6ChGets information on follow relationships between two \xe2\x80\xa6CfThe user login of the subscription gifter. Null if \xe2\x80\xa6BdReturn the body as a vector of bytesCmThe UTC timestamp (in RFC3339 format) of when Shield Mode \xe2\x80\xa60AmThe most recent contribution.000000AnPossible rewards for level oneAmThe ID of the message effect.AeGet message timestamp0C`The UTC date and time that the message was sent.0000nType of actionBmModeration action. Should be <code>mod</code>BoModeration action. Should be <code>unmod</code>AkAction taken, should be \xe2\x80\xa6CjThe message included by the moderator explaining their \xe2\x80\xa6BjMessage attached to unban request responseBeThe user ID of the issuer of the ban.CjThe ID of the moderator of the channel you want to get \xe2\x80\xa6CfThe user ID of the moderator or broadcaster of the \xe2\x80\xa6CjThe user ID of the moderator who updated the guest\xe2\x80\x99s \xe2\x80\xa6111AmThe user ID of the moderator.CbThe user ID of moderator who performed the action.10CkThe ID of the broadcaster or one of the broadcaster\xe2\x80\x99s \xe2\x80\xa6ChAn ID that identifies the moderator that updated the \xe2\x80\xa610CnThe ID of the broadcaster that gave the Shoutout or one of \xe2\x80\xa6CeAn ID that identifies the moderator that sent the \xe2\x80\xa6CkThe ID of the broadcaster that received the Shoutout or \xe2\x80\xa6ChThe ID of a user that has permission to moderate the \xe2\x80\xa60ClThe ID of the moderator that updated the treatment for a \xe2\x80\xa6BgThe user ID of the issuer of the unban.CjThe ID of the user that has permission to moderate the \xe2\x80\xa60CeUser ID of moderator who approved/denied the request.AmThe User ID of the moderator.0CbThe user ID of the moderator who sent the warning.CjThe ID of the moderator of the channel you want to get \xe2\x80\xa6BeThe user ID of the issuer of the ban.CfThe user ID of the moderator or broadcaster of the \xe2\x80\xa6CjThe user ID of the moderator who updated the guest\xe2\x80\x99s \xe2\x80\xa610111111AmThe user ID of the moderator.CbThe user ID of moderator who performed the action.10CkThe ID of the broadcaster or one of the broadcaster\xe2\x80\x99s \xe2\x80\xa6ChAn ID that identifies the moderator that updated the \xe2\x80\xa6101010CnThe ID of the broadcaster that gave the Shoutout or one of \xe2\x80\xa6CeAn ID that identifies the moderator that sent the \xe2\x80\xa6CkThe ID of the broadcaster that received the Shoutout or \xe2\x80\xa6210ChThe ID of a user that has permission to moderate the \xe2\x80\xa60ClThe ID of the moderator that updated the treatment for a \xe2\x80\xa6110BgThe user ID of the issuer of the unban.CjThe ID of the user that has permission to moderate the \xe2\x80\xa60CeUser ID of moderator who approved/denied the request.110AmThe User ID of the moderator.0CbThe user ID of the moderator who sent the warning.110AiUser ID of the moderator.00AhThe ID of the moderator.101CiThe ID of the moderator who changed the channel settings.CgUser ID of the moderator creating the subscription. \xe2\x80\xa6133323233323231310101BbURL of the user\xe2\x80\x99s offline image.0CjAn ID that uniquely identifies the parent message that \xe2\x80\xa6BoUser login of the sender of the parent message.BoTotal duration for the Prediction (in seconds).0ClTotal duration for the Prediction (in seconds). Minimum: \xe2\x80\xa61CnThe amount of pre-roll free time remaining for the channel \xe2\x80\xa60AdPrimary color of hexCjProfile image URL of the broadcaster raiding this channel.BbURL of the user\xe2\x80\x99s profile image.0AkURL of the user\xe2\x80\x99s profileBoThe user ID of the subscription gift recipient.0iTime leftDdRequest on a valid <code>RequestDelete</code> endpoint, with the \xe2\x80\xa6CkThe ID of the user that requested the ad. For automatic \xe2\x80\xa600AaSearch CategoriesCnReturns a list of games or categories that match the query \xe2\x80\xa6AcSend a chat messageCfSends an message in the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa6ClIndicates whether or not we hide the emote from the bits \xe2\x80\xa6CgThe UTC timestamp when the broadcaster will gain an \xe2\x80\xa6000CmOnly present when in a shared chat session. The UUID that \xe2\x80\xa600000BfThe type of event sent in the message.0CjThe user login of the user that was banned or put in a \xe2\x80\xa6CeThe user login of the user whose message was deleted.1010AkUsername of added moderator0AeUser who was made VIPCkTarget login of unban request, e.g the user that was bannedAbTeam display name.CiAn ID that identifies the parent message of the reply \xe2\x80\xa6CjUser login of the sender of the thread\xe2\x80\x99s parent message.CjThe ID of the broadcaster that\xe2\x80\x99s receiving the Shoutout.0CbThe contributors with the most points contributed.000000000AhUse creator color or notAdDisplay name of userBhA user\xe2\x80\x99s message is caught by automod.CfEnd time for vacation specified in RFC3339 format. \xe2\x80\xa60CkThe amount of time, in seconds, that users need to wait \xe2\x80\xa6BdBody Parameters for Add Blocked Term0CbView analytics data for the games owned by the \xe2\x80\xa60BjA blocked term that was found in a messageDj<code>automod.message.hold</code>: a message was caught by automod for \xe2\x80\xa60CbInformation on why a message was caught by automodDd<code>automod.terms.update</code>: a notification is sent when a \xe2\x80\xa60BbQuery Parameters for Cancel A Raid0AkChannel Chat Clear V1 EventDk<code>channel.chat.clear</code>: a moderator or bot clears all messages \xe2\x80\xa6010Dd<code>channel.chat.message</code>: any user sends a message to a \xe2\x80\xa60AkChannel Goal Begin V1 EventDg<code>channel.goal.begin</code>: a specified broadcaster begins a goal.010BiReturn Values for Get Channel Information0AkManage a channel\xe2\x80\x99s polls.0BiManage a channel raiding another channel.0AkChannel Poll Begin V1 EventDh<code>channel.poll.begin</code>: a poll begins on the specified channel.010ClRead charity campaign details and user donations on your \xe2\x80\xa60ChView a list of users with the editor role for a channel.0AjChannel Subscribe V1 EventDb<code>channel.subscribe</code>: a specified channel receives a \xe2\x80\xa610BmA channel term was modified, added or removedAdChannel Term actionsAkChannel VIP Remove V1 EventDk<code>channel.vip.remove</code>: a user has vip privileges removed on a \xe2\x80\xa6010Co<code>channel.warning.send</code>: a warning is sent to a user.0BfReturn Values for Check AutoMod Status0DcErrors for <code>HelixClient::req_get</code> and similar functions.0AcA community gift IDAmReturn Values for Create PollAhCould not create request000BeReturn Values for Delete CustomReward0AnUsers own message was deleted.BbResponse from the device code flowAoDescribes a follow relationship0BaQuery Parameters for Get Chatters0BaQuery Parameters for Get Conduits0BbQuery Parameters for Get Top Games0AgA Guest Star Session IDAdA Guest Star Slot IDnEvent data forAhType of Hype Train eventB`could not construct header valueBocould not construct header value for User-AgentBbSignificant Profanity or VulgarityC`Errors for UserToken::from_refresh_token and \xe2\x80\xa6CjDefines the message that the EventSub WebSocket server \xe2\x80\xa6BaQuery Parameters for Send Whisper0AnReturn Values for Start A Raid0AdA Stream Segment ID.AkTraits of a suspicious userAnThe status of an unban request0AlA status of an unban request1BaQuery Parameters for Unblock User0Djcould not find an implementation for version <code>{version}</code> on \xe2\x80\xa6Beunknown message type encountered: {0}BeReturn Values for Update CustomRewardCnRead whispers that you send and receive, and send whispers \xe2\x80\xa60Cm<code>user.whisper.message</code>: a user receives a whisper.0BnReply from VideoPlayback and VideoPlaybackByIdAfA watchparty premiere,AcWebsocket transportAmSet animation mode to animateAhPubSub messages for bitsBiNumber of Channel Points won by the user.CaThe user login of the user that sent the message.000BeID of user that did moderation actionAoID of user that added moderator0CdUser ID of who made target VIP (usually broadcaster)ClCreates a UserToken using a refresh token. Retrieves the \xe2\x80\xa6CdTransparently reinterprets the string slice as a \xe2\x80\xa6ChGets all custom emotes for a specific Twitch channel \xe2\x80\xa6BhGets a list of all shards for a conduit.DhGets a list of all shards for a conduit. <code>get-conduit-shards</code>DkGet specific custom rewards, see <code>get_all_custom_rewards</code> to \xe2\x80\xa6ChGets a list of markers from the user\xe2\x80\x99s most recent \xe2\x80\xa6CgGets a list of unban requests for a broadcaster\xe2\x80\x99s \xe2\x80\xa60BaGet multiple Users from user ids.BdEvents regarding guest star sessionsCfFlag that signals whether the host is allowing the \xe2\x80\xa600000CkBoolean flag indicating if the channel has branded content.0000AoAll localized names of the tag.00000DgParse string slice as a <code>Payload</code>, this will assume your \xe2\x80\xa6AdRemove a channel vipCeRemoves a VIP from the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa60gUnknownDhReturns <code>Some(WebsocketTransport)</code> if this transport is a \xe2\x80\xa6DjReturns <code>Ok(WebsocketTransport)</code> if this transport response \xe2\x80\xa6AjID of the winning outcome.00ClID of the winning outcome. If the status is ACTIVE, this \xe2\x80\xa60BlID of the winning outcome for the PredictionCfID of the winning outcome for the Prediction. This \xe2\x80\xa62CcGeneral errors for talking with twitch, used in \xe2\x80\xa6AmAn unban request was approved0AfUnban request approvedAfUnban Request ApprovedAbThe type of rewardBiAn emote in a message filtered by automodAoReturn Values for Cancel A Raid0Di<code>channel.ad_break.begin</code>: a user runs a midroll commercial \xe2\x80\xa60Bj<code>channel.ban</code> response payload.0BeAnyone cheers in a specified channel.CjResponse from the channel_bits::ChannelBitsEventsV2 topic.1Dd<code>channel.goal.progress</code>: a goal makes progress on the \xe2\x80\xa60Dk<code>channel.hype_train.end</code>: a hype train ends on the specified \xe2\x80\xa60CgManage a channel\xe2\x80\x99s videos, including deleting videos.0Da<code>channel.moderator.add</code>: a user is given moderator \xe2\x80\xa60AnChannel Points voting settingsDh<code>channel.poll.progress</code>: a user responds to a poll on the \xe2\x80\xa60nChat moderatedBcCode for why a message was dropped.0oImages in sizesBeReturn Value for Create Stream Marker0AkA custom reward was updatedAnAutomod permitted term removedBbQuery Parameters for Delete VideosBhError when parsing an event-type string.BgReturn Values for Get Followed Channels0AnA mentioned user in a fragmentBgQuery Parameters for Get Channel Emotes0BjQuery Parameters for Get Followed Channels0BcQuery Parameters for Get Stream Key0AhDifficulty of Hype TrainAgMax per user per streamCbThis channel does not exist or has been suspended.0lMystery gift0Afno client secret foundAfA prediction choice ID0Bdcould not serialize request to queryAlcould not serialize to query1AlA permitted term was removed0BjQuery Parameters for Resolve Unban Request0CiAn emote index as defined by eventsub, similar to IRC \xe2\x80\xa6ClScheduled broadcasts for a specific channel given by Get \xe2\x80\xa6BeBody Parameters for Send Chat message0AnReturn Values for Send Whisper0AhA Shared Chat Session IDBeAn untimeout in a shared chat session0CoInformation about the <code>shared_chat_untimeout</code> event.BcQuery Parameters for Snooze Next Ad0BdBody Parameters for Start Commercial0DhA message attached to a <code>ChannelSubscriptionMessageV1Payload</code>BoErrors that can occur when parsing a timestamp.BlTwitch\xe2\x80\x99s representation of the oauth flow.CnUpdate the color used for the user\xe2\x80\x99s name in chat.Update \xe2\x80\xa60Bj<code>user.update</code> response payload.0AmWebhook Callback VerificationAdVerification RequestBcQuery Parameters for Warn Chat User0CjThe broadcaster user ID you want to get stream offline \xe2\x80\xa6AlThe broadcaster\xe2\x80\x99s user id.CiThe broadcaster user ID you want to get stream online \xe2\x80\xa61221001CmThe ID of the broadcaster that you want to get Channel Ad \xe2\x80\xa6CnThe broadcaster\xe2\x80\x99s user ID for the channel the ad was run \xe2\x80\xa6CkThe broadcaster user ID for the channel you want to get \xe2\x80\xa6AmThe requested broadcaster ID.CjThe ID of the broadcaster that you want to get Channel \xe2\x80\xa6ChThe User ID of the channel where the Bits were redeemed.CgThe broadcaster user ID for the channel you want to \xe2\x80\xa6CdThe ID of the channel where the reward was redeemed.1414141414CfThe ID of the broadcaster that you want to receive \xe2\x80\xa6000CnUser ID of the channel to receive chat clear user messages \xe2\x80\xa6AhThe broadcaster user ID.10CjUser ID of the channel to receive chat message events for.1CiUser ID of the channel to receive chat message delete \xe2\x80\xa62CnUser ID of the channel to receive chat notification events \xe2\x80\xa632CcThe ID of the broadcaster specified in the request.30CjUser ID of the channel to receive chat settings update \xe2\x80\xa61=<=<=<C`The ID of the broadcaster to get notified about.BoAn ID that uniquely identifies the broadcaster.1010;BaThe non-host broadcaster user ID.<8<0<AlUser ID of the host channel.CiThe broadcaster user ID for the channel you want hype \xe2\x80\xa6AmThe requested broadcaster ID.1010AoThe user ID of the broadcaster.AjThe ID of the broadcaster.10CgGet notifications when a moderator is added in this \xe2\x80\xa63CiGet notifications when a moderator is removed in this \xe2\x80\xa64ClThe broadcaster user ID of the channel for which \xe2\x80\x9cpoll \xe2\x80\xa650505CdThe broadcaster user ID of the channel for which \xe2\x80\xa66060606CmThe User ID of the channel to receive shared chat session \xe2\x80\xa6ClThe User ID of the channel in the subscription condition \xe2\x80\xa6101CiThe User ID of the channel in the subscription condition.CfThe ID of the broadcaster that you want to receive \xe2\x80\xa6CkAn ID that identifies the broadcaster whose Shield Mode \xe2\x80\xa6101CgAn ID that identifies the broadcaster that sent the \xe2\x80\xa62CkAn ID that identifies the broadcaster that received the \xe2\x80\xa6CkThe broadcaster user ID for the channel you want to get \xe2\x80\xa6>0AhThe broadcaster user ID.1010CjUser ID of the channel to receive chat message events for.CnThe ID of the channel where the treatment for a suspicious \xe2\x80\xa6CjThe broadcaster you want to get suspicious user update \xe2\x80\xa614AmThe requested broadcaster ID.ChThe ID of the broadcaster you want to get chat unban \xe2\x80\xa6CiThe broadcaster\xe2\x80\x99s user ID for the channel the unban \xe2\x80\xa6CkThe ID of the broadcaster you want to get unban request \xe2\x80\xa618AlThe broadcaster\xe2\x80\x99s user ID.90CfGet notifications when a VIP is added in this channel.5ChGet notifications when a VIP is removed in this channel.6AoThe User ID of the broadcaster.AoThe user ID of the broadcaster.10ClThe broadcaster user ID of the channel for which \xe2\x80\x9cpoll \xe2\x80\xa690909009009009CnUser ID of the channel to receive chat clear user messages \xe2\x80\xa6>0>=>CiUser ID of the channel to receive chat message delete \xe2\x80\xa6?CnUser ID of the channel to receive chat notification events \xe2\x80\xa6AhThe broadcaster user ID.CjUser ID of the channel to receive chat message events for.CcThe ID of the broadcaster specified in the request.1012325252421010CkThe broadcaster user ID for the channel you want to get \xe2\x80\xa630303003003003CjThe ID of the broadcaster that you want to get Channel \xe2\x80\xa6ChThe User ID of the channel where the Bits were redeemed.110CiThe broadcaster user ID for the channel you want hype \xe2\x80\xa6AmThe requested broadcaster ID.1010110110110C`The ID of the broadcaster to get notified about.BoAn ID that uniquely identifies the broadcaster.101011011011066266262666AlThe broadcaster\xe2\x80\x99s user ID.70CmThe ID of the broadcaster that you want to get Channel Ad \xe2\x80\xa6CnThe broadcaster\xe2\x80\x99s user ID for the channel the ad was run \xe2\x80\xa6110995CgThe broadcaster user ID for the channel you want to \xe2\x80\xa6CdThe ID of the channel where the reward was redeemed.1101717171171171171717117117CfThe ID of the broadcaster that you want to receive \xe2\x80\xa600070707070CjUser ID of the channel to receive chat settings update \xe2\x80\xa6>0>3BaThe non-host broadcaster user ID.404AhThe broadcaster user ID.5151505AlUser ID of the host channel.60AoThe user ID of the broadcaster.AjThe ID of the broadcaster.10CgGet notifications when a moderator is added in this \xe2\x80\xa6?CiGet notifications when a moderator is removed in this \xe2\x80\xa6AmThe requested broadcaster ID.2010CdThe broadcaster user ID of the channel for which \xe2\x80\xa61010101001001001001CmThe User ID of the channel to receive shared chat session \xe2\x80\xa6ClThe User ID of the channel in the subscription condition \xe2\x80\xa6101CiThe User ID of the channel in the subscription condition.BgThe User ID of the participant channel.332331332>CkAn ID that identifies the broadcaster whose Shield Mode \xe2\x80\xa6?0?0?0?CgAn ID that identifies the broadcaster that sent the \xe2\x80\xa6CfThe ID of the broadcaster that you want to receive \xe2\x80\xa6CkAn ID that identifies the broadcaster that received the \xe2\x80\xa61210CkThe broadcaster user ID for the channel you want to get \xe2\x80\xa60:CjUser ID of the channel to receive chat message events for.CnThe ID of the channel where the treatment for a suspicious \xe2\x80\xa6CjThe broadcaster you want to get suspicious user update \xe2\x80\xa61210133=ChThe ID of the broadcaster you want to get chat unban \xe2\x80\xa6CiThe broadcaster\xe2\x80\x99s user ID for the channel the unban \xe2\x80\xa6CkThe ID of the broadcaster you want to get unban request \xe2\x80\xa612101CfGet notifications when a VIP is added in this channel.AmThe requested broadcaster ID.ChGet notifications when a VIP is removed in this channel.12101AoThe User ID of the broadcaster.AoThe user ID of the broadcaster.101010BeUser ID of the broadcaster (channel).CcThe ID of the broadcaster specified in the request.10C`User ID of the broadcaster (channel). Maximum: 11210101212101212121012101010101BeHype train public callout emote tokenBjNumber of Channel Points used by the user.AmA description of the charity.0000000000000CkA moderator or bot clears all messages for a specific user.ClTimestamp of the cooldown expiration. null if the reward \xe2\x80\xa600000000ClTimestamp of the cooldown expiration. Null if the reward \xe2\x80\xa6000BiCooldown will expire after this timestampAnDelete a specific chat messageAcDifficulty settingsChThe ID of the broadcaster that\xe2\x80\x99s sending the Shoutout.0CgGets the list of all stream tags defined by Twitch, \xe2\x80\xa6CjGets a list of users who have editor permissions for a \xe2\x80\xa6BmGet ChannelInformation from a broadcasters idClGets a specified user\xe2\x80\x99s block list. The list is sorted \xe2\x80\xa6AiGet a user\xe2\x80\x99s chat colorCfGets the color used for the user\xe2\x80\x99s name in chat. \xe2\x80\xa6ClGets a list of all extensions (both active and inactive) \xe2\x80\xa60AhGet User from user loginA`Get channel VIPsC`Events regarding settings of guest star sessionsB`The User ID of the host channel.0CmIndicates if Vacation Mode is enabled. Set to true to add \xe2\x80\xa60BgThe user name of the issuer of the ban.AdThe moderator login.CkThe display name of the moderator who performed the action.0AoThe moderator\xe2\x80\x99s display name.00CmThe login of the moderator that updated the treatment for \xe2\x80\xa6BiThe user name of the issuer of the unban.AnThe moderator\xe2\x80\x99s display nameAoThe user name of the moderator.766554444443321100AlThe moderator\xe2\x80\x99s user name.00000000000BgThe message body of the parent message.CaThe user name of the subscription gift recipient.0CbUsername of user that received gifted subscription0CfRemoves the word or phrase that the broadcaster is \xe2\x80\xa6CmApplies specified tags to a specified stream, overwriting \xe2\x80\xa6CcThe display name of the user that requested the ad.00CkThe amount of time, in seconds, that users need to wait \xe2\x80\xa6000BiDisplay name of targeted broadcaster/user00C`A user\xe2\x80\x99s message\xe2\x80\x99s automod status is updatedChStart time for vacation specified in RFC3339 format. \xe2\x80\xa60BdQuery Parameters for Add Channel Vip000CmTwitch revoked your subscription because the users in the \xe2\x80\xa6AgMessage held by automod0AmAutomod Message Hold V1 EventDj<code>automod.message.hold</code>: a message was caught by automod for \xe2\x80\xa6010AmAutomod Message Hold V2 Event1101AlA message\xe2\x80\x99s Automod statusDk<code>automod.message.update</code>: a message in the automod queue had \xe2\x80\xa60AmAutomod Terms Update V1 EventDd<code>automod.terms.update</code>: A notification is sent when a \xe2\x80\xa6010BfLikelyhood that a user is a ban evaderAmChannel Chat Message V1 EventDk<code>channel.chat.message</code>: a user sends a message to a specific \xe2\x80\xa6010CgA message sent with channel points during sub-only modeDk<code>channel.prediction.end</code>: a Prediction ends on the specified \xe2\x80\xa60Bk<code>channel.raid</code> response payload.0BiRead Guest Star details for your channel.0BjView Hype Train information for a channel.0BgView an authorized user\xe2\x80\x99s stream key.0Dh<code>channel.shared_chat.end</code>: a channel leaves a shared chat \xe2\x80\xa60Dg<code>channel.shield_mode.end</code>: a channel deactivates shield mode0BeRead all subscribers to your channel.0AmChannel Warning Send V1 EventCo<code>channel.warning.send</code>: a warning is sent to a user.010AeA Charity Campaign IDAeA Charity Donation IDBnA moderator performs an action in the channel.CiResponse from the moderation::ChatModeratorActions topic.1AkUnlock a specific sub emoteDk<code>conduit.shard.disabled</code>: sends a notification when eventsub \xe2\x80\xa60BcQuery Parameters for Create Conduit0BeBody Parameters for Create PredictionBcQuery Parameters for Delete Conduit0AfAutomod message deniedBcQuery Parameters for End PredictionCcGeneral information about an EventSub subscription.BdQuery Parameters for Get Ad Schedule0BcQuery Parameters for Get Cheermotes0BcQuery Parameters for Get Moderators0B`Return Values for Get Stream Key0BdQuery Parameters for Get Stream Tags000BdQuery Parameters for Get User Emotes0AkGot error from GET responseAlCould not parse GET response10AkGot error from PUT responseAlCould not parse PUT response10AiHype train is approaching0BnHype train progression. Akin to Participations0DoThis room is in followers-only mode. Follow <code>&lt;channel&gt;</code> to \xe2\x80\xa60CjYour message wasn\xe2\x80\x99t posted due to conflicts with the \xe2\x80\xa60AjChoice settings for a pollCjThe goal is to increase subscriptions. This type shows \xe2\x80\xa6CnDefines a message that the EventSub WebSocket server sends \xe2\x80\xa6AiUnlock a random sub emoteBdQuery Parameters for Send A Shoutout0Cfserializer only supports structs and maps on top-level0BcQuery Parameters for Update Conduit0AnView the block list of a user.0AmUser Whisper Message V1 EventCm<code>user.whisper.message</code>: a user receives a whisper.010BnURL of the Team background <code>image</code>.AgLanguage of the channel0000CiChannel language (Broadcaster Language field from the \xe2\x80\xa60BlNumber of votes received via Channel Points.0CmDetermines whether a string message meets the channel\xe2\x80\x99s \xe2\x80\xa6AoAdds a marker to a live stream.DaAdds a marker to a live stream. <code>create-stream-marker</code>CkRemoves a single chat message or all chat messages from \xe2\x80\xa6DgDeletes a Custom Reward on a channel. <code>delete-custom-reward</code>CnThe follow relationships returned by this endpoint on this \xe2\x80\xa60CmGenerate an app access token via OAuth client credentials \xe2\x80\xa6BnGets the broadcaster\xe2\x80\x99s AutoMod settings. \xe2\x80\xa6CmGets a ranked list of Bits leaderboard information for an \xe2\x80\xa6BgGet all scheduled streams in a channel.CfGets information about the charity campaign that a \xe2\x80\xa6BkGet authenticated users\xe2\x80\x99 followed streamsCfGets information about active streams belonging to \xe2\x80\xa6CmGets the information of the most recent Hype Train of the \xe2\x80\xa6BcGet multiple Streams from user ids.BhThe user login of the issuer of the ban.AkThe moderator display name.CdThe login of the moderator who performed the action.0AmThe moderator\xe2\x80\x99s login name.00CfThe display name of the moderator that updated the \xe2\x80\xa6BjThe user login of the issuer of the unban.AlThe moderator\xe2\x80\x99s login nameAkThe login of the moderator.766554444443321100000000000000BgDuration of subscription, e.g 1, 3 or 60000BjParse a response string into the response.000000000CbThe user login of the subscription gift recipient.0BlThe login of the user that requested the ad.00BlGet the request needed to revoke this token.CcThe version number of the subscription type\xe2\x80\x99s \xe2\x80\xa60BlProfile picture of targeted broadcaster/user00BnUpdates the broadcaster\xe2\x80\x99s chat settings. \xe2\x80\xa6BmUpdates a Custom Reward created on a channel.BeQuery Parameters for Add Blocked Term0BaReturn Values for Add Channel Vip000AhAutomod message approvedDg<code>automod.settings.update</code>: a notification is sent when a \xe2\x80\xa60AoChannel Ad Break Begin V1 EventDi<code>channel.ad_break.begin</code>: a user runs a midroll commercial \xe2\x80\xa6010Bl<code>channel.cheer</code> response payload.0AmRun commercials on a channel.0AnChannel Goal Progress V1 EventDd<code>channel.goal.progress</code>: progress is made towards the \xe2\x80\xa6010De<code>channel.hype_train.begin</code>: a hype train begins on the \xe2\x80\xa60AoChannel Hype Train End V1 EventDk<code>channel.hype_train.end</code>: a hype train ends on the specified \xe2\x80\xa6010BeManage a channel\xe2\x80\x99s stream schedule.0AnChannel Moderator Add V1 EventDa<code>channel.moderator.add</code>: a user is given moderator \xe2\x80\xa6010AnChannel Poll Progress V1 EventDi<code>channel.poll.progress</code>: an user responds to a poll on the \xe2\x80\xa6010Dg<code>channel.prediction.lock</code>: a Prediction is locked on the \xe2\x80\xa60Di<code>channel.shoutout.create</code>: a specified broadcaster sends a \xe2\x80\xa60Bl<code>channel.unban</code> response payload.0AaChannel moderatedB`A drop reason of a sent message.0BoClassification for content according to AutoModB`Return Values for Delete Conduit0AeFormats for an emote.BlReturn Values for Get EventSub Subscriptions0BeQuery Parameters for Get Banned Users0BdQuery Parameters for Get predictions0AgA Guest Star Session IDAlGot error from POST responseAmCould not parse POST response10CaView the chatters in a broadcaster\xe2\x80\x99s chat room.0BeView a broadcaster\xe2\x80\x99s chat warnings.0AkA message sent with effectsBgBody Parameters for Replace Stream Tags0BdQuery Parameters for Search Channels0BaReturn Values for Send A Shoutout0BfA participant in a shared chat session0Bl<code>stream.online</code> response payload.0CbThe User-Agent <code>product</code> of this crate.ChView if an authorized user is subscribed to specific \xe2\x80\xa60BaThe client closed the connection.0CkThe Twitch WebSocket server experienced a network error \xe2\x80\xa60AgAdd a channel moderatorClAdds a moderator to the broadcaster\xe2\x80\x99s moderation room. \xe2\x80\xa6BfThe broadcaster\xe2\x80\x99s user display name.000CmThe broadcaster\xe2\x80\x99s user display name for the channel the \xe2\x80\xa6BgThe requested broadcaster display name.CiThe display name of the channel where the Bits were used.ChThe display name of the channel where the reward was \xe2\x80\xa622222AmThe broadcaster display name.0000CjThe user name of the broadcaster specified in the request.00444BaThe broadcaster\xe2\x80\x99s display name.00AoThe non-host broadcaster login.AfThe broadcaster login.10777BaThe user name of the broadcaster.0888888888CgThe display name of the channel in the subscription \xe2\x80\xa60044449666CfThe login of the channel where the treatment for a \xe2\x80\xa6CfThe Login of the channel where the treatment for a \xe2\x80\xa6;66==;;33;;;;;;88888778888877888888::;;;;;;666666;;;==<<;99;;;;;;;;;;775545544433;;;;;;;;;;;;222BlThe display name of the participant channel.33377777777<2121<7777<<<<4444888888888888888888C`The Channel Points voting settings for the poll.00000000BaPubSub messages for subscriptionsCiAdds a specified user to the followers of a specified \xe2\x80\xa6CbGets a list of users that follow the specified \xe2\x80\xa6CeGet multiple ChannelInformation from broadcasters idsAkGet users followed channelsCgGets a list of broadcasters that the specified user \xe2\x80\xa6BaGet multiple users\xe2\x80\x99 chat colorsBnGet multiple Users from user logins/nicknames.BmGet the request needed to refresh this token.CeResolves an unban request by approving or denying it.BhUpdates the Shard for the given Conduit.DbUpdates shard(s) for a conduit. <code>update-conduit-shards</code>BbReturn Values for Add Blocked TermBiAn error for an invalid AnnouncementColorChInformation on which blocked terms were matched in a \xe2\x80\xa6ChThe bounds of the text that caused the message to be \xe2\x80\xa6AgA chat message fragmentAoAutomod Message Update V1 EventDk<code>automod.message.update</code>: a message in the automod queue had \xe2\x80\xa6010AoAutomod Message Update V2 Event1101Bm<code>channel.follow</code> response payload.000CkManage a channel\xe2\x80\x99s broadcast configuration, including \xe2\x80\xa60BcManage Guest Star for your channel.0Dj<code>channel.moderator.remove</code>: a user has moderator privileges \xe2\x80\xa60BnA user redeems an reward using channel points.ClResponse from the channel_points::ChannelPointsChannelV1 \xe2\x80\xa61De<code>channel.prediction.begin</code>: a Prediction begins on the \xe2\x80\xa60AoChannel Prediction End V1 EventDk<code>channel.prediction.end</code>: a Prediction ends on the specified \xe2\x80\xa6010BnView a channel\xe2\x80\x99s Channel Points Predictions.0ClView Channel Points custom rewards and their redemptions \xe2\x80\xa60Dj<code>channel.shared_chat.begin</code>: a channel becomes active in an \xe2\x80\xa60AoChannel SharedChat End V1 EventDh<code>channel.shared_chat.end</code>: a channel leaves a shared chat \xe2\x80\xa6010Dg<code>channel.shield_mode.begin</code>: a channel activates shield mode0AoChannel ShieldMode End V1 EventDj<code>channel.shield_mode.end</code>: an user responds to a prediction \xe2\x80\xa6010Dk<code>channel.shoutout.receive</code>: a specified broadcaster receives \xe2\x80\xa60AlReply from ChannelSubGiftsV1Dj<code>channel.subscription.end</code>: a subscription to the specified \xe2\x80\xa60Bm<code>channel.update</code> response payload.000Bn<code>channel.vip.add</code> response payload.00BhBody Parameters for Check AutoMod Status0AoConduit Shard Disabled V1 EventBc<code>conduit.shard.disabled</code>10BiBody Parameters for Create Custom Rewards0BhBody Parameters for Create Stream Marker0BnReturn Values for Get Custom Reward Redemption00BbBuilder for OAuth device code flow0BlReturn Values for Get User Active Extensions0BeInner body for Update User Extensions0BfQuery Parameters for Get Blocked TermsBfQuery Parameters for Get Channel TeamsBfQuery Parameters for Get Chat Settings0BfQuery Parameters for Get Creator Goals0BfQuery Parameters for Get Custom Reward0BgQuery Parameters for Get Channel Emotes0BfQuery Parameters for Get Users Follows0AmGot error from PATCH responseAnCould not parse PATCH response10ChReply from HypeTrainEventsV1 or HypeTrainEventsV1RewardsCjManage messages held for review by AutoMod in channels \xe2\x80\xa60BdRead the followers of a broadcaster.0CnRead Guest Star details for channels where you are a Guest \xe2\x80\xa60BaView a broadcaster\xe2\x80\x99s shoutouts.0AlThresholds for notificationsAfA prediction choice IDBbStatus of a redemption was changedBfQuery Parameters for Send Chat message0AoSend a message with a highlightCmInformation about the announcement event that happened in \xe2\x80\xa6ClInformation about the pay it forward event that happened \xe2\x80\xa6AhA Shared Chat Session IDBeQuery Parameters for Start Commercial0Bm<code>stream.offline</code> response payload.0BhBody Parameters for Update Chat Settings0BiBody Parameters for Update Custom Rewards0Dg<code>user.authorization.grant</code>: a user\xe2\x80\x99s authorization has \xe2\x80\xa60B`Manage the block list of a user.0D`Errors for <code>UserTokenBuilder::get_user_token</code> and \xe2\x80\xa6CiThe Twitch WebSocket server experienced an unexpected \xe2\x80\xa60ChA ban evasion likelihood value (if any) that as been \xe2\x80\xa600AoThe broadcaster\xe2\x80\x99s user login.000CmThe broadcaster\xe2\x80\x99s user login for the channel the ad was \xe2\x80\xa6B`The requested broadcaster login.CbThe login of the channel where the Bits were used.CgThe login of the channel where the reward was redeemed.22222AfThe broadcaster login.0000CfThe login of the broadcaster specified in the request.00444B`The broadcaster\xe2\x80\x99s user handle.00BfThe non-host broadcaster display name.AmThe broadcaster display name.1AlThe broadcaster display name888AmThe login of the broadcaster.0999999999CeThe user login of the channel in the subscription \xe2\x80\xa600AoThe broadcaster\xe2\x80\x99s login name.000;888CmThe display name of the channel where the treatment for a \xe2\x80\xa60<11<<<<33<<<<<<99999889999988999999;;<<<<<<777777<<<<<==<::<<<<<<<<<<886656654433<<<<<<<<<<<<222BjThe user login of the participant channel.33322222222=1111=2222====4444999999999999999999B`Classification of caught messageCkThe length of time, in minutes, that the followers must \xe2\x80\xa6000BoRaid will be force started in this many seconds0CeRaid would have be force started in this many secondsAfGet all custom rewardsC`Get ChannelInformation from a broadcasters loginCkGets a list of chat badges that can be used in chat for \xe2\x80\xa6CgGets a list of channels that the specified user has \xe2\x80\xa60CkGets the broadcaster\xe2\x80\x99s Shield Mode activation status. \xe2\x80\xa6ClGet the request for getting a TwitchTokenResponse, to be \xe2\x80\xa6DiGet the request for getting a <code>TwitchTokenResponse</code>, to be \xe2\x80\xa6ClDoes the viewer need to enter information when redeeming \xe2\x80\xa600000000CnDoes the user need to enter information when redeeming the \xe2\x80\xa60000000CoReward requires input from user on rewards &amp; challenges \xe2\x80\xa6ChWhether a maximum per stream is enabled and what the \xe2\x80\xa6000CfDisplay name of user that received gifted subscription0AhSend a chat announcementCkSends an announcement to the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa6CkA list of channel IDs where the suspicious user is also \xe2\x80\xa600AbTier 1 gifted subs00AbTier 2 gifted subs00AbTier 3 gifted subs00CnThe broadcaster user ID that received the channel raid you \xe2\x80\xa6BjThe broadcaster ID that received the raid.CkAn ID that identifies the broadcaster that received the \xe2\x80\xa622100AlUpdate a user\xe2\x80\x99s chat colorCeUpdates the color used for the user\xe2\x80\x99s name in chat.BkUpdates the specified user\xe2\x80\x99s information.AgProfile picture of userBnGet the request needed to validate this token.CnView analytics data for the Twitch Extensions owned by the \xe2\x80\xa60CmInformation about the blocked terms that caused a message \xe2\x80\xa6BlA cheermote in a message filtered by automodB`Automod Settings Update V1 EventDg<code>automod.settings.update</code>: a notification is sent when a \xe2\x80\xa6010BoReturn Values for Get Broadcaster Subscriptions0CaAnyone shares a bit badge in a specified channel.AeResponse from the \xe2\x80\xa61Bo<code>channel.bits.use</code> response payload.00Di<code>channel.chat.notification</code>: an event that appears in chat \xe2\x80\xa60Bo<code>channel.goal.end</code> response payload.00BaChannel Hype Train Begin V1 EventDe<code>channel.hype_train.begin</code>: a hype train begins on the \xe2\x80\xa6010CkManage a channel\xe2\x80\x99s Extension configuration, including \xe2\x80\xa60CgAdd or remove the moderator role from users in your \xe2\x80\xa60Bo<code>channel.poll.end</code> response payload.00B`Channel Prediction Lock V1 EventDj<code>channel.prediction.lock</code>: an user responds to a prediction \xe2\x80\xa6010Dk<code>channel.shared_chat.update</code>: the active shared chat session \xe2\x80\xa60B`Channel Shoutout Create V1 EventDd<code>channel.shoutout.create</code>: a Prediction begins on the \xe2\x80\xa6010Dk<code>channel.subscription.gift</code>: a user gives one or more gifted \xe2\x80\xa60C`Return Values for Get Charity Campaign Donations0ChIDs for content classification labels also known as CCLsBfQuery Parameters for Create PredictionBhQuery Parameters for Get All Stream Tags0BcReturn Values for Get Blocked TermsBgQuery Parameters for Get Channel Emotes0BgQuery Parameters for Get Conduit Shards0BgQuery Parameters for Get Stream Markers0BgQuery Parameters for Get Unban Requests0BiQuery Parameters for Get Users Block List0BaQuery Parameters for Get Chatters0AnGot error from DELETE responseAoCould not parse DELETE response10iA commandBgManage a broadcaster\xe2\x80\x99s chat warnings.0CnRead the list of moderators in channels where you have the \xe2\x80\xa60BjView a broadcaster\xe2\x80\x99s Shield Mode status.0BbUsers who were the top predictors.BgQuery Parameters for Remove Channel VIP000BfQuery Parameters for Search Categories0BcReturn Values for Send Chat message0BiBody Parameters for Update Conduit Shards0Cn<code>user.authorization.revoke</code>: a user has revoked \xe2\x80\xa60BoThe client failed to respond to a ping message.0CmThe Twitch WebSocket server timed out writing the message \xe2\x80\xa60AgChannel points per voteCgNumber of Channel Points required to vote once with \xe2\x80\xa60000CiChecks if a specific user is subscribed to a specific \xe2\x80\xa6CdDelete all chat messages in a broadcasters chat roomCkThe length of time, in minutes, that the followers must \xe2\x80\xa6AnAssemble token without checks.0CnGets a list of custom chat badges that can be used in chat \xe2\x80\xa6DhGets channel information for users. <code>get-channel-information</code>CfRetrieves the active shared chat session for a channelCkRetrieves the active shared chat session for a channel. \xe2\x80\xa6BfGet multiple Streams from user logins.BbThe cooldown in seconds if enabled000oCooldown amountCmWhether a cooldown is enabled and what the cooldown is. { \xe2\x80\xa6000DmReturns <code>true</code> if the message is <code>VerificationRequest</code>.DkReturns <code>true</code> if the message in the <code>Payload</code> is \xe2\x80\xa6CmWhether a maximum per user per stream is enabled and what \xe2\x80\xa600000000CaThe maximum number per user per stream if enabled000BgMaximum redemptions per user per streamBmMax amount of redemptions per user per streamAlThresholds for notificationsCkOnly return rewards that this application/client id can \xe2\x80\xa6CjWhen set to true, only returns custom rewards that the \xe2\x80\xa60AoSet the reply parent message-idBlThe ID of the chat message being replied to.0AiSend a chat message replyClThe AutoMod level for discrimination based on sexuality, \xe2\x80\xa60000000CeThe UTC timestamp (in RFC3339 format) of when the \xe2\x80\xa600BmUpdates the broadcaster\xe2\x80\x99s AutoMod settings.AoUpdate the user\xe2\x80\x99s descriptionAnReply from ChannelBitsEventsV2Dc<code>channel.chat.message_delete</code>: a moderator removes a \xe2\x80\xa60Di<code>channel.hype_train.progress</code>: a hype train makes progress \xe2\x80\xa60C`Manage of channel\xe2\x80\x99s Channel Points Predictions0CnManage Channel Points custom rewards and their redemptions \xe2\x80\xa60Bo<code>channel.moderate</code> response payload.000BaChannel Moderator Remove V1 EventDj<code>channel.moderator.remove</code>: a user has moderator privileges \xe2\x80\xa6010BiA highlighted message with channel pointsBaChannel Prediction Begin V1 EventDe<code>channel.prediction.begin</code>: a Prediction begins on the \xe2\x80\xa6010CnView a list of all subscribers to a channel and check if a \xe2\x80\xa60BaChannel SharedChat Begin V1 EventDj<code>channel.shared_chat.begin</code>: a channel becomes active in an \xe2\x80\xa6010BaChannel ShieldMode Begin V1 EventDa<code>channel.shield_mode.begin</code>: an user responds to a \xe2\x80\xa6010BaChannel Shoutout Receive V1 EventDe<code>channel.shoutout.receive</code>: a Prediction begins on the \xe2\x80\xa6010BgA subscription event happens in channelAeResponse from the \xe2\x80\xa61BaChannel Subscription End V1 EventDj<code>channel.subscription.end</code>: a subscription to the specified \xe2\x80\xa6010BnA user redeems an reward using channel points.30AaConduit transportBcReturn Values for Create PredictionCdcould not parse response when getting exchange tokenBhQuery Parameters for Get Channel Editors0BdReturn Values for Get Channel Emotes0BhQuery Parameters for Get User Extensions0AlHype train conductor updated07CiResponse from the hypetrain::HypeTrainEventsV1Rewards \xe2\x80\xa68BdBuilder for OAuth implicit code flow0CmManage Guest Star for channels where you are a Guest Star \xe2\x80\xa60BcManage a broadcaster\xe2\x80\x99s shoutouts.0CnRead the list of bans or unbans in channels where you have \xe2\x80\xa60BlReturn Values for Modify Channel Information0E`This room is in <code>&lt;duration1&gt;</code> followers-only mode. You have \xe2\x80\xa60AcA gigantified emoteBiQuery Parameters for Remove Blocked Terms0BdReturn Values for Remove Channel VIP000BhQuery Parameters for Replace Stream Tags0BjBody Parameters for Send Chat Announcement0CbThe User-Agent <code>product</code> of this crate.CfTwitch\xe2\x80\x99s representation of the oauth flow for errorsAoBody for Update User Extensions0BaUser Authorization Grant V1 EventDg<code>user.authorization.grant</code>: a user\xe2\x80\x99s authorization has \xe2\x80\xa6010AaWebhook transportDeConstructs <code>Self</code> with sane defaults for API calls and \xe2\x80\xa6CmThe broadcaster user ID that created the channel raid you \xe2\x80\xa6BiThe broadcaster ID that created the raid.CgAn ID that identifies the broadcaster that sent the \xe2\x80\xa622100DcIf this event is a <code>VerificationRequest</code>, return the \xe2\x80\xa6B`The User ID of the host channel.00000000CcLanguage of the part of the message that was caughtCkA Boolean value that determines whether the broadcaster \xe2\x80\xa6000AjRemove a channel moderatorCkRemoves a moderator from the broadcaster\xe2\x80\x99s chat room. \xe2\x80\xa6CdThe broadcaster display name that received the raid.BaThe broadcaster\xe2\x80\x99s display name.100CmUpdates the status of Custom Reward Redemption objects on \xe2\x80\xa6gUnknownCgAn active extension slot where the extension can be \xe2\x80\xa60Ca<code>channel.chat.clear</code> response payload.00BbChannel Chat Notification V1 EventDi<code>channel.chat.notification</code>: an event that appears in chat \xe2\x80\xa6010De<code>channel.chat_settings.update</code>: a broadcaster\xe2\x80\x99s chat \xe2\x80\xa60Ca<code>channel.goal.begin</code> response payload.00Ca<code>channel.poll.begin</code> response payload.00Df<code>channel.prediction.progress</code>: a user participates in a \xe2\x80\xa60BbChannel SharedChat Update V1 EventDk<code>channel.shared_chat.update</code>: the active shared chat session \xe2\x80\xa6010C`<code>channel.subscribe</code> response payload.0BbChannel Subscription Gift V1 EventDk<code>channel.subscription.gift</code>: a user gives one or more gifted \xe2\x80\xa6010Df<code>channel.unban_request.create</code>: a user creates an unban \xe2\x80\xa60Ca<code>channel.vip.remove</code> response payload.00Dj<code>channel.warning.acknowledge</code>: a warning is acknowledged by \xe2\x80\xa60AoReply from ChatModeratorActionsBiQuery Parameters for Check AutoMod Status0BjQuery Parameters for Create Custom Rewards0BiQuery Parameters for Create Stream Marker0BiQuery Parameters for Delete Chat Messages0BhQuery Parameters for Delete CustomReward0AnMetadata for a websocket eventBiQuery Parameters for Get AutoMod Settings0BiQuery Parameters for Get Bits Leaderboard0BiQuery Parameters for Get Charity Campaign0BiQuery Parameters for Get Followed Streams0BjQuery Parameters for Get Hype Train Events0BnReturn Values for Manage Held AutoMod Messages0BlManage a broadcaster\xe2\x80\x99s Shield Mode status.0BmView a broadcaster\xe2\x80\x99s list of blocked terms.0CmRead deleted chat messages in channels where you have the \xe2\x80\xa60BjView a broadcaster\xe2\x80\x99s chat room settings.0AkModified automod propertiesAhPossible errors from \xe2\x80\xa6CkInformation about the community gift paid upgrade event \xe2\x80\xa6BkBody Parameters for Update AutoMod Settings0BiQuery Parameters for Update Chat Settings0BjQuery Parameters for Update Custom Rewards0BbUser Authorization Revoke V1 EventCn<code>user.authorization.revoke</code>: a user has revoked \xe2\x80\xa6010CkRead the list of channels you have moderator privileges in.0CgThe client failed to subscribe to events within the \xe2\x80\xa6B`ID of the approaching hype trainCkWhether a maximum per stream is enabled. Defaults to false.BgWhether a maximum per stream is enabled10ChThe maximum number of seconds that you should expect \xe2\x80\xa6BfAll localized descriptions of the tag.00000CeThe id of the broadcaster that owns the blocked term.BmThe broadcaster login that received the raid.AoThe broadcaster\xe2\x80\x99s login name.100mJitter amount00CiActivates or deactivates the broadcaster\xe2\x80\x99s Shield Mode.AjUses personalized settingsBjQuery Parameters for Add Channel Moderator0De<code>channel.charity_campaign.stop</code>: a broadcaster stops a \xe2\x80\xa60BcChannel Chat MessageDelete V1 EventDc<code>channel.chat.message_delete</code>: a moderator removes a \xe2\x80\xa6010Df<code>channel.chat.user_message_hold</code>: a user\xe2\x80\x99s message is \xe2\x80\xa60BkA user redeems a cheer with shared rewards.CnResponse from the channel_cheer::ChannelCheerEventsPublicV1\xe2\x80\xa61De<code>channel.guest_star_session.end</code>: a running Guest Star \xe2\x80\xa60BdChannel Hype Train Progress V1 EventDi<code>channel.hype_train.progress</code>: a hype train makes progress \xe2\x80\xa6010Cm<code>channel.subscription.message</code>: a user sends a \xe2\x80\xa60Di<code>channel.unban_request.resolve</code>: an unban request has been \xe2\x80\xa60DcError for the <code>TryFrom</code> on <code>CommercialLength</code>CjList of labels that should be set as the Channel\xe2\x80\x99s CCLs.CcReturn Values for Get Content Classification Labels10BgReturn Values for Create Custom Rewards0BnReturn Values for Create EventSub Subscription0BfReturn Values for Delete Chat Messages0BoReturn Values for Delete EventSub Subscriptions0Barequest for exchange token failedBjQuery Parameters for Get Channel Followers0BfReturn Values for Get Followed StreamsBkQuery Parameters for Get Global Chat Badges0BkQuery Parameters for Get Shield Mode Status0AdBan and unban users.0BfView a broadcaster\xe2\x80\x99s unban requests.0CgInformation about the community gift sub event that \xe2\x80\xa6ClInformation about the Prime gift paid upgrade event that \xe2\x80\xa6BgSend a message in sub mode as a non-subBfReturn Values for Update Chat SettingsBjQuery Parameters for Update Conduit Shards0BlBody Parameters for Update Redemption Status0BmBody Parameters for Update Shield Mode StatusBiQuery Parameters for Update Chat Settings0CjThe client failed to reconnect to the Twitch WebSocket \xe2\x80\xa60AcWebsocket transportA`remaining eventsCcThe broadcaster display name that created the raid.BaThe broadcaster\xe2\x80\x99s display name.100BjGet channel emotes in channel with user idBnGet all EventSub subscriptions for this ClientBjGet a list of your EventSub subscriptions.CgGets the active extensions that the broadcaster has \xe2\x80\xa60CcGet all emotes accessible to the user in a channel.BeThe display name of the host channel.00000000CaWhether a cooldown is enabled. Defaults to false.000BiModify channel information for users. \xe2\x80\xa6DbParse string slice as a <code>Payload</code> with a message of \xe2\x80\xa6BlThe Automod level for racial discrimination.0000000CcOnly present when in a shared chat session. The \xe2\x80\xa60CkThe channel in which the action originally occurred. Is \xe2\x80\xa60111100BgReturn Values for Add Channel Moderator0Cc<code>automod.message.hold</code> response payload.00000Cc<code>automod.terms.update</code> response payload.00Dg<code>channel.charity_campaign.start</code>: a broadcaster starts a \xe2\x80\xa60Cc<code>channel.chat.message</code> response payload.00BdChannel ChatSettings Update V1 EventDe<code>channel.chat_settings.update</code>: a broadcaster\xe2\x80\x99s chat \xe2\x80\xa6010Df<code>channel.guest_star_guest.update</code>: a guest or a slot is \xe2\x80\xa60BaReply from ChannelPointsChannelV1BdChannel Prediction Progress V1 EventDc<code>channel.prediction.progress</code>: an user responds to a \xe2\x80\xa6010Dk<code>channel.suspicious_user.update</code>: a suspicious user has been \xe2\x80\xa60BdChannel UnbanRequest Create V1 EventDf<code>channel.unban_request.create</code>: a user creates an unban \xe2\x80\xa6010BdChannel Warning Acknowledge V1 EventDj<code>channel.warning.acknowledge</code>: a warning is acknowledged by \xe2\x80\xa6010Cc<code>channel.warning.send</code> response payload.00AnChat targeted login moderationBlQuery Parameters for Get Channel Chat Badges0BhReturn Values for Get Global Chat BadgesBkQuery Parameters for Get Moderated Channels0BlQuery Parameters for Get Shared Chat Session0AkHype train cooldown expired0BoManage a broadcaster\xe2\x80\x99s list of blocked terms.0CgDelete chat messages in channels where you have the \xe2\x80\xa60BjView a broadcaster\xe2\x80\x99s chat room settings.0BkQuery Parameters for Send Chat Announcement0C`Return Values for Update Channel Stream Schedule0CaThe structured response for Update Conduit Shards0BfReturn Values for Update Chat Settings0BkQuery Parameters for Update User Extensions0CkA user\xe2\x80\x99s message held by AutoMod has been approved or \xe2\x80\xa60AjA user follows the channelCc<code>user.whisper.message</code> response payload.00CjAn ID for the type of animation selected as part of an \xe2\x80\xa600BlThe broadcaster login that created the raid.AoThe broadcaster\xe2\x80\x99s login name.100CgGets all scheduled broadcasts or specific scheduled \xe2\x80\xa6AoGet a broadcasters follow countBcThe user login of the host channel.00000000CkThe username of the broadcaster that owns the blocked term.CkThe amount of time, in seconds, that users need to wait \xe2\x80\xa600CfReturn Values for Get Broadcaster Subscriptions Events0Ce<code>channel.ad_break.begin</code> response payload.00BbReply from ChannelBitsBadgeUnlocksDg<code>channel.charity_campaign.donate</code>: a user donates to the \xe2\x80\xa60BfChannel Charity Campaign Stop V1 EventDe<code>channel.charity_campaign.stop</code>: a broadcaster stops a \xe2\x80\xa6010De<code>channel.chat.clear_user_messages</code>: a moderator or bot \xe2\x80\xa60BeChannel Chat UserMessageHold V1 EventDf<code>channel.chat.user_message_hold</code>: a user\xe2\x80\x99s message is \xe2\x80\xa6010Di<code>channel.chat.user_message_update</code>: a user\xe2\x80\x99s message\xe2\x80\x99s \xe2\x80\xa60Cd<code>channel.goal.progress</code> response payload.00Dh<code>channel.guest_star_session.begin</code>: the host begins a new \xe2\x80\xa60Ce<code>channel.hype_train.end</code> response payload.00Cd<code>channel.moderator.add</code> response payload.00Dk<code>channel.channel_points_custom_reward.add</code>: a custom channel \xe2\x80\xa60Cd<code>channel.poll.progress</code> response payload.00BeChannel Subscription Message V1 EventCm<code>channel.subscription.message</code>: a user sends a \xe2\x80\xa6010Di<code>channel.suspicious_user.message</code>: a chat message has been \xe2\x80\xa60BeChannel UnbanRequest Resolve V1 EventDi<code>channel.unban_request.resolve</code>: an unban request has been \xe2\x80\xa6010BlQuery Parameters for Check User Subscription0BkUnlock a specific sub emote with a modifierCmCustom reward redemption statuses: UNFULFILLED, FULFILLED \xe2\x80\xa6BnErrors for <code>DeviceUserTokenBuilder</code>B`Metadata about the subscription.BiReturn Values for Get Channel Chat BadgesBlQuery Parameters for Get Channel Information0CeSend announcements in channels where you have the \xe2\x80\xa60BhManage a broadcaster\xe2\x80\x99s unban requests.0BhView a broadcaster\xe2\x80\x99s AutoMod settings.0CjRead chat messages from suspicious users and see users \xe2\x80\xa60BnBody Parameters for Modify Channel Information0CmTwitch revoked your subscription because the notification \xe2\x80\xa6CdThe notification delivery failure rate was too high.CaConversion table of event to participation pointsBhReturn Values for Send Chat Announcement0BlQuery Parameters for Update AutoMod Settings0CnCustom channel points rewards on specific channel has been \xe2\x80\xa6AoCreate an EventSub subscriptionBaCreates an EventSub subscription.AoDelete an EventSub subscriptionB`Delete an EventSub subscription.C`Get the request for getting an app access token.CiReturns Custom Reward Redemption objects for a Custom \xe2\x80\xa6CgAllow or deny a message that was held for review by \xe2\x80\xa6ChThe login of the broadcaster that owns the blocked term.CmOnly present when in a shared chat session. The user name \xe2\x80\xa60CdThe channel in which the action originally occurred.0111100Ce<code>automod.message.update</code> response payload.00Cc<code>automod.message.hold</code> response payload.00BgChannel Charity Campaign Start V1 EventDg<code>channel.charity_campaign.start</code>: a broadcaster starts a \xe2\x80\xa6010Ce<code>channel.prediction.end</code> response payload.00Cf<code>channel.shared_chat.end</code> response payload.00Cf<code>channel.shield_mode.end</code> response payload.00BcReply from ChannelSubscribeEventsV1BeChannel SuspicousUser Update V1 EventDk<code>channel.suspicious_user.update</code>: a suspicious user has been \xe2\x80\xa6010Ce<code>conduit.shard.disabled</code> response payload.0C`Body Parameters for Manage Held AutoMod Messages0BmQuery Parameters for Remove Channel Moderator0BeLocation to twitch Eventsub WebSocketBmQuery Parameters for Update Redemption Status0BnQuery Parameters for Update Shield Mode StatusBgSet if Channel Points voting is enabledCgIndicates if Channel Points can be used for voting. \xe2\x80\xa6CcIndicates if Channel Points can be used for voting.010CgArray of content classification label IDs currently \xe2\x80\xa60CjList of labels that should be set as the Channel\xe2\x80\x99s CCLs.B`The CCLs applied to the channel.101BmGet authenticated broadcasters\xe2\x80\x99 subscribersBoGet all of a broadcaster\xe2\x80\x99s subscriptions. \xe2\x80\xa6BmGet channel emotes in channel with user loginCdGets a list of markers from the specified VOD/video.ClOnly present when in a shared chat session. The login of \xe2\x80\xa60CkThe channel in which the action originally occurred. Is \xe2\x80\xa60111100CaPubSub messages for user moderation notificationsCf<code>automod.settings.update</code> response payload.00BhChannel Charity Campaign Donate V1 EventDg<code>channel.charity_campaign.donate</code>: a user donates to the \xe2\x80\xa6010Dd<code>channel.charity_campaign.progress</code>: progress is made \xe2\x80\xa60BgChannel Chat ClearUserMessages V1 EventDe<code>channel.chat.clear_user_messages</code>: a moderator or bot \xe2\x80\xa6010BgChannel Chat UserMessageUpdate V1 EventDi<code>channel.chat.user_message_update</code>: a user\xe2\x80\x99s message\xe2\x80\x99s \xe2\x80\xa6010BeChannel GuestStarSession End V1 EventDe<code>channel.guest_star_session.end</code>: a running Guest Star \xe2\x80\xa6010Di<code>channel.guest_star_settings.update</code>: the host preferences \xe2\x80\xa60Cg<code>channel.hype_train.begin</code> response payload.00BiChannel Points Custom Reward Add V1 EventDk<code>channel.channel_points_custom_reward.add</code>: a custom channel \xe2\x80\xa6010Cf<code>channel.prediction.lock</code> response payload.00Cf<code>channel.shoutout.create</code> response payload.00BfChannel SuspicousUser Message V1 EventDi<code>channel.suspicious_user.message</code>: a chat message has been \xe2\x80\xa6010C`Body Parameters for Create EventSub Subscription0BdPolitics and Sensitive Social IssuesBoQuery Parameters for Get User Active Extensions0CcErrors for ImplicitUserTokenBuilder::get_user_tokenBiManage a broadcaster\xe2\x80\x99s AutoMod settings0CgA verified phone number is required to chat in this \xe2\x80\xa60BjReturn Values for Remove Channel Moderator0BkStatus of multiple redemptions were changedCkThe length of time, in minutes, that the followers must \xe2\x80\xa600ClCreate a UserToken from an existing active user token or \xe2\x80\xa6CjGets the list of donations that users have made to the \xe2\x80\xa6ClFlag determining if Guest Star moderators have access to \xe2\x80\xa600BcConversion rates for participationsCjUpdate the settings for a channel\xe2\x80\x99s stream schedule. \xe2\x80\xa6BeReply from ChannelCheerEventsPublicV1BfChannel GuestStarGuest Update V1 EventDj<code>channel.guest_star_guest.update</code>: the host preferences for \xe2\x80\xa6010Cg<code>channel.moderator.remove</code> response payload.00Df<code>channel.channel_points_custom_reward.remove</code>: a custom \xe2\x80\xa60Df<code>channel.channel_points_custom_reward.update</code>: a custom \xe2\x80\xa60Cg<code>channel.prediction.begin</code> response payload.00Ch<code>channel.shared_chat.begin</code> response payload.00Ch<code>channel.shield_mode.begin</code> response payload.00Cg<code>channel.shoutout.receive</code> response payload.00Cg<code>channel.subscription.end</code> response payload.00C`Query Parameters for Get Channel Stream Schedule0BoQuery Parameters for Get EventSub Subscriptions0BoQuery Parameters for Modify Channel Information0BjSet the individual levels for each setting0Cg<code>user.authorization.grant</code> response payload.00CmThe client sent a non-pong message. Clients may only send \xe2\x80\xa60CkThe ID of a channel points custom reward that was redeemed.00CnFlag determining if browser sources subscribed to sessions \xe2\x80\xa600CmWhether a maximum per user per stream is enabled and what \xe2\x80\xa6000BbEvent data for broadcaster events.mType of eventBjChannel Charity Campaign Progress V1 EventDd<code>channel.charity_campaign.progress</code>: progress is made \xe2\x80\xa6010Ch<code>channel.chat.notification</code> response payload.00BgChannel GuestStarSession Begin V1 EventDh<code>channel.guest_star_session.begin</code>: the host begins a new \xe2\x80\xa6010Ci<code>channel.shared_chat.update</code> response payload.00Ch<code>channel.subscription.gift</code> response payload.00BmReturn Values for Get Channel Stream ScheduleCaQuery Parameters for Get Custom Reward Redemption0CaQuery Parameters for Manage Held AutoMod Messages0BkStatus of multiple redemptions were changedCh<code>user.authorization.revoke</code> response payload.00BfReply from UserModerationNotificationsCmGet the request for getting a <code>DeviceCodeResponse</code>Cj<code>channel.chat.message_delete</code> response payload.00Cj<code>channel.hype_train.progress</code> response payload.00BlChannel Points Custom Reward Remove V1 EventDf<code>channel.channel_points_custom_reward.remove</code>: a custom \xe2\x80\xa6010BlChannel Points Custom Reward Update V1 EventDf<code>channel.channel_points_custom_reward.update</code>: a custom \xe2\x80\xa6010CaQuery Parameters for Create EventSub Subscription0CbQuery Parameters for Delete EventSub Subscriptions0CfFIXME: Returns an object. Return Values for Update \xe2\x80\xa60CeTwitch failed to verify that you own the callback \xe2\x80\xa6BoThe specified callback URL failed verification.CgGet information about Twitch content classification \xe2\x80\xa6ChGets information about Twitch content classification \xe2\x80\xa6BnGet all moderators in a channel Get ModeratorsCmThe amount of time, in seconds, that messages are delayed \xe2\x80\xa6000DaErrors when retrieving <code>points</code> in Get Broadcaster \xe2\x80\xa6Ck<code>channel.chat_settings.update</code> response payload.00BiChannel GuestStarSettings Update V1 EventDi<code>channel.guest_star_settings.update</code>: the host preferences \xe2\x80\xa6010Cj<code>channel.prediction.progress</code> response payload.00Ck<code>channel.unban_request.create</code> response payload.00Cj<code>channel.warning.acknowledge</code> response payload.00ChReturn Values for Delete Channel Stream Schedule Segment0CbQuery Parameters for Get Broadcaster Subscriptions0CcQuery Parameters for Get Charity Campaign Donations0BaThe order to sort redemptions by.CcQuery Parameters for Update Channel Stream Schedule0CnTwitch is verifying that you own the callback specified in \xe2\x80\xa6CfThe shard is pending verification of the specified \xe2\x80\xa6CnWhether a maximum per user per stream is enabled. Defaults \xe2\x80\xa6000Cl<code>channel.charity_campaign.stop</code> response payload.00Cm<code>channel.chat.user_message_hold</code> response payload.00Ck<code>channel.subscription.message</code> response payload.00Cl<code>channel.unban_request.resolve</code> response payload.00CbGet all banned users in a channel Get Banned UsersBoParse the response from the device code requestCnThe number of redemptions redeemed during the current live \xe2\x80\xa6000000000000CcAmount of times this has been redeemed this stream.Cm<code>channel.charity_campaign.start</code> response payload.00Cm<code>channel.suspicious_user.update</code> response payload.00BjReturns a list of subscription events. \xe2\x80\xa6Cn<code>channel.charity_campaign.donate</code> response payload.00Co<code>channel.chat.clear_user_messages</code> response payload.00Co<code>channel.chat.user_message_update</code> response payload.00Cm<code>channel.guest_star_session.end</code> response payload.00Dg<code>channel.channel_points_custom_reward.add</code> response payload.00Cn<code>channel.suspicious_user.message</code> response payload.00CfQuery Parameters for Get Content Classification Labels0CmShould redemptions be set to fulfilled status immediately \xe2\x80\xa600000000CmShould redemptions be set to FULFILLED status immediately \xe2\x80\xa60000000AkDoes redemption skip queue?Cn<code>channel.guest_star_guest.update</code> response payload.00Dg<code>channel.channel_points_custom_reward_redemption.add</code>: a \xe2\x80\xa60CjBody Parameters for Create Channel Stream Schedule Segment0CjBody Parameters for Update Channel Stream Schedule SegmentCfCreate a single scheduled broadcast or a recurring \xe2\x80\xa6CfDelete a single scheduled broadcast or a recurring \xe2\x80\xa6CfUpdate a single scheduled broadcast or a recurring \xe2\x80\xa6D`<code>channel.charity_campaign.progress</code> response payload.00Co<code>channel.guest_star_session.begin</code> response payload.00CmA viewer has redeemed a custom channel points reward or a \xe2\x80\xa6CdChannel Points Custom Reward Redemption Add V1 Event9909De<code>channel.channel_points_custom_reward.remove</code> response \xe2\x80\xa600De<code>channel.channel_points_custom_reward.update</code> response \xe2\x80\xa600CiQuery Parameters for Get Broadcaster Subscriptions Events0Da<code>channel.guest_star_settings.update</code> response payload.00Dj<code>channel.channel_points_automatic_reward_redemption.add</code>: a \xe2\x80\xa60Dj<code>channel.channel_points_custom_reward_redemption.update</code>: a \xe2\x80\xa60CkQuery Parameters for Create Channel Stream Schedule Segment0CkQuery Parameters for Delete Channel Stream Schedule Segment0CkQuery Parameters for Update Channel Stream Schedule SegmentChReturn Values for Create Channel Stream Schedule SegmentChReturn Values for Update Channel Stream Schedule SegmentClA viewer has redeemed an automatic channel points reward \xe2\x80\xa6CgChannel Points Automatic Reward Redemption Add V1 EventDi<code>channel.channel_points_automatic_reward_redemption.add</code>:a \xe2\x80\xa6010CgChannel Points Custom Reward Redemption Update V1 Event9909CnGet information about Twitch content classification labels \xe2\x80\xa6Dd<code>channel.channel_points_custom_reward_redemption.add</code> \xe2\x80\xa600Dg<code>channel.channel_points_automatic_reward_redemption.add</code> \xe2\x80\xa600Dg<code>channel.channel_points_custom_reward_redemption.update</code> \xe2\x80\xa600")